;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	0D2743F3A06E2267F0AB4876CCB23A77
; Input	CRC32 :	165B0F70

; File Name   :	C:\Users\farhadi\Desktop\509_Malware\0d2743f3a06e2267f0ab4876ccb23a77
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	1000000
; Section 1. (virtual address 00001000)
; Virtual size			: 00007800 (  30720.)
; Section size in file		: 00007800 (  30720.)
; Offset to raw	data for section: 00000400
; Flags	E0000020: Text Executable Readable Writable
; Alignment	: default
;
; Imports from ADVAPI32.dll
;

		include	uni.inc	; see unicode subdir of	ida for	info on	unicode

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Externs
; _idata
; LSTATUS __stdcall RegQueryValueExW(HKEY hKey,	LPCWSTR	lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE	lpData,	LPDWORD	lpcbData)
		extrn __imp__RegQueryValueExW@24:dword ; CODE XREF: RegGetInt(x,x,x)+34p
					; RegGetString(x,x,x,x,x)+29p
					; DATA XREF: ...
; LSTATUS __stdcall RegCloseKey(HKEY hKey)
		extrn __imp__RegCloseKey@4:dword ; CODE	XREF: SaveGlobals()+24Cp
					; GetGlobals()+2A5p ...
; LSTATUS __stdcall RegCreateKeyW(HKEY hKey, LPCWSTR lpSubKey, PHKEY phkResult)
		extrn __imp__RegCreateKeyW@12:dword ; CODE XREF: SaveGlobals()+16p
					; GetGlobals()+3Bp
					; DATA XREF: ...
; BOOL __stdcall IsTextUnicode(const void *lpv,	int iSize, LPINT lpiResult)
		extrn __imp__IsTextUnicode@12:dword ; CODE XREF: IsInputTextUnicode(x,x)+14p
					; DATA XREF: IsInputTextUnicode(x,x)+14r
; LSTATUS __stdcall RegQueryValueExA(HKEY hKey,	LPCSTR lpValueName, LPDWORD lpReserved,	LPDWORD	lpType,	LPBYTE lpData, LPDWORD lpcbData)
		extrn __imp__RegQueryValueExA@24:dword ; CODE XREF: sub_100725F+40p
					; DATA XREF: sub_100725F+40r
; LSTATUS __stdcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY	phkResult)
		extrn __imp__RegOpenKeyExA@20:dword ; CODE XREF: sub_100725F+1Ep
					; DATA XREF: sub_100725F+1Er
; LSTATUS __stdcall RegSetValueExW(HKEY	hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE *lpData, DWORD cbData)
		extrn __imp__RegSetValueExW@24:dword ; CODE XREF: RegWriteInt(x,x,x)+15p
					; RegWriteString(x,x,x)+20p
					; DATA XREF: ...
		extrn _ADVAPI32_NULL_THUNK_DATA:byte:4
;
; Imports from COMCTL32.dll
;
; HWND __stdcall CreateStatusWindowW(LONG style, LPCWSTR lpszText, HWND	hwndParent, UINT wID)
		extrn __imp__CreateStatusWindowW@16:dword ; CODE XREF: NPInit(x,x,x,x)+23Fp
					; DATA XREF: NPInit(x,x,x,x)+23Fr ...
		extrn _COMCTL32_NULL_THUNK_DATA:byte:4
;
; Imports from GDI32.dll
;
; int __stdcall	EndPage(HDC hdc)
		extrn __imp__EndPage@4:dword ; CODE XREF: NpPrintGivenDC(x)+537p
					; NpPrintGivenDC(x)+5CAp
					; DATA XREF: ...
; int __stdcall	AbortDoc(HDC hdc)
		extrn __imp__AbortDoc@4:dword ;	CODE XREF: NpPrintGivenDC(x)+5F6p
					; DATA XREF: NpPrintGivenDC(x)+5F6r
; int __stdcall	EndDoc(HDC hdc)
		extrn __imp__EndDoc@4:dword ; CODE XREF: NpPrintGivenDC(x):loc_1006DA1p
					; DATA XREF: NpPrintGivenDC(x):loc_1006DA1r
; BOOL __stdcall DeleteDC(HDC hdc)
		extrn __imp__DeleteDC@4:dword ;	CODE XREF: NpPrintGivenDC(x)+64Ap
					; DATA XREF: NpPrintGivenDC(x)+64Ar
; int __stdcall	StartPage(HDC hdc)
		extrn __imp__StartPage@4:dword ; CODE XREF: NpPrintGivenDC(x)+4F0p
					; DATA XREF: NpPrintGivenDC(x)+4F0r
; BOOL __stdcall GetTextExtentPoint32W(HDC hdc,	LPCWSTR	lpString, int c, LPSIZE	psizl)
		extrn __imp__GetTextExtentPoint32W@16:dword
					; CODE XREF: PrintHeaderFooter(x,x)+91p
					; PrintHeaderFooter(x,x)+E6p
					; DATA XREF: ...
; HDC __stdcall	CreateDCW(LPCWSTR pwszDriver, LPCWSTR pwszDevice, LPCWSTR pszPort, const DEVMODEW *pdm)
		extrn __imp__CreateDCW@16:dword	; CODE XREF: GetPrinterDC()+7Cp
					; GetNonDefPrinterDC()+95p
					; DATA XREF: ...
; int __stdcall	SetAbortProc(HDC hdc, ABORTPROC	proc)
		extrn __imp__SetAbortProc@8:dword ; CODE XREF: NpPrintGivenDC(x)+2E4p
					; DATA XREF: NpPrintGivenDC(x)+2E4r
; int __stdcall	GetTextFaceW(HDC hdc, int c, LPWSTR lpName)
		extrn __imp__GetTextFaceW@12:dword ; CODE XREF:	NPInit(x,x,x,x)+326p
					; DATA XREF: NPInit(x,x,x,x)+326r
; BOOL __stdcall TextOutW(HDC hdc, int x, int y, LPCWSTR lpString, int c)
		extrn __imp__TextOutW@20:dword ; CODE XREF: PrintHeaderFooter(x,x)+71p
					; PrintHeaderFooter(x,x)+C5p ...
; int __stdcall	StartDocW(HDC hdc, const DOCINFOW *lpdi)
		extrn __imp__StartDocW@8:dword ; CODE XREF: NpPrintGivenDC(x)+3B2p
					; DATA XREF: NpPrintGivenDC(x)+3B2r
; int __stdcall	EnumFontsW(HDC hdc, LPCWSTR lpLogfont, FONTENUMPROCW lpProc, LPARAM lParam)
		extrn __imp__EnumFontsW@16:dword ; CODE	XREF: NPInit(x,x,x,x)+359p
					; DATA XREF: NPInit(x,x,x,x)+359r
; HGDIOBJ __stdcall GetStockObject(int i)
		extrn __imp__GetStockObject@4:dword ; CODE XREF: GetGlobals()+14p
					; DATA XREF: GetGlobals()+14r
; int __stdcall	GetObjectW(HANDLE h, int c, LPVOID pv)
		extrn __imp__GetObjectW@12:dword ; CODE	XREF: GetGlobals()+27p
					; DATA XREF: GetGlobals()+27r
; int __stdcall	GetDeviceCaps(HDC hdc, int index)
		extrn __imp__GetDeviceCaps@8:dword ; CODE XREF:	NPCommand(x,x,x)+4E7p
					; NPInit(x,x,x,x)+2E5p	...
; HFONT	__stdcall CreateFontIndirectW(const LOGFONTW *lplf)
		extrn __imp__CreateFontIndirectW@4:dword ; CODE	XREF: NPCommand(x,x,x)+570p
					; NPInit(x,x,x,x)+305p	...
; BOOL __stdcall DeleteObject(HGDIOBJ ho)
		extrn __imp__DeleteObject@4:dword ; CODE XREF: NPCommand(x,x,x)+582p
					; NPWndProc(x,x,x,x)+1CAp ...
; BOOL __stdcall GetTextMetricsW(HDC hdc, LPTEXTMETRICW	lptm)
		extrn __imp__GetTextMetricsW@8:dword ; CODE XREF: NpPrintGivenDC(x)+184p
					; NpPrintGivenDC(x)+1FCp
					; DATA XREF: ...
; int __stdcall	SetBkMode(HDC hdc, int mode)
		extrn __imp__SetBkMode@8:dword ; CODE XREF: NpPrintGivenDC(x)+170p
					; DATA XREF: NpPrintGivenDC(x)+170r
; BOOL __stdcall LPtoDP(HDC hdc, LPPOINT lppt, int c)
		extrn __imp__LPtoDP@12:dword ; CODE XREF: NpPrintGivenDC(x)+12Ep
					; DATA XREF: NpPrintGivenDC(x)+12Er
; BOOL __stdcall SetWindowExtEx(HDC hdc, int x,	int y, LPSIZE lpsz)
		extrn __imp__SetWindowExtEx@16:dword ; CODE XREF: NpPrintGivenDC(x)+10Ep
					; DATA XREF: NpPrintGivenDC(x)+10Er
; BOOL __stdcall SetViewportExtEx(HDC hdc, int x, int y, LPSIZE	lpsz)
		extrn __imp__SetViewportExtEx@16:dword ; CODE XREF: NpPrintGivenDC(x)+F4p
					; DATA XREF: NpPrintGivenDC(x)+F4r
; int __stdcall	SetMapMode(HDC hdc, int	iMode)
		extrn __imp__SetMapMode@8:dword	; CODE XREF: NpPrintGivenDC(x)+DEp
					; NpPrintGivenDC(x)+139p
					; DATA XREF: ...
; HGDIOBJ __stdcall SelectObject(HDC hdc, HGDIOBJ h)
		extrn __imp__SelectObject@8:dword ; CODE XREF: NPInit(x,x,x,x)+314p
					; NPInit(x,x,x,x)+332p	...
		extrn _GDI32_NULL_THUNK_DATA:byte:4
;
; Imports from KERNEL32.dll
;
; DWORD	__stdcall GetCurrentThreadId()
		extrn __imp__GetCurrentThreadId@0:dword
					; CODE XREF: ___security_init_cookie+31p
					; DATA XREF: ___security_init_cookie+31r ...
; DWORD	__stdcall GetTickCount()
		extrn __imp__GetTickCount@0:dword ; CODE XREF: ___security_init_cookie+39p
					; DATA XREF: ___security_init_cookie+39r
; BOOL __stdcall QueryPerformanceCounter(LARGE_INTEGER *lpPerformanceCount)
		extrn __imp__QueryPerformanceCounter@4:dword
					; CODE XREF: ___security_init_cookie+45p
					; DATA XREF: ___security_init_cookie+45r
; void __stdcall GetLocalTime(LPSYSTEMTIME lpSystemTime)
		extrn __imp__GetLocalTime@4:dword ; CODE XREF: NpPrintGivenDC(x)+63p
					; InsertDateTime(x)+54p
					; DATA XREF: ...
; LCID __stdcall GetUserDefaultLCID()
		extrn __imp__GetUserDefaultLCID@0:dword	; CODE XREF: NpPrintGivenDC(x)+69p
					; InsertDateTime(x)+35p
					; DATA XREF: ...
; int __stdcall	GetDateFormatW(LCID Locale, DWORD dwFlags, const SYSTEMTIME *lpDate, LPCWSTR lpFormat, LPWSTR lpDateStr, int cchDate)
		extrn __imp__GetDateFormatW@24:dword ; CODE XREF: NpPrintGivenDC(x)+85p
					; InsertDateTime(x)+AAp
					; DATA XREF: ...
; int __stdcall	GetTimeFormatW(LCID Locale, DWORD dwFlags, const SYSTEMTIME *lpTime, LPCWSTR lpFormat, LPWSTR lpTimeStr, int cchTime)
		extrn __imp__GetTimeFormatW@24:dword ; CODE XREF: NpPrintGivenDC(x)+9Ap
					; InsertDateTime(x)+C4p
					; DATA XREF: ...
; LPVOID __stdcall GlobalLock(HGLOBAL hMem)
		extrn __imp__GlobalLock@4:dword	; CODE XREF: GetPrinterDC()+57p
					; GetPrinterDC()+68p
					; DATA XREF: ...
; BOOL __stdcall GlobalUnlock(HGLOBAL hMem)
		extrn __imp__GlobalUnlock@4:dword ; CODE XREF: GetPrinterDC()+90p
					; GetPrinterDC()+9Cp
					; DATA XREF: ...
; BOOL __stdcall GetFileInformationByHandle(HANDLE hFile, LPBY_HANDLE_FILE_INFORMATION lpFileInformation)
		extrn __imp__GetFileInformationByHandle@8:dword
					; CODE XREF: LoadFile(x,x)+58p
					; DATA XREF: LoadFile(x,x)+58r
; HANDLE __stdcall CreateFileMappingW(HANDLE hFile, LPSECURITY_ATTRIBUTES lpFileMappingAttributes, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, LPCWSTR lpName)
		extrn __imp__CreateFileMappingW@24:dword ; CODE	XREF: LoadFile(x,x)+B5p
					; DATA XREF: LoadFile(x,x)+B5r
; void __stdcall GetSystemTimeAsFileTime(LPFILETIME lpSystemTimeAsFileTime)
		extrn __imp__GetSystemTimeAsFileTime@4:dword
					; CODE XREF: ___security_init_cookie+1Dp
					; DATA XREF: ___security_init_cookie+1Dr
; BOOL __stdcall TerminateProcess(HANDLE hProcess, UINT	uExitCode)
		extrn __imp__TerminateProcess@8:dword ;	CODE XREF: ___report_gsfailure+EFp
					; DATA XREF: ___report_gsfailure+EFr
; HANDLE __stdcall GetCurrentProcess()
		extrn __imp__GetCurrentProcess@0:dword ; CODE XREF: ___report_gsfailure+E8p
					; DATA XREF: ___report_gsfailure+E8r
; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
		extrn __imp__SetUnhandledExceptionFilter@4:dword
					; CODE XREF: ___report_gsfailure+D3p
					; DATA XREF: ___report_gsfailure+D3r
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn __imp__LoadLibraryA@4:dword ; CODE XREF: HtmlHelpA(x,x,x,x)+4Bp
					; HtmlHelpA(x,x,x,x)+61p
					; DATA XREF: ...
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn __imp__GetModuleHandleA@4:dword
; void __stdcall GetStartupInfoA(LPSTARTUPINFOA	lpStartupInfo)
		extrn __imp__GetStartupInfoA@4:dword ; CODE XREF: sub_10073AF+136p
					; DATA XREF: sub_10073AF+136r
; HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)
		extrn __imp__GlobalFree@4:dword	; CODE XREF: FreeGlobal()+11p
					; FreeGlobal()+1Dp
					; DATA XREF: ...
; int __stdcall	GetLocaleInfoW(LCID Locale, LCTYPE LCType, LPWSTR lpLCData, int	cchData)
		extrn __imp__GetLocaleInfoW@16:dword ; CODE XREF: SetPageSetupDefaults()+27p
					; DATA XREF: SetPageSetupDefaults()+27r
; HLOCAL __stdcall LocalFree(HLOCAL hMem)
		extrn __imp__LocalFree@4:dword ; CODE XREF: AlertBox(x,x,x,x,x)+57p
					; WinMain(x,x,x,x)+F4p	...
; HLOCAL __stdcall LocalAlloc(UINT uFlags, SIZE_T uBytes)
		extrn __imp__LocalAlloc@8:dword	; CODE XREF: AlertBox(x,x,x,x,x)+2Cp
					; SizeStrings(x)+56p ...
; int __stdcall	lstrlenW(LPCWSTR lpString)
		extrn __imp__lstrlenW@4:dword ;	CODE XREF: AlertBox(x,x,x,x,x)+16p
					; AlertBox(x,x,x,x,x)+21p ...
; BOOL __stdcall LocalUnlock(HLOCAL hMem)
		extrn __imp__LocalUnlock@4:dword ; CODE	XREF: ReplaceSel(x)+115p
					; New(x)+A1p ...
; int __stdcall	CompareStringW(LCID Locale, DWORD dwCmpFlags, LPCWSTR lpString1, int cchCount1,	LPCWSTR	lpString2, int cchCount2)
		extrn __imp__CompareStringW@24:dword ; CODE XREF: ReplaceSel(x)+C7p
					; ReverseScan(x,x,x,x)+8Bp ...
; LPVOID __stdcall LocalLock(HLOCAL hMem)
		extrn __imp__LocalLock@4:dword ; CODE XREF: ReplaceSel(x)+5Fp
					; New(x)+92p ...
; int __stdcall	FoldStringW(DWORD dwMapFlags, LPCWSTR lpSrcStr,	int cchSrc, LPWSTR lpDestStr, int cchDest)
		extrn __imp__FoldStringW@20:dword ; CODE XREF: GotoDlgProc(x,x,x,x)+94p
					; DATA XREF: GotoDlgProc(x,x,x,x)+94r
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn __imp__CloseHandle@4:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+2A1p
					; SaveFile(x,x,x)+216p	...
; LPWSTR __stdcall lstrcpyW(LPWSTR lpString1, LPCWSTR lpString2)
		extrn __imp__lstrcpyW@8:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+295p
					; CheckSave(x)+106p ...
; BOOL __stdcall ReadFile(HANDLE hFile,	LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
		extrn __imp__ReadFile@20:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+22Bp
					; DATA XREF: NpOpenDialogHookProc(x,x,x,x)+22Br
; HANDLE __stdcall CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD	dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
		extrn __imp__CreateFileW@28:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+201p
					; NPCommand(x,x,x)+223p ...
; int __stdcall	lstrcmpiW(LPCWSTR lpString1, LPCWSTR lpString2)
		extrn __imp__lstrcmpiW@8:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+1DAp
					; NPInit(x,x,x,x)+341p
					; DATA XREF: ...
; DWORD	__stdcall GetCurrentProcessId()
		extrn __imp__GetCurrentProcessId@0:dword ; CODE	XREF: WinMain(x,x,x,x)+59p
					; ___security_init_cookie+29p
					; DATA XREF: ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn __imp__GetProcAddress@8:dword ; CODE XREF: WinMain(x,x,x,x)+20p
					; HtmlHelpA(x,x,x,x)+7Bp
					; DATA XREF: ...
; LPWSTR __stdcall GetCommandLineW()
		extrn __imp__GetCommandLineW@0:dword ; CODE XREF: WinMain(x,x,x,x)+Ap
					; DATA XREF: WinMain(x,x,x,x)+Ar
; LPWSTR __stdcall lstrcatW(LPWSTR lpString1, LPCWSTR lpString2)
		extrn __imp__lstrcatW@8:dword ;	CODE XREF: SetTitle(x)+108p
					; AddExt(x)+43p ...
; BOOL __stdcall FindClose(HANDLE hFindFile)
		extrn __imp__FindClose@4:dword ; CODE XREF: SetTitle(x)+8Fp
					; GetFileName(x,x)+92p
					; DATA XREF: ...
; HANDLE __stdcall FindFirstFileW(LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData)
		extrn __imp__FindFirstFileW@8:dword ; CODE XREF: SetTitle(x)+68p
					; GetFileName(x,x)+75p	...
; DWORD	__stdcall GetFileAttributesW(LPCWSTR lpFileName)
		extrn __imp__GetFileAttributesW@4:dword	; CODE XREF: SetTitle(x)+5Ap
					; DATA XREF: SetTitle(x)+5Ar
; int __stdcall	lstrcmpW(LPCWSTR lpString1, LPCWSTR lpString2)
		extrn __imp__lstrcmpW@8:dword ;	CODE XREF: SetTitle(x)+36p
					; DATA XREF: SetTitle(x)+36r
; int __stdcall	MulDiv(int nNumber, int	nNumerator, int	nDenominator)
		extrn __imp__MulDiv@12:dword ; CODE XREF: NPCommand(x,x,x)+4F4p
					; NPInit(x,x,x,x)+2F2p
					; DATA XREF: ...
; LPWSTR __stdcall lstrcpynW(LPWSTR lpString1, LPCWSTR lpString2, int iMaxLength)
		extrn __imp__lstrcpynW@12:dword	; CODE XREF: NPCommand(x,x,x)+117p
					; NPCommand(x,x,x)+168p ...
; SIZE_T __stdcall LocalSize(HLOCAL hMem)
		extrn __imp__LocalSize@4:dword ; CODE XREF: InitStrings(x)+29p
					; DATA XREF: InitStrings(x)+29r
; DWORD	__stdcall GetLastError()
		extrn __imp__GetLastError@0:dword ; CODE XREF: ProcessSetupOption(x)+B0p
					; ProcessShellOptions(x,x)+E7p	...
; BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite,	LPDWORD	lpNumberOfBytesWritten,	LPOVERLAPPED lpOverlapped)
		extrn __imp__WriteFile@20:dword	; CODE XREF: AnsiWriteFile(x,x,x,x,x)+91p
					; SaveFile(x,x,x)+EDp ...
; void __stdcall SetLastError(DWORD dwErrCode)
		extrn __imp__SetLastError@4:dword ; CODE XREF: AnsiWriteFile(x,x,x,x,x)+61p
					; NpPrintGivenDC(x)+39Fp ...
; int __stdcall	WideCharToMultiByte(UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar, LPSTR	lpMultiByteStr,	int cbMultiByte, LPCSTR	lpDefaultChar, LPBOOL lpUsedDefaultChar)
		extrn __imp__WideCharToMultiByte@32:dword
					; CODE XREF: AnsiWriteFile(x,x,x,x,x)+44p
					; AnsiWriteFile(x,x,x,x,x)+7Dp	...
; HLOCAL __stdcall LocalReAlloc(HLOCAL hMem, SIZE_T uBytes, UINT uFlags)
		extrn __imp__LocalReAlloc@12:dword ; CODE XREF:	New(x)+7Dp
					; LoadFile(x,x)+277p
					; DATA XREF: ...
; DWORD	__stdcall FormatMessageW(DWORD dwFlags,	LPCVOID	lpSource, DWORD	dwMessageId, DWORD dwLanguageId, LPWSTR	lpBuffer, DWORD	nSize, va_list *Arguments)
		extrn __imp__FormatMessageW@28:dword ; CODE XREF: AlertUser_FileFail(x)+3Dp
					; PrintIt(x)+75p
					; DATA XREF: ...
; LANGID __stdcall GetUserDefaultUILanguage()
		extrn __imp__GetUserDefaultUILanguage@0:dword
					; CODE XREF: AlertUser_FileFail(x)+25p
					; PrintIt(x)+63p
					; DATA XREF: ...
; BOOL __stdcall SetEndOfFile(HANDLE hFile)
		extrn __imp__SetEndOfFile@4:dword ; CODE XREF: SaveFile(x,x,x)+25Bp
					; DATA XREF: SaveFile(x,x,x)+25Br
; BOOL __stdcall DeleteFileW(LPCWSTR lpFileName)
		extrn __imp__DeleteFileW@4:dword ; CODE	XREF: SaveFile(x,x,x)+239p
					; DATA XREF: SaveFile(x,x,x)+239r
; UINT __stdcall GetACP()
		extrn __imp__GetACP@0:dword ; CODE XREF: SaveFile(x,x,x)+FCp
					; DATA XREF: SaveFile(x,x,x)+FCr
; BOOL __stdcall UnmapViewOfFile(LPCVOID lpBaseAddress)
		extrn __imp__UnmapViewOfFile@4:dword ; CODE XREF: LoadFile(x,x)+2DDp
					; LoadFile(x,x)+498p
					; DATA XREF: ...
; int __stdcall	MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr,	int cchWideChar)
		extrn __imp__MultiByteToWideChar@24:dword ; CODE XREF: LoadFile(x,x)+226p
					; LoadFile(x,x)+429p
					; DATA XREF: ...
; LPVOID __stdcall MapViewOfFile(HANDLE	hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap)
		extrn __imp__MapViewOfFile@20:dword ; CODE XREF: LoadFile(x,x)+CBp
					; DATA XREF: LoadFile(x,x)+CBr
; LONG __stdcall UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
		extrn __imp__UnhandledExceptionFilter@4:dword
					; CODE XREF: ___report_gsfailure+DDp
					; DATA XREF: ___report_gsfailure+DDr
		extrn _KERNEL32_NULL_THUNK_DATA:byte:4
;
; Imports from SHELL32.dll
;
; void __stdcall DragFinish(HDROP hDrop)
		extrn __imp__DragFinish@4:dword	; CODE XREF: doDrop(x,x)+3Dp
					; DATA XREF: doDrop(x,x)+3Dr ...
; UINT __stdcall DragQueryFileW(HDROP hDrop, UINT iFile, LPWSTR	lpszFile, UINT cch)
		extrn __imp__DragQueryFileW@16:dword ; CODE XREF: doDrop(x,x)+15p
					; doDrop(x,x)+2Ap
					; DATA XREF: ...
; void __stdcall DragAcceptFiles(HWND hWnd, BOOL fAccept)
		extrn __imp__DragAcceptFiles@8:dword ; CODE XREF: NPInit(x,x,x,x)+1BDp
					; DATA XREF: NPInit(x,x,x,x)+1BDr
; INT __stdcall	ShellAboutW(HWND hWnd, LPCWSTR szApp, LPCWSTR szOtherStuff, HICON hIcon)
		extrn __imp__ShellAboutW@16:dword ; CODE XREF: NPCommand(x,x,x)+7DAp
					; DATA XREF: NPCommand(x,x,x)+7DAr
		extrn _SHELL32_NULL_THUNK_DATA:byte:4
;
; Imports from USER32.dll
;
; BOOL __stdcall GetClientRect(HWND hWnd, LPRECT lpRect)
		extrn __imp__GetClientRect@8:dword ; CODE XREF:	NPCommand(x,x,x)+6A1p
					; NPInit(x,x,x,x)+1D3p	...
; HCURSOR __stdcall SetCursor(HCURSOR hCursor)
		extrn __imp__SetCursor@4:dword ; CODE XREF: NPCommand(x,x,x)+56Dp
					; NPCommand(x,x,x)+5B0p ...
; int __stdcall	ReleaseDC(HWND hWnd, HDC hDC)
		extrn __imp__ReleaseDC@8:dword ; CODE XREF: NPCommand(x,x,x)+546p
					; NPInit(x,x,x,x)+38Cp
					; DATA XREF: ...
; HDC __stdcall	GetDC(HWND hWnd)
		extrn __imp__GetDC@4:dword ; CODE XREF:	NPCommand(x,x,x)+4AEp
					; NPInit(x,x,x,x)+53p
					; DATA XREF: ...
; INT_PTR __stdcall DialogBoxParamW(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc,	LPARAM dwInitParam)
		extrn __imp__DialogBoxParamW@20:dword ;	CODE XREF: NPCommand(x,x,x)+3B7p
					; DATA XREF: NPCommand(x,x,x)+3B7r
; HWND __stdcall SetActiveWindow(HWND hWnd)
		extrn __imp__SetActiveWindow@4:dword ; CODE XREF: doDrop(x,x)+2Fp
					; DATA XREF: doDrop(x,x)+2Fr
; HKL __stdcall	GetKeyboardLayout(DWORD	idThread)
		extrn __imp__GetKeyboardLayout@4:dword ; CODE XREF: NPWndProc(x,x,x,x)+3BBp
					; NPInit(x,x,x,x)+5D2p
					; DATA XREF: ...
; LRESULT __stdcall DefWindowProcW(HWND	hWnd, UINT Msg,	WPARAM wParam, LPARAM lParam)
		extrn __imp__DefWindowProcW@16:dword ; CODE XREF: NPWndProc(x,x,x,x)+3ADp
					; NPWndProc(x,x,x,x)+493p
					; DATA XREF: ...
; BOOL __stdcall DestroyWindow(HWND hWnd)
		extrn __imp__DestroyWindow@4:dword ; CODE XREF:	NPWndProc(x,x,x,x)+1BAp
					; NPWndProc(x,x,x,x)+1C2p ...
; BOOL __stdcall MessageBeep(UINT uType)
		extrn __imp__MessageBeep@4:dword ; CODE	XREF: NPWndProc(x,x,x,x)+13Cp
					; NPWndProc(x,x,x,x)+13Fp
					; DATA XREF: ...
; BOOL __stdcall ShowWindow(HWND hWnd, int nCmdShow)
		extrn __imp__ShowWindow@8:dword	; CODE XREF: NPCommand(x,x,x)+6BCp
					; NPCommand(x,x,x)+71Cp ...
; HWND __stdcall GetForegroundWindow()
		extrn __imp__GetForegroundWindow@0:dword ; CODE	XREF: NPWndProc(x,x,x,x)+81p
					; NPWndProc(x,x,x,x)+8Bp
					; DATA XREF: ...
; BOOL __stdcall IsIconic(HWND hWnd)
		extrn __imp__IsIconic@4:dword ;	CODE XREF: NPWndProc(x,x,x,x)+4Bp
					; NPWndProc(x,x,x,x)+71p
					; DATA XREF: ...
; BOOL __stdcall GetWindowPlacement(HWND hWnd, WINDOWPLACEMENT *lpwndpl)
		extrn __imp__GetWindowPlacement@8:dword	; CODE XREF: SaveGlobals()+1F7p
					; DATA XREF: SaveGlobals()+1F7r
; LPWSTR __stdcall CharUpperW(LPWSTR lpsz)
		extrn __imp__CharUpperW@4:dword	; CODE XREF: sub_1003F4C+1Fp
					; sub_1003F4C+2Cp ...
; int __stdcall	LoadStringW(HINSTANCE hInstance, UINT uID, LPWSTR lpBuffer, int	cchBufferMax)
		extrn __imp__LoadStringW@16:dword ; CODE XREF: SizeStrings(x)+29p
					; InitStrings(x)+48p
					; DATA XREF: ...
; HACCEL __stdcall LoadAcceleratorsW(HINSTANCE hInstance, LPCWSTR lpTableName)
		extrn __imp__LoadAcceleratorsW@8:dword
					; CODE XREF: ProcessSetupOption(x)+4Cp
					; NPInit(x,x,x,x)+A5p
					; DATA XREF: ...
; HMENU	__stdcall GetSystemMenu(HWND hWnd, BOOL	bRevert)
		extrn __imp__GetSystemMenu@8:dword ; CODE XREF:	ProcessSetupOption(x)+36p
					; AbortDlgProc(x,x,x,x)+46p
					; DATA XREF: ...
; ATOM __stdcall RegisterClassExW(const	WNDCLASSEXW *)
		extrn __imp__RegisterClassExW@4:dword ;	CODE XREF: sub_10044D7+79p
					; DATA XREF: sub_10044D7+79r
; HANDLE __stdcall LoadImageW(HINSTANCE	hInst, LPCWSTR name, UINT type,	int cx,	int cy,	UINT fuLoad)
		extrn __imp__LoadImageW@24:dword ; CODE	XREF: sub_10044D7+44p
					; DATA XREF: sub_10044D7+44r
; HCURSOR __stdcall LoadCursorW(HINSTANCE hInstance, LPCWSTR lpCursorName)
		extrn __imp__LoadCursorW@8:dword ; CODE	XREF: sub_10044D7+25p
					; NPInit(x,x,x,x)+8Bp ...
; BOOL __stdcall SetWindowPlacement(HWND hWnd, const WINDOWPLACEMENT *lpwndpl)
		extrn __imp__SetWindowPlacement@8:dword	; CODE XREF: NPInit(x,x,x,x)+1AEp
					; DATA XREF: NPInit(x,x,x,x)+1AEr
; HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int	X, int Y, int nWidth, int nHeight, HWND	hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
		extrn __imp__CreateWindowExW@48:dword ;	CODE XREF: NPInit(x,x,x,x)+12Fp
					; NPInit(x,x,x,x)+20Cp	...
; HWND __stdcall GetDesktopWindow()
		extrn __imp__GetDesktopWindow@0:dword ;	CODE XREF: NPCommand(x,x,x)+72Ep
					; DATA XREF: NPCommand(x,x,x)+72Er
; HWND __stdcall GetFocus()
		extrn __imp__GetFocus@0:dword ;	CODE XREF: NPCommand(x,x,x):loc_1003320p
					; DATA XREF: NPCommand(x,x,x):loc_1003320r
; HICON	__stdcall LoadIconW(HINSTANCE hInstance, LPCWSTR lpIconName)
		extrn __imp__LoadIconW@8:dword ; CODE XREF: NPCommand(x,x,x)+7C2p
					; sub_10044D7+31p
					; DATA XREF: ...
; BOOL __stdcall SetWindowTextW(HWND hWnd, LPCWSTR lpString)
		extrn __imp__SetWindowTextW@8:dword ; CODE XREF: SetTitle(x)+11Bp
					; DATA XREF: SetTitle(x)+11Br
; void __stdcall PostQuitMessage(int nExitCode)
		extrn __imp__PostQuitMessage@4:dword ; CODE XREF: NPWndProc(x,x,x,x)+FFp
					; DATA XREF: NPWndProc(x,x,x,x)+FFr
; UINT __stdcall RegisterWindowMessageW(LPCWSTR	lpString)
		extrn __imp__RegisterWindowMessageW@4:dword ; CODE XREF: NPInit(x,x,x,x)+2Dp
					; NPInit(x,x,x,x)+43p
					; DATA XREF: ...
; BOOL __stdcall UpdateWindow(HWND hWnd)
		extrn __imp__UpdateWindow@4:dword ; CODE XREF: LoadFile(x,x)+638p
					; DATA XREF: LoadFile(x,x)+638r
; int __stdcall	SetScrollPos(HWND hWnd,	int nBar, int nPos, BOOL bRedraw)
		extrn __imp__SetScrollPos@16:dword ; CODE XREF:	LoadFile(x,x)+612p
					; DATA XREF: LoadFile(x,x)+612r
; LPWSTR __stdcall CharLowerW(LPWSTR lpsz)
		extrn __imp__CharLowerW@4:dword	; CODE XREF: ReverseScan(x,x,x,x)+1Ep
					; ForwardScan(x,x,x)+26p
					; DATA XREF: ...
; BOOL __stdcall PeekMessageW(LPMSG lpMsg, HWND	hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg)
		extrn __imp__PeekMessageW@20:dword ; CODE XREF:	AbortProc(x,x)+16p
					; DATA XREF: AbortProc(x,x)+16r
; BOOL __stdcall EnableWindow(HWND hWnd, BOOL bEnable)
		extrn __imp__EnableWindow@8:dword ; CODE XREF: DestroyAbortWnd()+8p
					; NpPrintGivenDC(x)+349p
					; DATA XREF: ...
; int __stdcall	DrawTextExW(HDC	hdc, LPWSTR lpchText, int cchText, LPRECT lprc,	UINT format, LPDRAWTEXTPARAMS lpdtp)
		extrn __imp__DrawTextExW@24:dword ; CODE XREF: NpPrintGivenDC(x)+529p
					; DATA XREF: NpPrintGivenDC(x)+529r
; HWND __stdcall CreateDialogParamW(HINSTANCE hInstance, LPCWSTR lpTemplateName, HWND hWndParent, DLGPROC lpDialogFunc,	LPARAM dwInitParam)
		extrn __imp__CreateDialogParamW@20:dword ; CODE	XREF: NpPrintGivenDC(x)+363p
					; DATA XREF: NpPrintGivenDC(x)+363r
; int __stdcall	GetWindowTextW(HWND hWnd, LPWSTR lpString, int nMaxCount)
		extrn __imp__GetWindowTextW@12:dword ; CODE XREF: NpPrintGivenDC(x)+33Cp
					; DATA XREF: NpPrintGivenDC(x)+33Cr
; int __stdcall	GetSystemMetrics(int nIndex)
		extrn __imp__GetSystemMetrics@4:dword ;	CODE XREF: WinMain(x,x,x,x)+19p
					; sub_10044D7+12p ...
; BOOL __stdcall MoveWindow(HWND hWnd, int X, int Y, int nWidth, int nHeight, BOOL bRepaint)
		extrn __imp__MoveWindow@24:dword ; CODE	XREF: NPSize(x,x)+39p
					; DATA XREF: NPSize(x,x)+39r
; BOOL __stdcall InvalidateRect(HWND hWnd, const RECT *lpRect, BOOL bErase)
		extrn __imp__InvalidateRect@12:dword ; CODE XREF: NPSize(x,x)+Fp
					; LoadFile(x,x)+62Cp
					; DATA XREF: ...
; BOOL __stdcall WinHelpW(HWND hWndMain, LPCWSTR lpszHelp, UINT	uCommand, ULONG_PTR dwData)
		extrn __imp__WinHelpW@16:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x):loc_1001B86p
					; GotoDlgProc(x,x,x,x):loc_1002381p ...
; int __stdcall	GetDlgCtrlID(HWND hWnd)
		extrn __imp__GetDlgCtrlID@4:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+10Cp
					; NpSaveDialogHookProc(x,x,x,x)+136p ...
; HWND __stdcall ChildWindowFromPoint(HWND hWndParent, POINT Point)
		extrn __imp__ChildWindowFromPoint@12:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+103p
					; NpOpenDialogHookProc(x,x,x,x)+12Fp ...
; BOOL __stdcall ScreenToClient(HWND hWnd, LPPOINT lpPoint)
		extrn __imp__ScreenToClient@8:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+F4p
					; NpOpenDialogHookProc(x,x,x,x)+11Cp ...
; BOOL __stdcall GetCursorPos(LPPOINT lpPoint)
		extrn __imp__GetCursorPos@4:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+E7p
					; NpOpenDialogHookProc(x,x,x,x)+10Ep ...
; LRESULT __stdcall SendDlgItemMessageW(HWND hDlg, int nIDDlgItem, UINT	Msg, WPARAM wParam, LPARAM lParam)
		extrn __imp__SendDlgItemMessageW@20:dword
					; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+3Cp
					; NpSaveDialogHookProc(x,x,x,x)+6Bp ...
; LRESULT __stdcall SendMessageW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
		extrn __imp__SendMessageW@16:dword ; CODE XREF:	GotoAndScrollInView(x)+1Ep
					; GotoAndScrollInView(x)+32p ...
; LPWSTR __stdcall CharNextW(LPCWSTR lpsz)
		extrn __imp__CharNextW@4:dword ; CODE XREF: SkipProgramName(x)+2Fp
					; PFileInPath(x)+27p
					; DATA XREF: ...
; DWORD	__stdcall CheckMenuItem(HMENU hMenu, UINT uIDCheckItem,	UINT uCheck)
		extrn __imp__CheckMenuItem@12:dword ; CODE XREF: NpResetMenu(x)+16Ap
					; NpResetMenu(x)+181p ...
; BOOL __stdcall CloseClipboard()
		extrn __imp__CloseClipboard@0:dword ; CODE XREF: NpResetMenu(x)+BBp
					; DATA XREF: NpResetMenu(x)+BBr
; BOOL __stdcall IsClipboardFormatAvailable(UINT format)
		extrn __imp__IsClipboardFormatAvailable@4:dword
					; CODE XREF: NpResetMenu(x)+B2p
					; DATA XREF: NpResetMenu(x)+B2r
; BOOL __stdcall OpenClipboard(HWND hWndNewOwner)
		extrn __imp__OpenClipboard@4:dword ; CODE XREF:	NpResetMenu(x)+A6p
					; DATA XREF: NpResetMenu(x)+A6r
; UINT __stdcall GetMenuState(HMENU hMenu, UINT	uId, UINT uFlags)
		extrn __imp__GetMenuState@12:dword ; CODE XREF:	NpResetMenu(x)+88p
					; Search(x)+5Bp
					; DATA XREF: ...
; BOOL __stdcall EnableMenuItem(HMENU hMenu, UINT uIDEnableItem, UINT uEnable)
		extrn __imp__EnableMenuItem@12:dword ; CODE XREF: NpResetMenu(x)+5Cp
					; NpResetMenu(x)+6Cp ...
; HMENU	__stdcall GetSubMenu(HMENU hMenu, int nPos)
		extrn __imp__GetSubMenu@8:dword	; CODE XREF: NpResetMenu(x)+53p
					; NpResetMenu(x)+69p ...
; HMENU	__stdcall GetMenu(HWND hWnd)
		extrn __imp__GetMenu@4:dword ; CODE XREF: NpResetMenu(x)+15p
					; NPCommand(x,x,x)+352p ...
; int __stdcall	MessageBoxW(HWND hWnd, LPCWSTR lpText, LPCWSTR lpCaption, UINT uType)
		extrn __imp__MessageBoxW@16:dword ; CODE XREF: AlertBox(x,x,x,x,x)+4Ep
					; AlertBox(x,x,x,x,x)+6Bp ...
; LONG __stdcall SetWindowLongW(HWND hWnd, int nIndex, LONG dwNewLong)
		extrn __imp__SetWindowLongW@12:dword ; CODE XREF: GotoDlgProc(x,x,x,x)+14Dp
					; ProcessSetupOption(x)+64p ...
; LONG __stdcall GetWindowLongW(HWND hWnd, int nIndex)
		extrn __imp__GetWindowLongW@8:dword ; CODE XREF: GotoDlgProc(x,x,x,x)+13Ep
					; NpReCreate(x)+12Ap ...
; HWND __stdcall GetDlgItem(HWND hDlg, int nIDDlgItem)
		extrn __imp__GetDlgItem@8:dword	; CODE XREF: GotoDlgProc(x,x,x,x)+133p
					; DATA XREF: GotoDlgProc(x,x,x,x)+133r
; HWND __stdcall SetFocus(HWND hWnd)
		extrn __imp__SetFocus@4:dword ;	CODE XREF: GotoDlgProc(x,x,x,x)+121p
					; GotoDlgProc(x,x,x,x)+1B0p ...
; BOOL __stdcall SetDlgItemTextW(HWND hDlg, int	nIDDlgItem, LPCWSTR lpString)
		extrn __imp__SetDlgItemTextW@12:dword ;	CODE XREF: GotoDlgProc(x,x,x,x)+11Ap
					; GotoDlgProc(x,x,x,x)+1A9p ...
; int _wsprintfW(LPWSTR, LPCWSTR, ...)
		extrn __imp__wsprintfW:dword ; CODE XREF: GotoDlgProc(x,x,x,x)+108p
					; GotoDlgProc(x,x,x,x)+197p ...
; UINT __stdcall GetDlgItemTextW(HWND hDlg, int	nIDDlgItem, LPWSTR lpString, int cchMax)
		extrn __imp__GetDlgItemTextW@16:dword ;	CODE XREF: GotoDlgProc(x,x,x,x)+7Dp
					; PageSetupHookProc(x,x,x,x)+10Fp
					; DATA XREF: ...
; BOOL __stdcall EndDialog(HWND	hDlg, INT_PTR nResult)
		extrn __imp__EndDialog@8:dword ; CODE XREF: GotoDlgProc(x,x,x,x)+5Fp
					; DATA XREF: GotoDlgProc(x,x,x,x)+5Fr
; HWND __stdcall GetParent(HWND	hWnd)
		extrn __imp__GetParent@4:dword
					; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+1B8p
					; DATA XREF: NpOpenDialogHookProc(x,x,x,x)+1B8r
; BOOL __stdcall UnhookWinEvent(HWINEVENTHOOK hWinEventHook)
		extrn __imp__UnhookWinEvent@4:dword ; CODE XREF: WinMain(x,x,x,x)+FFp
					; DATA XREF: WinMain(x,x,x,x)+FFr
; LRESULT __stdcall DispatchMessageW(const MSG *lpMsg)
		extrn __imp__DispatchMessageW@4:dword ;	CODE XREF: WinMain(x,x,x,x)+D6p
					; AbortProc(x,x)+46p
					; DATA XREF: ...
; BOOL __stdcall TranslateMessage(const	MSG *lpMsg)
		extrn __imp__TranslateMessage@4:dword ;	CODE XREF: WinMain(x,x,x,x)+CCp
					; AbortProc(x,x)+3Cp
					; DATA XREF: ...
; int __stdcall	TranslateAcceleratorW(HWND hWnd, HACCEL	hAccTable, LPMSG lpMsg)
		extrn __imp__TranslateAcceleratorW@12:dword
					; CODE XREF: WinMain(x,x,x,x)+BEp
					; DATA XREF: WinMain(x,x,x,x)+BEr
; BOOL __stdcall IsDialogMessageW(HWND hDlg, LPMSG lpMsg)
		extrn __imp__IsDialogMessageW@8:dword ;	CODE XREF: WinMain(x,x,x,x)+A4p
					; AbortProc(x,x)+2Ep
					; DATA XREF: ...
; BOOL __stdcall PostMessageW(HWND hWnd, UINT Msg, WPARAM wParam, LPARAM lParam)
		extrn __imp__PostMessageW@16:dword ; CODE XREF:	WinMain(x,x,x,x)+90p
					; NPCommand(x,x,x):loc_1002E94p ...
; BOOL __stdcall GetMessageW(LPMSG lpMsg, HWND hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax)
		extrn __imp__GetMessageW@16:dword ; CODE XREF: WinMain(x,x,x,x)+E3p
					; DATA XREF: WinMain(x,x,x,x)+73r
; HWINEVENTHOOK	__stdcall SetWinEventHook(DWORD	eventMin, DWORD	eventMax, HMODULE hmodWinEventProc, WINEVENTPROC pfnWinEventProc, DWORD	idProcess, DWORD idThread, DWORD dwFlags)
		extrn __imp__SetWinEventHook@28:dword ;	CODE XREF: WinMain(x,x,x,x)+6Dp
					; DATA XREF: WinMain(x,x,x,x)+6Dr
		extrn _USER32_NULL_THUNK_DATA:byte:4
;
; Imports from WINSPOOL.DRV
;
; BOOL __stdcall GetPrinterDriverW(HANDLE hPrinter, LPWSTR pEnvironment, DWORD Level, LPBYTE pDriverInfo, DWORD	cbBuf, LPDWORD pcbNeeded)
		extrn __imp__GetPrinterDriverW@24:dword
					; DATA XREF: GetPrinterDriverW(x,x,x,x,x,x)r
					; .text:0100763Co
; BOOL __stdcall ClosePrinter(HANDLE hPrinter)
		extrn __imp__ClosePrinter@4:dword ; DATA XREF: ClosePrinter(x)r
; BOOL __stdcall OpenPrinterW(LPWSTR pPrinterName, LPHANDLE phPrinter, LPPRINTER_DEFAULTSW pDefault)
		extrn __imp__OpenPrinterW@12:dword ; DATA XREF:	OpenPrinterW(x,x,x)r
		extrn _WINSPOOL_NULL_THUNK_DATA:byte:4
;
; Imports from comdlg32.dll
;
; BOOL __stdcall PageSetupDlgW(LPPAGESETUPDLGW)
		extrn __imp__PageSetupDlgW@4:dword ; CODE XREF:	NPCommand(x,x,x)+2AFp
					; GetPrinterDCviaDialog()+2Ep ...
; HWND __stdcall FindTextW(LPFINDREPLACEW)
		extrn __imp__FindTextW@4:dword ; CODE XREF: NPCommand(x,x,x)+47Fp
					; DATA XREF: NPCommand(x,x,x)+47Fr
; HRESULT __stdcall PrintDlgExW(LPPRINTDLGEXW)
		extrn __imp__PrintDlgExW@4:dword ; CODE	XREF: GetPrinterDCviaDialog()+79p
					; DATA XREF: GetPrinterDCviaDialog()+79r
; BOOL __stdcall ChooseFontW(LPCHOOSEFONTW)
		extrn __imp__ChooseFontW@4:dword ; CODE	XREF: NPCommand(x,x,x)+553p
					; DATA XREF: NPCommand(x,x,x)+553r
; __int16 __stdcall GetFileTitleW(LPCWSTR, LPWSTR Buf, WORD cchSize)
		extrn __imp__GetFileTitleW@12:dword ; CODE XREF: SetTitle(x)+B9p
					; TranslateString(x)+2E0p
					; DATA XREF: ...
; BOOL __stdcall GetOpenFileNameW(LPOPENFILENAMEW)
		extrn __imp__GetOpenFileNameW@4:dword ;	CODE XREF: NPCommand(x,x,x)+1FCp
					; DATA XREF: NPCommand(x,x,x)+1FCr
; HWND __stdcall ReplaceTextW(LPFINDREPLACEW)
		extrn __imp__ReplaceTextW@4:dword ; CODE XREF: NPCommand(x,x,x)+41Fp
					; DATA XREF: NPCommand(x,x,x)+41Fr
; DWORD	__stdcall CommDlgExtendedError()
		extrn __imp__CommDlgExtendedError@0:dword
					; CODE XREF: SignalCommDlgError()+13p
					; CheckSave(x)+1C1p ...
; BOOL __stdcall GetSaveFileNameW(LPOPENFILENAMEW)
		extrn __imp__GetSaveFileNameW@4:dword ;	CODE XREF: CheckSave(x)+1ADp
					; NPCommand(x,x,x)+139p
					; DATA XREF: ...
		extrn _comdlg32_NULL_THUNK_DATA:byte:4
;
; Imports from msvcrt.dll
;
		extrn __imp___XcptFilter:dword ; DATA XREF: __XcptFilterr
					; .text:01007664o
; void __cdecl __exit(int Code)
		extrn __imp___exit:dword ; CODE	XREF: .text:0100754Bp
					; DATA XREF: .text:0100754Br
; void __cdecl __c_exit()
		extrn __imp___c_exit:dword ; CODE XREF:	.text:loc_1007551p
					; DATA XREF: .text:loc_1007551r
; time_t __cdecl _time(time_t *Time)
		extrn __imp__time:dword	; CODE XREF: TranslateString(x)+3Dp
					; DATA XREF: TranslateString(x)+3Dr
; struct tm *__cdecl _localtime(const time_t *Time)
		extrn __imp__localtime:dword ; CODE XREF: TranslateString(x)+4Ap
					; DATA XREF: TranslateString(x)+4Ar
; void __cdecl __cexit()
		extrn __imp___cexit:dword ; CODE XREF: .text:loc_1007522p
					; DATA XREF: .text:loc_1007522r
; int __cdecl _iswctype(wint_t C, wctype_t Type)
		extrn __imp__iswctype:dword ; CODE XREF: TranslateString(x)+24Ap
					; DATA XREF: TranslateString(x)+24Ar
		extrn __imp___except_handler3:dword ; DATA XREF: __except_handler3r
; __int32 __cdecl __wtol(const wchar_t *Str)
		extrn __imp___wtol:dword ; CODE	XREF: GotoDlgProc(x,x,x,x)+A1p
					; DATA XREF: GotoDlgProc(x,x,x,x)+A1r
; int __cdecl _wcsncmp(const wchar_t *Str1, const wchar_t *Str2, size_t	MaxCount)
		extrn __imp__wcsncmp:dword ; CODE XREF:	ReplaceSel(x)+95p
					; ReverseScan(x,x,x,x)+6Cp ...
; int __snwprintf(wchar_t *Dest, size_t	Count, const wchar_t *Format, ...)
		extrn __imp___snwprintf:dword ;	CODE XREF: UpdateStatusBar(x)+92p
					; SignalCommDlgError()+50p ...
; void __cdecl _exit(int Code)
		extrn __imp__exit:dword	; CODE XREF: .text:0100751Cp
					; DATA XREF: .text:0100751Cr
		extrn __imp___acmdln:dword
		extrn __imp____getmainargs:dword
		extrn __imp___initterm:dword ; DATA XREF: __inittermr
		extrn __imp____setusermatherr:dword
		extrn __imp___adjust_fdiv:dword
		extrn __imp____p__commode:dword
		extrn __imp____p__fmode:dword
		extrn __imp____set_app_type:dword
; unsigned int __cdecl __controlfp(unsigned int	NewValue, unsigned int Mask)
		extrn __imp___controlfp:dword ;	DATA XREF: __controlfpr
; wchar_t *__cdecl _wcsncpy(wchar_t *Dest, const wchar_t *Source, size_t Count)
		extrn __imp__wcsncpy:dword ; CODE XREF:	TranslateString(x)+201p
					; DATA XREF: TranslateString(x)+201r
		extrn _msvcrt_NULL_THUNK_DATA:byte:4

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Write/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 1001348h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		dd 3 dup(0)
		dd 48025287h, 0
		dd 2, 24h, 18F0h, 0CF0h
; ---------------------------------------------------------------------------

_s_SaveAsHelpIDs:			; DATA XREF: NpSaveDialogHookProc(x,x,x,x):loc_1001B48o
					; NpSaveDialogHookProc(x,x,x,x):loc_1001B76o ...
		add	[ecx], eax
; ---------------------------------------------------------------------------
		dw 0
		dd 3EAh, 103h, 3EAh, 2 dup(0)
; ---------------------------------------------------------------------------

_s_GotoHelpIDs:				; DATA XREF: GotoDlgProc(x,x,x,x):loc_1002361o
					; GotoDlgProc(x,x,x,x):loc_1002371o
		add	al, [ecx]
; ---------------------------------------------------------------------------
		dw 0
		dd 3EBh, 2 dup(0)
; const	WCHAR szOtherStuff
szOtherStuff	dw 0			; DATA XREF: NPCommand(x,x,x)+7C9o
					; NPInit(x,x,x,x)+10Co	...
		align 4
; const	WCHAR aD
aD:					; DATA XREF: GotoDlgProc(x,x,x,x)+102o
					; GotoDlgProc(x,x,x,x)+191o ...
		unicode	0, <%d>,0
		align 10h
aNpencodingdial:			; DATA XREF: CheckSave(x)+194o
					; NPCommand(x,x,x)+DBo	...
		unicode	0, <NpEncodingDialog>,0
		align 4
aTxt:					; DATA XREF: CheckSave(x)+176o
					; NPCommand(x,x,x)+F9o	...
		unicode	0, <txt>,0
; const	WCHAR a_txt_0
a_txt_0:				; DATA XREF: CheckSave(x)+D5o
					; NPCommand(x,x,x):loc_1002CA2o ...
		unicode	0, <*.txt>,0
; char ProcName[]
ProcName	db 'RegisterPenApp',0   ; DATA XREF: WinMain(x,x,x,x)+10o
		align 4
; char pszFile[]
pszFile		db 'notepad.chm',0      ; DATA XREF: NPCommand(x,x,x)+729o
; const	WCHAR aIwindowposdy
aIwindowposdy:				; DATA XREF: SaveGlobals()+23Co
					; GetGlobals()+271o
		unicode	0, <iWindowPosDY>,0
		align 10h
; const	WCHAR aIwindowposdx
aIwindowposdx:				; DATA XREF: SaveGlobals()+228o
					; GetGlobals()+25Eo
		unicode	0, <iWindowPosDX>,0
		align 4
; const	WCHAR aIwindowposy
aIwindowposy:				; DATA XREF: SaveGlobals()+214o
					; GetGlobals()+238o
		unicode	0, <iWindowPosY>,0
; const	WCHAR aIwindowposx
aIwindowposx:				; DATA XREF: SaveGlobals()+204o
					; GetGlobals()+24Bo
		unicode	0, <iWindowPosX>,0
; const	WCHAR aFmle_is_broken
aFmle_is_broken:			; DATA XREF: SaveGlobals()+1D9o
					; GetGlobals()+284o
		unicode	0, <fMLE_is_broken>,0
		align 4
; const	WCHAR aImarginright
aImarginright:				; DATA XREF: SaveGlobals()+1C6o
					; GetGlobals()+225o
		unicode	0, <iMarginRight>,0
		align 4
; const	WCHAR aImarginleft
aImarginleft:				; DATA XREF: SaveGlobals()+1B3o
					; GetGlobals()+20Do
		unicode	0, <iMarginLeft>,0
; const	WCHAR aImarginbottom
aImarginbottom:				; DATA XREF: SaveGlobals()+1A0o
					; GetGlobals()+1F5o
		unicode	0, <iMarginBottom>,0
; const	WCHAR aImargintop
aImargintop:				; DATA XREF: SaveGlobals()+18Do
					; GetGlobals()+1DDo
		unicode	0, <iMarginTop>,0
		align 4
; const	WCHAR aSztrailer
aSztrailer:				; DATA XREF: SaveGlobals()+17Ao
					; GetGlobals()+1CAo
		unicode	0, <szTrailer>,0
; const	WCHAR aSzheader
aSzheader:				; DATA XREF: SaveGlobals()+168o
					; GetGlobals()+1B4o
		unicode	0, <szHeader>,0
		align 4
; const	WCHAR aLffacename
aLffacename:				; DATA XREF: SaveGlobals()+156o
					; GetGlobals()+14Co
		unicode	0, <lfFaceName>,0
		align 4
; const	WCHAR aFsavewindowpos
aFsavewindowpos:			; DATA XREF: SaveGlobals()+144o
					; GetGlobals()+194o
		unicode	0, <fSaveWindowPositions>,0
		align 10h
; const	WCHAR aStatusbar
aStatusbar:				; DATA XREF: SaveGlobals()+131o
					; GetGlobals()+186o
		unicode	0, <StatusBar>,0
; const	WCHAR aFwrap
aFwrap:					; DATA XREF: SaveGlobals()+11Eo
					; GetGlobals()+16Eo
		unicode	0, <fWrap>,0
; const	WCHAR aIpointsize
aIpointsize:				; DATA XREF: SaveGlobals()+10Bo
					; GetGlobals()+160o
		unicode	0, <iPointSize>,0
		align 4
; const	WCHAR aLfpitchandfami
aLfpitchandfami:			; DATA XREF: SaveGlobals()+F8o
					; GetGlobals()+133o
		unicode	0, <lfPitchAndFamily>,0
		align 4
; const	WCHAR aLfquality
aLfquality:				; DATA XREF: SaveGlobals()+E3o
					; GetGlobals()+11Co
		unicode	0, <lfQuality>,0
; const	WCHAR aLfclipprecisio
aLfclipprecisio:			; DATA XREF: SaveGlobals()+CEo
					; GetGlobals()+105o
		unicode	0, <lfClipPrecision>,0
; const	WCHAR aLfoutprecision
aLfoutprecision:			; DATA XREF: SaveGlobals()+B9o
					; GetGlobals()+EEo
		unicode	0, <lfOutPrecision>,0
		align 10h
; const	WCHAR aLfcharset
aLfcharset:				; DATA XREF: SaveGlobals()+A4o
					; GetGlobals()+D7o
		unicode	0, <lfCharSet>,0
; const	WCHAR aLfstrikeout
aLfstrikeout:				; DATA XREF: SaveGlobals()+8Fo
					; GetGlobals()+C0o
		unicode	0, <lfStrikeOut>,0
; const	WCHAR aLfunderline
aLfunderline:				; DATA XREF: SaveGlobals()+7Ao
					; GetGlobals()+A9o
		unicode	0, <lfUnderline>,0
; const	WCHAR aLfitalic
aLfitalic:				; DATA XREF: SaveGlobals()+65o
					; GetGlobals()+92o
		unicode	0, <lfItalic>,0
		align 4
; const	WCHAR aLfweight
aLfweight:				; DATA XREF: SaveGlobals()+50o
					; GetGlobals()+7Bo
		unicode	0, <lfWeight>,0
		align 4
; const	WCHAR aLforientation
aLforientation:				; DATA XREF: SaveGlobals()+3Do
					; GetGlobals()+66o
		unicode	0, <lfOrientation>,0
; const	WCHAR aLfescapement
aLfescapement:				; DATA XREF: SaveGlobals()+2Ao
					; GetGlobals()+51o
		unicode	0, <lfEscapement>,0
		align 4
; const	WCHAR SubKey
SubKey:					; DATA XREF: SaveGlobals()+Co
					; GetGlobals()+31o
		unicode	0, <Software\Microsoft\Notepad>,0
		align 4
aLucidaConsole:				; DATA XREF: GetGlobals()+147o
		unicode	0, <Lucida Console>,0
		align 4
; const	WCHAR Text
Text:					; DATA XREF: InitStrings(x)+AAo
		unicode	0, <Out	of RC string space!!>,0
		align 10h
; const	WCHAR Caption
Caption:				; DATA XREF: InitStrings(x)+A5o
		unicode	0, <DEV	Error!>,0
		align 4
; const	WCHAR TableName
TableName:				; DATA XREF: ProcessSetupOption(x)+3Co
		unicode	0, <SlipUpAcc>,0
a_setup:				; DATA XREF: ProcessSetupOption(x)+10o
		unicode	0, </.SETUP>,0
aP:					; DATA XREF: ProcessShellOptions(x,x)+34o
		unicode	0, </P>,0
		align 4
aPt:					; DATA XREF: ProcessShellOptions(x,x)+Do
		unicode	0, </PT>,0
; const	WCHAR a_
a_:					; DATA XREF: CreateFilter(x)+46o
		unicode	0, <*.*>,0
aW:					; DATA XREF: NPInit(x,x,x,x)+40Ao
		unicode	0, </W>,0
		align 4
aA:					; DATA XREF: NPInit(x,x,x,x)+3F0o
		unicode	0, </A>,0
		align 4
; const	WCHAR ClassName
ClassName:				; DATA XREF: NPInit(x,x,x,x)+202o
					; NpReCreate(x)+EFo
		unicode	0, <Edit>,0
		align 10h
; const	WCHAR aMainacc
aMainacc:				; DATA XREF: NPInit(x,x,x,x)+9Ao
		unicode	0, <MainAcc>,0
; const	WCHAR aCommdlg_help
aCommdlg_help:				; DATA XREF: NPInit(x,x,x,x)+3Eo
		unicode	0, <commdlg_help>,0
		align 4
; const	WCHAR String
String:					; DATA XREF: NPInit(x,x,x,x)+22o
		unicode	0, <commdlg_FindReplace>,0
; const	WCHAR a_txt
a_txt:					; DATA XREF: AddExt(x)+3Do
		unicode	0, <.txt>,0
		align 10h
stru_1001800	_SCOPETABLE_ENTRY <0FFFFFFFFh, offset loc_10055C8, offset loc_10055CC>
					; DATA XREF: LoadFile(x,x)+5o
					; SEH scope table for function 1005179
_s_PageSetupHelpIDs dd 20h, 3E9h, 1Eh, 3E9h, 21h, 3E8h,	1Fh, 3E8h, 2 dup(0)
					; DATA XREF: PageSetupHookProc(x,x,x,x)+BFo
					; PageSetupHookProc(x,x,x,x)+EEo
; const	WCHAR asc_1001834
asc_1001834:				; DATA XREF: InsertDateTime(x)+EEo
		unicode	0, < >,0
; const	WCHAR asc_1001838
asc_1001838:				; DATA XREF: InsertDateTime(x)+CDo
		dw 0Dh,	0Ah, 0
		align 10h
; const	WCHAR word_1001840
word_1001840	dw 200Eh		; DATA XREF: InsertDateTime(x)+8Ao
		align 4
dword_1001844	dd 200Fh		; DATA XREF: InsertDateTime(x)+80o
; char LibFileName[11]
LibFileName	db 'hhctrl.ocx',0       ; DATA XREF: HtmlHelpA(x,x,x,x)+5Co
		align 4
; char aClsidAdb880a6D[]
aClsidAdb880a6D	db 'CLSID\{ADB880A6-D8FF-11CF-9377-00AA003B7A11}\InprocServer32',0
					; DATA XREF: sub_100725F+14o
; char ValueName[8]
ValueName	db 8 dup(0)		; DATA XREF: sub_100725F+38o
		dd 0FFFFFFFFh, 100752Ah, 100753Eh, 0
__load_config_used dd 48h		; Size
		dd 0			; Time stamp
		dw 2 dup(0)		; Version: 0.0
		dd 0			; GlobalFlagsClear
		dd 0			; GlobalFlagsSet
		dd 0			; CriticalSectionDefaultTimeout
		dd 0			; DeCommitFreeBlockThreshold
		dd 0			; DeCommitTotalFreeThreshold
		dd 0			; LockPrefixTable
		dd 0			; MaximumAllocationSize
		dd 0			; VirtualMemoryThreshold
		dd 0			; ProcessAffinityMask
		dd 0			; ProcessHeapFlags
		dw 0			; CSDVersion
		dw 0			; Reserved1
		dd 0			; EditList
		dd offset ___security_cookie ; SecurityCookie
		dd offset ___safe_se_handler_table ; SEHandlerTable
		dd 1			; SEHandlerCount
		dd 53445352h, 506F162Ch, 453BC6A5h, 55DB9E8Fh, 9BCD72AFh
		dd 1, 65746F6Eh, 2E646170h, 626470h, 3 dup(0)
___safe_se_handler_table dd rva	__except_handler3 ; DATA XREF: .text:010018E8o
		dd 0
		db 0

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	FreeGlobal()
_FreeGlobal@0	proc near		; CODE XREF: WinMain(x,x,x,x)+E9p
					; NPCommand(x,x,x):loc_1002E24p
		mov	eax, _g_PageSetupDlg.hDevMode
		test	eax, eax
		push	esi
		mov	esi, ds:__imp__GlobalFree@4 ; GlobalFree(x)
		jz	short loc_100193C
		push	eax		; hMem
		call	esi ; GlobalFree(x) ; GlobalFree(x)

loc_100193C:				; CODE XREF: FreeGlobal()+Ej
		mov	eax, _g_PageSetupDlg.hDevNames
		test	eax, eax
		jz	short loc_1001948
		push	eax		; hMem
		call	esi ; GlobalFree(x) ; GlobalFree(x)

loc_1001948:				; CODE XREF: FreeGlobal()+1Aj
		and	_g_PageSetupDlg.hDevMode, 0
		and	_g_PageSetupDlg.hDevNames, 0
		pop	esi
		retn
_FreeGlobal@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SetPageSetupDefaults()
_SetPageSetupDefaults@0	proc near	; CODE XREF: NPInit(x,x,x,x)+F8p

LCData		= word ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	2		; cchData
		lea	eax, [ebp+LCData]
		push	eax		; lpLCData
		push	0Dh		; LCType
		push	400h		; Locale
		mov	_g_PageSetupDlg.lpfnPageSetupHook, offset _PageSetupHookProc@16	; PageSetupHookProc(x,x,x,x)
		mov	_g_PageSetupDlg.lpPageSetupTemplateName, 0Ch
		call	ds:__imp__GetLocaleInfoW@16 ; GetLocaleInfoW(x,x,x,x)
		cmp	[ebp+LCData], 31h
		jnz	short loc_10019B1
		mov	eax, 3E8h
		mov	_g_PageSetupDlg.rtMargin.top, eax
		mov	_g_PageSetupDlg.rtMargin.bottom, eax
		mov	_g_PageSetupDlg.Flags, 0A006h
		mov	eax, 2EEh
		jmp	short loc_10019CF
; ---------------------------------------------------------------------------

loc_10019B1:				; CODE XREF: SetPageSetupDefaults()+32j
		mov	eax, 9C4h
		mov	_g_PageSetupDlg.rtMargin.top, eax
		mov	_g_PageSetupDlg.rtMargin.bottom, eax
		mov	_g_PageSetupDlg.Flags, 0A00Ah
		mov	eax, 7D0h

loc_10019CF:				; CODE XREF: SetPageSetupDefaults()+52j
		mov	_g_PageSetupDlg.rtMargin.left, eax
		mov	_g_PageSetupDlg.rtMargin.right,	eax
		leave
		retn
_SetPageSetupDefaults@0	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NPSize(int nWidth, int)
_NPSize@8	proc near		; CODE XREF: NPCommand(x,x,x)+6DCp
					; NPCommand(x,x,x)+709p ...

nWidth		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	1		; bErase
		push	0		; lpRect
		push	_hwndEdit	; hWnd
		call	ds:__imp__InvalidateRect@12 ; InvalidateRect(x,x,x)
		mov	eax, _fStatus
		mov	ecx, [ebp+arg_4]
		neg	eax
		sbb	eax, eax
		and	eax, _dyStatus
		push	1		; bRepaint
		sub	ecx, eax
		push	ecx		; nHeight
		push	[ebp+nWidth]	; nWidth
		push	0		; Y
		push	0		; X
		push	_hwndEdit	; hWnd
		call	ds:__imp__MoveWindow@24	; MoveWindow(x,x,x,x,x,x)
		pop	ebp
		retn	8
_NPSize@8	endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NpSaveDialogHookProc(HWND hWndParent, int, HWND	hWnd, int)
_NpSaveDialogHookProc@16 proc near	; DATA XREF: CheckSave(x)+18Ao
					; NPCommand(x,x,x)+E5o

Point		= tagPOINT ptr -8
hWndParent	= dword	ptr  8
arg_4		= dword	ptr  0Ch
hWnd		= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		mov	eax, [ebp+arg_4]
		sub	eax, 53h
		push	esi
		jz	loc_1001B58
		sub	eax, 28h
		jz	loc_1001B03
		sub	eax, 95h
		jz	short loc_1001A74
		dec	eax
		jnz	loc_1001B72
		push	0		; lParam
		push	0		; wParam
		push	147h		; Msg
		push	101h		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	ds:__imp__SendDlgItemMessageW@20 ; SendDlgItemMessageW(x,x,x,x,x)
		mov	_g_ftSaveAs, eax
		jmp	loc_1001B72
; ---------------------------------------------------------------------------

loc_1001A74:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+22j
		mov	esi, ds:__imp__SendDlgItemMessageW@20 ;	SendDlgItemMessageW(x,x,x,x,x)
		push	ebx
		push	edi
		push	_szFtAnsi	; lParam
		mov	ebx, 143h
		push	0		; wParam
		push	ebx		; Msg
		mov	edi, 101h
		push	edi		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUnicode	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUnicodeBe	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUtf8	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		mov	eax, _g_ftOpenedAs
		mov	ecx, _szFtAnsi
		mov	_g_ftSaveAs, eax
		dec	eax
		jz	short loc_1001AEB
		dec	eax
		jz	short loc_1001AE3
		dec	eax
		jnz	short loc_1001AF1
		mov	ecx, _szFtUtf8
		jmp	short loc_1001AF1
; ---------------------------------------------------------------------------

loc_1001AE3:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+AEj
		mov	ecx, _szFtUnicodeBe
		jmp	short loc_1001AF1
; ---------------------------------------------------------------------------

loc_1001AEB:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+ABj
		mov	ecx, _szFtUnicode

loc_1001AF1:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+B1j
					; NpSaveDialogHookProc(x,x,x,x)+B9j ...
		push	ecx		; lParam
		push	0FFFFFFFFh	; wParam
		push	14Dh		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+hWndParent] ; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		pop	edi
		pop	ebx
		jmp	short loc_1001B72
; ---------------------------------------------------------------------------

loc_1001B03:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+17j
		mov	esi, [ebp+hWnd]
		cmp	[ebp+hWndParent], esi
		jnz	short loc_1001B33
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		call	ds:__imp__GetCursorPos@4 ; GetCursorPos(x)
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		push	[ebp+hWndParent] ; hWnd
		call	ds:__imp__ScreenToClient@8 ; ScreenToClient(x,x)
		push	[ebp+Point.y]
		push	[ebp+Point.x]	; Point
		push	[ebp+hWndParent] ; hWndParent
		call	ds:__imp__ChildWindowFromPoint@12 ; ChildWindowFromPoint(x,x,x)
		mov	esi, eax

loc_1001B33:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+E1j
		push	esi		; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 101h
		jz	short loc_1001B48
		cmp	eax, 103h
		jnz	short loc_1001B72

loc_1001B48:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+117j
		push	offset _s_SaveAsHelpIDs
		push	0Ah
		push	dword ptr _szHelpFile
		push	esi
		jmp	short loc_1001B86
; ---------------------------------------------------------------------------

loc_1001B58:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+Ej
		mov	esi, [ebp+arg_C]
		push	dword ptr [esi+0Ch] ; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 101h
		jz	short loc_1001B76
		cmp	eax, 103h
		jz	short loc_1001B76

loc_1001B72:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+25j
					; NpSaveDialogHookProc(x,x,x,x)+47j ...
		xor	eax, eax
		jmp	short loc_1001B8F
; ---------------------------------------------------------------------------

loc_1001B76:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+141j
					; NpSaveDialogHookProc(x,x,x,x)+148j
		push	offset _s_SaveAsHelpIDs	; dwData
		push	0Ch		; uCommand
		push	dword ptr _szHelpFile ;	lpszHelp
		push	dword ptr [esi+0Ch] ; hWndMain

loc_1001B86:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+12Ej
		call	ds:__imp__WinHelpW@16 ;	WinHelpW(x,x,x,x)
		xor	eax, eax
		inc	eax

loc_1001B8F:				; CODE XREF: NpSaveDialogHookProc(x,x,x,x)+14Cj
		pop	esi
		leave
		retn	10h
_NpSaveDialogHookProc@16 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall GotoAndScrollInView(x)
_GotoAndScrollInView@4 proc near	; CODE XREF: NPCommand(x,x,x)+3CBp
					; ClearFmt()+1Ep ...

arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	0		; lParam
		dec	eax
		push	eax		; wParam
		push	0BBh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		jz	short loc_1001BDE
		push	eax		; lParam
		push	eax		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1001BDE:				; CODE XREF: GotoAndScrollInView(x)+23j
		pop	esi
		pop	ebp
		retn	4
_GotoAndScrollInView@4 endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SkipProgramName(LPCWSTR	lpsz)
_SkipProgramName@4 proc	near		; CODE XREF: WinMain(x,x,x,x)+39p

lpsz		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+lpsz]
		push	esi
		xor	esi, esi
		xor	ecx, ecx
		jmp	short loc_1001C1D
; ---------------------------------------------------------------------------

loc_1001BF7:				; CODE XREF: SkipProgramName(x)+3Bj
		cmp	cx, 20h
		jz	short loc_1001C03
		cmp	cx, 9
		jnz	short loc_1001C07

loc_1001C03:				; CODE XREF: SkipProgramName(x)+13j
		test	esi, esi
		jz	short loc_1001C25

loc_1001C07:				; CODE XREF: SkipProgramName(x)+19j
		cmp	cx, 22h
		jnz	short loc_1001C16
		xor	ecx, ecx
		test	esi, esi
		setz	cl
		mov	esi, ecx

loc_1001C16:				; CODE XREF: SkipProgramName(x)+23j
		push	eax		; lpsz
		call	ds:__imp__CharNextW@4 ;	CharNextW(x)

loc_1001C1D:				; CODE XREF: SkipProgramName(x)+Dj
		mov	cx, [eax]
		test	cx, cx
		jnz	short loc_1001BF7

loc_1001C25:				; CODE XREF: SkipProgramName(x)+1Dj
		pop	esi

loc_1001C26:				; CODE XREF: SkipProgramName(x)+4Fj
		mov	cx, [eax]
		cmp	cx, 20h
		jz	short loc_1001C35
		cmp	cx, 9
		jnz	short loc_1001C39

loc_1001C35:				; CODE XREF: SkipProgramName(x)+45j
		inc	eax
		inc	eax
		jmp	short loc_1001C26
; ---------------------------------------------------------------------------

loc_1001C39:				; CODE XREF: SkipProgramName(x)+4Bj
		pop	ebp
		retn	4
_SkipProgramName@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall UpdateStatusBar(x)
_UpdateStatusBar@4 proc	near		; CODE XREF: WinEventFunc(x,x,x,x,x,x,x)+2p
					; NPCommand(x,x,x)+70Fp ...

lParam		= dword	ptr -10Ch
wParam		= dword	ptr -108h
Dest		= word ptr -104h
var_6		= word ptr -6
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 10Ch
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	edi
		mov	[ebp+var_4], eax
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	0		; lParam
		push	[ebp+wParam]	; wParam
		push	0C9h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	edi, eax
		push	0		; lParam
		inc	edi
		lea	eax, [edi-1]
		push	eax		; wParam
		push	0BBh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	ebx, [ebp+wParam]
		sub	ebx, eax
		inc	ebx
		cmp	[ebp+arg_0], 0
		jnz	short loc_1001CC3
		cmp	ebx, dword_1009624
		jnz	short loc_1001CC3
		cmp	edi, dword_1009620
		jz	short loc_1001CFC

loc_1001CC3:				; CODE XREF: UpdateStatusBar(x)+6Fj
					; UpdateStatusBar(x)+77j
		push	ebx
		push	edi
		push	_szLineCol	; Format
		lea	eax, [ebp+Dest]
		push	7Fh		; Count
		push	eax		; Dest
		call	ds:__imp___snwprintf
		mov	eax, _hwndStatus
		and	[ebp+var_6], 0
		add	esp, 14h
		test	eax, eax
		jz	short loc_1001CFC
		lea	ecx, [ebp+Dest]
		push	ecx		; lParam
		push	1		; wParam
		push	40Bh		; Msg
		push	eax		; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1001CFC:				; CODE XREF: UpdateStatusBar(x)+7Fj
					; UpdateStatusBar(x)+A7j
		mov	ecx, [ebp+var_4]
		mov	dword_1009620, edi
		pop	edi
		pop	esi
		mov	dword_1009624, ebx
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_UpdateStatusBar@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; void __stdcall WinEventFunc(HWINEVENTHOOK, DWORD, HWND, LONG,	LONG, DWORD, DWORD)
_WinEventFunc@28 proc near		; DATA XREF: WinMain(x,x,x,x)+60o
		push	0
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)
		retn	1Ch
_WinEventFunc@28 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	PFileInPath(LPCWSTR lpsz)
_PFileInPath@4	proc near		; CODE XREF: AbortDlgProc(x,x,x,x)+66p

lpsz		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, [ebp+lpsz]
		xor	ecx, ecx
		mov	cx, [esi]
		test	cx, cx
		push	edi
		mov	edi, esi
		mov	eax, esi
		jz	short loc_1001D66

loc_1001D43:				; CODE XREF: PFileInPath(x)+33j
		cmp	cx, 3Ah
		jz	short loc_1001D4F
		cmp	cx, 5Ch
		jnz	short loc_1001D51

loc_1001D4F:				; CODE XREF: PFileInPath(x)+1Cj
		mov	edi, eax

loc_1001D51:				; CODE XREF: PFileInPath(x)+22j
		push	eax		; lpsz
		call	ds:__imp__CharNextW@4 ;	CharNextW(x)
		mov	cx, [eax]
		test	cx, cx
		jnz	short loc_1001D43
		cmp	edi, esi
		jz	short loc_1001D66
		inc	edi
		inc	edi

loc_1001D66:				; CODE XREF: PFileInPath(x)+16j
					; PFileInPath(x)+37j
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		retn	4
_PFileInPath@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NpResetMenu(HWND hWndNewOwner)
_NpResetMenu@4	proc near		; CODE XREF: NPWndProc(x,x,x,x)+450p

lParam		= dword	ptr -10h
wParam		= dword	ptr -0Ch
var_8		= dword	ptr -8
uEnable		= dword	ptr -4
hWndNewOwner	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		and	[ebp+var_8], 0
		push	ebx
		push	esi
		push	edi
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		mov	ebx, eax
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	ecx, [ebp+wParam]
		mov	esi, ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		xor	eax, eax
		cmp	ecx, [ebp+lParam]
		setz	al
		push	eax		; uEnable
		push	300h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		mov	[ebp+uEnable], eax
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		mov	edi, ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	[ebp+uEnable]	; uEnable
		push	301h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	[ebp+uEnable]	; uEnable
		push	303h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	0		; uFlags
		push	19h		; uId
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__GetMenuState@12 ; GetMenuState(x,x,x)
		cmp	eax, 1
		jnz	short loc_1001E16
		cmp	[ebp+uEnable], eax
		jnz	short loc_1001E16
		push	0		; uEnable
		push	19h		; uIDEnableItem
		push	eax		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)

loc_1001E16:				; CODE XREF: NpResetMenu(x)+91j
					; NpResetMenu(x)+96j
		push	[ebp+hWndNewOwner] ; hWndNewOwner
		call	ds:__imp__OpenClipboard@4 ; OpenClipboard(x)
		test	eax, eax
		jz	short loc_1001E34
		push	1		; format
		call	ds:__imp__IsClipboardFormatAvailable@4 ; IsClipboardFormatAvailable(x)
		mov	[ebp+var_8], eax
		call	ds:__imp__CloseClipboard@0 ; CloseClipboard()

loc_1001E34:				; CODE XREF: NpResetMenu(x)+AEj
		xor	eax, eax
		cmp	[ebp+var_8], eax
		setz	al
		push	eax		; uEnable
		push	302h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0Eh		; Msg
		push	_hwndEdit	; hWnd
		mov	[ebp+uEnable], 1
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		test	eax, eax
		jz	short loc_1001E6B
		and	[ebp+uEnable], 0

loc_1001E6B:				; CODE XREF: NpResetMenu(x)+F2j
		push	[ebp+uEnable]	; uEnable
		push	15h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	[ebp+uEnable]	; uEnable
		push	16h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		xor	eax, eax
		cmp	_fWrap,	eax
		setnz	al
		push	eax		; uEnable
		push	18h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0C6h		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		xor	ecx, ecx
		test	eax, eax
		setz	cl
		push	ecx		; uEnable
		push	10h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; EnableMenuItem(x,x,x) ; EnableMenuItem(x,x,x)
		mov	eax, _fWrap
		neg	eax
		sbb	eax, eax
		and	eax, 8
		push	eax		; uCheck
		push	20h		; uIDCheckItem
		push	2		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		mov	edi, ds:__imp__CheckMenuItem@12	; CheckMenuItem(x,x,x)
		push	eax		; hMenu
		call	edi ; CheckMenuItem(x,x,x) ; CheckMenuItem(x,x,x)
		mov	eax, _fStatus
		neg	eax
		sbb	eax, eax
		and	eax, 8
		push	eax		; uCheck
		push	1Bh		; uIDCheckItem
		push	3		; nPos
		push	ebx		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	edi ; CheckMenuItem(x,x,x) ; CheckMenuItem(x,x,x)
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	4
_NpResetMenu@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall MergeStrings(x, x, x)
_MergeStrings@12 proc near		; CODE XREF: AlertBox(x,x,x,x,x)+3Fp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+arg_8]
		push	edi
		push	2
		pop	edi
		jmp	short loc_1001F25
; ---------------------------------------------------------------------------

loc_1001F13:				; CODE XREF: MergeStrings(x,x,x)+2Dj
		mov	dx, [ecx]
		mov	[eax], dx
		mov	dx, [ecx]
		add	eax, edi
		add	ecx, edi
		test	dx, dx
		jz	short loc_1001F3B

loc_1001F25:				; CODE XREF: MergeStrings(x,x,x)+Fj
		mov	dx, [ecx]
		cmp	dx, _chMerge
		jnz	short loc_1001F13
		push	esi
		mov	esi, [ebp+arg_4]
		test	esi, esi
		jz	short loc_1001F50
		jmp	short loc_1001F48
; ---------------------------------------------------------------------------

loc_1001F3B:				; CODE XREF: MergeStrings(x,x,x)+21j
		xor	eax, eax
		jmp	short loc_1001F66
; ---------------------------------------------------------------------------

loc_1001F3F:				; CODE XREF: MergeStrings(x,x,x)+4Cj
		mov	[eax], dx
		add	eax, edi
		add	esi, edi
		xor	edx, edx

loc_1001F48:				; CODE XREF: MergeStrings(x,x,x)+37j
		mov	dx, [esi]
		test	dx, dx
		jnz	short loc_1001F3F

loc_1001F50:				; CODE XREF: MergeStrings(x,x,x)+35j
		add	ecx, 4
		pop	esi

loc_1001F54:				; CODE XREF: MergeStrings(x,x,x)+5Fj
		mov	dx, [ecx]
		mov	[eax], dx
		add	eax, edi
		add	ecx, edi
		test	dx, dx
		jnz	short loc_1001F54
		xor	eax, eax
		inc	eax

loc_1001F66:				; CODE XREF: MergeStrings(x,x,x)+3Bj
		pop	edi
		pop	ebp
		retn	0Ch
_MergeStrings@12 endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	AlertBox(HWND hWnd, LPCWSTR lpCaption, LPCWSTR lpText, LPCWSTR lpString, UINT uType)
_AlertBox@20	proc near		; CODE XREF: CheckSave(x)+B3p
					; ProcessSetupOption(x)+D9p ...

hWnd		= dword	ptr  8
lpCaption	= dword	ptr  0Ch
lpText		= dword	ptr  10h
lpString	= dword	ptr  14h
uType		= dword	ptr  18h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		cmp	[ebp+lpString],	0
		push	esi
		mov	esi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		push	edi
		jz	short loc_1001F8C
		push	[ebp+lpString]	; lpString
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		mov	edi, eax
		jmp	short loc_1001F8E
; ---------------------------------------------------------------------------

loc_1001F8C:				; CODE XREF: AlertBox(x,x,x,x,x)+11j
		xor	edi, edi

loc_1001F8E:				; CODE XREF: AlertBox(x,x,x,x,x)+1Aj
		push	[ebp+lpText]	; lpString
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		add	eax, edi
		lea	eax, [eax+eax+2]
		push	eax		; uBytes
		push	40h		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		mov	esi, eax
		test	esi, esi
		jz	short loc_1001FCF
		push	esi
		push	[ebp+lpString]
		push	[ebp+lpText]
		call	_MergeStrings@12 ; MergeStrings(x,x,x)
		push	[ebp+uType]	; uType
		push	[ebp+lpCaption]	; lpCaption
		push	esi		; lpText
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		push	esi		; hMem
		mov	edi, eax
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		jmp	short loc_1001FE3
; ---------------------------------------------------------------------------

loc_1001FCF:				; CODE XREF: AlertBox(x,x,x,x,x)+36j
		push	[ebp+uType]	; uType
		push	[ebp+lpCaption]	; lpCaption
		push	[ebp+lpText]	; lpText
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		mov	edi, eax

loc_1001FE3:				; CODE XREF: AlertBox(x,x,x,x,x)+5Dj
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebp
		retn	14h
_AlertBox@20	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SignalCommDlgError()
_SignalCommDlgError@0 proc near		; CODE XREF: NPCommand(x,x,x):loc_1002CFDp
					; NPCommand(x,x,x):loc_1002DE6p

Dest		= word ptr -194h
var_4		= dword	ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 194h
		mov	eax, ___security_cookie
		mov	[ebp+var_4], eax
		call	ds:__imp__CommDlgExtendedError@0 ; CommDlgExtendedError()
		test	eax, eax
		jz	short loc_1002070
		xor	ecx, ecx
		xor	edx, edx

loc_1002011:				; CODE XREF: SignalCommDlgError()+37j
		cmp	eax, _maperror[edx]
		jnz	short loc_1002021
		mov	ecx, off_10091A4[edx]
		mov	ecx, [ecx]

loc_1002021:				; CODE XREF: SignalCommDlgError()+27j
		add	edx, 8
		cmp	edx, 40h
		jb	short loc_1002011
		test	ecx, ecx
		jnz	short loc_100204F
		push	eax
		push	_szCommDlgErr	; Format
		lea	eax, [ebp+Dest]
		push	0C7h		; Count
		push	eax		; Dest
		call	ds:__imp___snwprintf
		add	esp, 10h
		lea	ecx, [ebp+Dest]

loc_100204F:				; CODE XREF: SignalCommDlgError()+3Bj
		cmp	word ptr [ecx],	0
		jz	short loc_100206D
		push	1010h		; uType
		push	_szNN		; lpCaption
		push	ecx		; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)

loc_100206D:				; CODE XREF: SignalCommDlgError()+63j
		xor	eax, eax
		inc	eax

loc_1002070:				; CODE XREF: SignalCommDlgError()+1Bj
		mov	ecx, [ebp+var_4]
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn
_SignalCommDlgError@0 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall ReplaceSel(x)
_ReplaceSel@4	proc near		; CODE XREF: NPWndProc(x,x,x,x)+2F6p
					; NPWndProc(x,x,x,x)+348p

hMem		= dword	ptr -14h
var_10		= dword	ptr -10h
lParam		= dword	ptr -0Ch
wParam		= dword	ptr -8
cchCount1	= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		push	ebx
		push	esi
		push	_FR.lpstrReplaceWith ; lpString
		mov	esi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	_FR.lpstrFindWhat ; lpString
		mov	[ebp+var_10], eax
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	[ebp+cchCount1], eax
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		xor	ebx, ebx
		push	ebx		; lParam
		push	ebx		; wParam
		push	0BDh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	eax, ebx
		mov	[ebp+hMem], eax
		jz	loc_100219B
		push	edi
		push	eax		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		mov	edi, eax
		cmp	edi, ebx
		jz	loc_100219A
		mov	ecx, [ebp+lParam]
		mov	eax, [ebp+wParam]
		sub	ecx, eax
		cmp	ecx, [ebp+cchCount1]
		jnz	loc_1002191
		cmp	_fCase,	ebx
		jz	short loc_100212C
		push	[ebp+cchCount1]	; MaxCount
		lea	eax, [edi+eax*2]
		push	eax		; Str2
		push	_FR.lpstrFindWhat ; Str1
		call	ds:__imp__wcsncmp
		add	esp, 0Ch
		test	eax, eax
		jz	short loc_1002151
		cmp	_fCase,	ebx
		jnz	short loc_1002191
		mov	eax, [ebp+wParam]

loc_100212C:				; CODE XREF: ReplaceSel(x)+86j
		push	[ebp+cchCount1]	; cchCount2
		lea	eax, [edi+eax*2]
		push	eax		; lpString2
		push	[ebp+cchCount1]	; cchCount1
		push	_FR.lpstrFindWhat ; lpString1
		push	10001001h	; dwCmpFlags
		push	400h		; Locale
		call	ds:__imp__CompareStringW@24 ; CompareStringW(x,x,x,x,x,x)
		cmp	eax, 2
		jnz	short loc_1002191

loc_1002151:				; CODE XREF: ReplaceSel(x)+A0j
		push	_FR.lpstrReplaceWith ; lParam
		push	1		; wParam
		push	0C2h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	eax, [ebp+wParam]
		mov	ecx, [ebp+var_10]
		add	ecx, eax
		push	ecx		; lParam
		push	eax		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	[ebp+arg_0], ebx
		jz	short loc_1002191
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1002191:				; CODE XREF: ReplaceSel(x)+7Aj
					; ReplaceSel(x)+A8j ...
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)

loc_100219A:				; CODE XREF: ReplaceSel(x)+69j
		pop	edi

loc_100219B:				; CODE XREF: ReplaceSel(x)+57j
		pop	esi
		pop	ebx
		leave
		retn	4
_ReplaceSel@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall GotoDlgProc(HWND, UINT, WPARAM, LPARAM)
_GotoDlgProc@16	proc near		; DATA XREF: NPCommand(x,x,x)+3A4o

lParam		= dword	ptr -0D4h
wParam		= dword	ptr -0D0h
SrcStr		= word ptr -0CCh
var_4		= dword	ptr -4
hWnd		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 0D4h
		mov	eax, ___security_cookie
		mov	edx, [ebp+arg_8]
		mov	ecx, [ebp+arg_C]
		push	ebx
		mov	ebx, [ebp+hWnd]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		sub	eax, 53h
		push	esi
		push	edi
		jz	loc_1002371
		sub	eax, 28h
		jz	loc_1002361
		sub	eax, 95h
		jz	loc_10022D2
		dec	eax
		jnz	loc_1002387
		movzx	eax, dx
		dec	eax
		jz	short loc_1002213
		dec	eax
		jz	short loc_1002202
		sub	eax, 100h
		jnz	loc_1002387
		jmp	short loc_100220B
; ---------------------------------------------------------------------------

loc_1002202:				; CODE XREF: GotoDlgProc(x,x,x,x)+4Dj
		push	1		; nResult

loc_1002204:				; CODE XREF: GotoDlgProc(x,x,x,x)+D4j
		push	ebx		; hDlg
		call	ds:__imp__EndDialog@8 ;	EndDialog(x,x)

loc_100220B:				; CODE XREF: GotoDlgProc(x,x,x,x)+5Aj
					; GotoDlgProc(x,x,x,x)+1B6j
		xor	eax, eax
		inc	eax
		jmp	loc_1002389
; ---------------------------------------------------------------------------

loc_1002213:				; CODE XREF: GotoDlgProc(x,x,x,x)+4Aj
		push	64h		; cchMax
		lea	eax, [ebp+SrcStr]
		push	eax		; lpString
		mov	esi, 102h
		push	esi		; nIDDlgItem
		push	ebx		; hDlg
		call	ds:__imp__GetDlgItemTextW@16 ; GetDlgItemTextW(x,x,x,x)
		push	64h		; cchDest
		lea	eax, [ebp+SrcStr]
		push	eax		; lpDestStr
		push	0FFFFFFFFh	; cchSrc
		push	eax		; lpSrcStr
		push	80h		; dwMapFlags
		call	ds:__imp__FoldStringW@20 ; FoldStringW(x,x,x,x,x)
		lea	eax, [ebp+SrcStr]
		push	eax		; Str
		call	ds:__imp___wtol
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		pop	ecx
		push	0		; lParam
		mov	_lGotoLine, eax
		dec	eax
		push	eax		; wParam
		push	0BBh		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		xor	ecx, ecx
		cmp	_lGotoLine, ecx
		jbe	short loc_100227C
		cmp	eax, 0FFFFFFFFh
		jz	short loc_100227C
		push	ecx
		jmp	short loc_1002204
; ---------------------------------------------------------------------------

loc_100227C:				; CODE XREF: GotoDlgProc(x,x,x,x)+CCj
					; GotoDlgProc(x,x,x,x)+D1j
		push	ecx		; uType
		push	_szLineError	; lpCaption
		push	_szLineTooLarge	; lpText
		push	ebx		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0BAh		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	eax
		lea	eax, [ebp+SrcStr]
		push	offset aD	; "%d"
		push	eax		; LPWSTR
		call	ds:__imp__wsprintfW
		add	esp, 0Ch
		lea	eax, [ebp+SrcStr]
		push	eax		; lpString
		push	esi		; nIDDlgItem
		push	ebx		; hDlg
		call	ds:__imp__SetDlgItemTextW@12 ; SetDlgItemTextW(x,x,x)
		push	ebx		; hWnd
		call	ds:__imp__SetFocus@4 ; SetFocus(x)
		jmp	loc_1002387
; ---------------------------------------------------------------------------

loc_10022D2:				; CODE XREF: GotoDlgProc(x,x,x,x)+39j
		mov	esi, 102h
		push	esi		; nIDDlgItem
		push	ebx		; hDlg
		call	ds:__imp__GetDlgItem@8 ; GetDlgItem(x,x)
		mov	edi, eax
		push	0FFFFFFF0h	; nIndex
		push	edi		; hWnd
		call	ds:__imp__GetWindowLongW@8 ; GetWindowLongW(x,x)
		or	eax, 2000h
		push	eax		; dwNewLong
		push	0FFFFFFF0h	; nIndex
		push	edi		; hWnd
		call	ds:__imp__SetWindowLongW@12 ; SetWindowLongW(x,x,x)
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	0		; lParam
		push	[ebp+wParam]	; wParam
		push	0C9h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		inc	eax
		push	eax
		lea	eax, [ebp+SrcStr]
		push	offset aD	; "%d"
		push	eax		; LPWSTR
		call	ds:__imp__wsprintfW
		add	esp, 0Ch
		lea	eax, [ebp+SrcStr]
		push	eax		; lpString
		push	esi		; nIDDlgItem
		push	ebx		; hDlg
		call	ds:__imp__SetDlgItemTextW@12 ; SetDlgItemTextW(x,x,x)
		push	ebx		; hWnd
		call	ds:__imp__SetFocus@4 ; SetFocus(x)
		jmp	loc_100220B
; ---------------------------------------------------------------------------

loc_1002361:				; CODE XREF: GotoDlgProc(x,x,x,x)+2Ej
		push	offset _s_GotoHelpIDs
		push	0Ah
		push	dword ptr _szHelpFile
		push	edx
		jmp	short loc_1002381
; ---------------------------------------------------------------------------

loc_1002371:				; CODE XREF: GotoDlgProc(x,x,x,x)+25j
		push	offset _s_GotoHelpIDs ;	dwData
		push	0Ch		; uCommand
		push	dword ptr _szHelpFile ;	lpszHelp
		push	dword ptr [ecx+0Ch] ; hWndMain

loc_1002381:				; CODE XREF: GotoDlgProc(x,x,x,x)+1C9j
		call	ds:__imp__WinHelpW@16 ;	WinHelpW(x,x,x,x)

loc_1002387:				; CODE XREF: GotoDlgProc(x,x,x,x)+40j
					; GotoDlgProc(x,x,x,x)+54j ...
		xor	eax, eax

loc_1002389:				; CODE XREF: GotoDlgProc(x,x,x,x)+68j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	10h
_GotoDlgProc@16	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	fDetermineFileType(void	*lpv, int iSize)
_fDetermineFileType@8 proc near		; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+24Ap

lpv		= dword	ptr  8
iSize		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	edi
		mov	edi, [ebp+iSize]
		xor	eax, eax
		cmp	edi, 1
		jbe	short loc_10023FF
		push	esi
		mov	esi, [ebp+lpv]
		movzx	ecx, word ptr [esi]
		cmp	ecx, 0BBEFh
		jz	short loc_10023F0
		cmp	ecx, 0FEFFh
		jz	short loc_10023D7
		cmp	ecx, 0FFFEh
		jz	short loc_10023EC
		push	edi		; iSize
		push	esi		; lpv
		call	_IsInputTextUnicode@8 ;	IsInputTextUnicode(x,x)
		test	eax, eax
		jz	short loc_10023DC

loc_10023D7:				; CODE XREF: fDetermineFileType(x,x)+25j
		xor	eax, eax
		inc	eax
		jmp	short loc_10023FE
; ---------------------------------------------------------------------------

loc_10023DC:				; CODE XREF: fDetermineFileType(x,x)+38j
		push	edi
		push	esi
		call	_IsTextUTF8@8	; IsTextUTF8(x,x)
		neg	eax
		sbb	eax, eax
		and	eax, 3
		jmp	short loc_10023FE
; ---------------------------------------------------------------------------

loc_10023EC:				; CODE XREF: fDetermineFileType(x,x)+2Dj
		push	2
		jmp	short loc_10023FD
; ---------------------------------------------------------------------------

loc_10023F0:				; CODE XREF: fDetermineFileType(x,x)+1Dj
		cmp	edi, 2
		jbe	short loc_10023FE
		cmp	byte ptr [esi+2], 0BFh
		jnz	short loc_10023FE
		push	3

loc_10023FD:				; CODE XREF: fDetermineFileType(x,x)+51j
		pop	eax

loc_10023FE:				; CODE XREF: fDetermineFileType(x,x)+3Dj
					; fDetermineFileType(x,x)+4Dj ...
		pop	esi

loc_10023FF:				; CODE XREF: fDetermineFileType(x,x)+Ej
		pop	edi
		pop	ebp
		retn	8
_fDetermineFileType@8 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; HRESULT __stdcall StringCopyWorkerW(STRSAFE_LPWSTR pszDest, size_t cchDest, size_t *pcchNewDestLength, STRSAFE_LPCWSTR pszSrc, size_t	cchToCopy)
_StringCopyWorkerW@12 proc near		; CODE XREF: SetTitle(x)+52p
					; SetTitle(x)+89p ...

pszDest		= dword	ptr  8
cchDest		= dword	ptr  0Ch
pcchNewDestLength= dword ptr  10h
pszSrc		= dword	ptr  14h
cchToCopy	= dword	ptr  18h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		xor	eax, eax
		cmp	[ebp+cchDest], eax
		jnz	short loc_100241C
		mov	eax, 80070057h
		jmp	short loc_1002449
; ---------------------------------------------------------------------------

loc_100241C:				; CODE XREF: StringCopyWorkerW(x,x,x)+Aj
		mov	edx, [ebp+pszDest]
		push	esi
		mov	esi, [ebp+pcchNewDestLength]

loc_1002423:				; CODE XREF: StringCopyWorkerW(x,x,x)+2Cj
		mov	cx, [esi]
		test	cx, cx
		jz	short loc_1002437
		mov	[edx], cx
		inc	edx
		inc	edx
		inc	esi
		inc	esi
		dec	[ebp+cchDest]
		jnz	short loc_1002423

loc_1002437:				; CODE XREF: StringCopyWorkerW(x,x,x)+20j
		cmp	[ebp+cchDest], 0
		pop	esi
		jnz	short loc_1002445
		dec	edx
		dec	edx
		mov	eax, 8007007Ah

loc_1002445:				; CODE XREF: StringCopyWorkerW(x,x,x)+33j
		and	word ptr [edx],	0

loc_1002449:				; CODE XREF: StringCopyWorkerW(x,x,x)+11j
		pop	ebp
		retn	0Ch
_StringCopyWorkerW@12 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NpOpenDialogHookProc(HWND hDlg,	int, HWND hWndMain, int)
_NpOpenDialogHookProc@16 proc near	; DATA XREF: NPCommand(x,x,x)+1F2o

Point		= tagPOINT ptr -61Ch
hObject		= dword	ptr -614h
iSize		= dword	ptr -610h
Buffer		= byte ptr -60Ch
String1		= dword	ptr -20Ch
var_4		= dword	ptr -4
hDlg		= dword	ptr  8
arg_4		= dword	ptr  0Ch
hWndMain	= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 61Ch
		mov	eax, ___security_cookie
		push	ebx
		mov	ebx, [ebp+hWndMain]
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_4]
		sub	eax, 4Eh
		push	esi
		mov	esi, [ebp+hDlg]
		push	edi
		mov	edi, [ebp+arg_C]
		mov	[ebp+iSize], esi
		jz	loc_10025EB
		sub	eax, 5
		jz	loc_10025BE
		sub	eax, 28h
		jz	loc_1002555
		sub	eax, 95h
		jz	short loc_10024C2
		dec	eax
		jnz	loc_10026F9
		push	0		; lParam
		push	0		; wParam
		push	147h		; Msg
		push	101h		; nIDDlgItem
		push	esi		; hDlg
		call	ds:__imp__SendDlgItemMessageW@20 ; SendDlgItemMessageW(x,x,x,x,x)
		mov	_g_ftOpenedAs, eax
		jmp	loc_10026F9
; ---------------------------------------------------------------------------

loc_10024C2:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+48j
		push	_szFtAnsi	; lParam
		mov	ebx, 143h
		push	0		; wParam
		push	ebx		; Msg
		mov	edi, 101h
		push	edi		; nIDDlgItem
		push	esi		; hDlg
		mov	esi, ds:__imp__SendDlgItemMessageW@20 ;	SendDlgItemMessageW(x,x,x,x,x)
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUnicode	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+iSize]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUnicodeBe	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+iSize]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	_szFtUtf8	; lParam
		push	0		; wParam
		push	ebx		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+iSize]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		mov	eax, _g_ftOpenedAs
		dec	eax
		mov	ecx, _szFtAnsi
		jz	short loc_1002539
		dec	eax
		jz	short loc_1002531
		dec	eax
		jnz	short loc_100253F
		mov	ecx, _szFtUtf8
		jmp	short loc_100253F
; ---------------------------------------------------------------------------

loc_1002531:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+D2j
		mov	ecx, _szFtUnicodeBe
		jmp	short loc_100253F
; ---------------------------------------------------------------------------

loc_1002539:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+CFj
		mov	ecx, _szFtUnicode

loc_100253F:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+D5j
					; NpOpenDialogHookProc(x,x,x,x)+DDj ...
		push	ecx		; lParam
		push	0FFFFFFFFh	; wParam
		push	14Dh		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+iSize]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		jmp	loc_10026F9
; ---------------------------------------------------------------------------

loc_1002555:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+3Dj
		cmp	esi, ebx
		jnz	short loc_1002589
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		call	ds:__imp__GetCursorPos@4 ; GetCursorPos(x)
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		push	esi		; hWnd
		call	ds:__imp__ScreenToClient@8 ; ScreenToClient(x,x)
		push	[ebp+Point.y]
		push	[ebp+Point.x]	; Point
		push	esi		; hWndParent
		call	ds:__imp__ChildWindowFromPoint@12 ; ChildWindowFromPoint(x,x,x)
		mov	ebx, eax

loc_1002589:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+105j
		push	ebx		; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 101h
		jz	short loc_10025A2
		cmp	eax, 103h
		jnz	loc_10026F9

loc_10025A2:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+143j
		push	offset _s_SaveAsHelpIDs	; dwData
		push	0Ah		; uCommand
		push	dword ptr _szHelpFile ;	lpszHelp
		push	ebx		; hWndMain

loc_10025B0:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+197j
		call	ds:__imp__WinHelpW@16 ;	WinHelpW(x,x,x,x)
		xor	eax, eax
		inc	eax
		jmp	loc_10026FB
; ---------------------------------------------------------------------------

loc_10025BE:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+34j
		push	dword ptr [edi+0Ch] ; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 101h
		jz	short loc_10025D9
		cmp	eax, 103h
		jnz	loc_10026F9

loc_10025D9:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+17Aj
		push	offset _s_SaveAsHelpIDs
		push	0Ch
		push	dword ptr _szHelpFile
		push	dword ptr [edi+0Ch]
		jmp	short loc_10025B0
; ---------------------------------------------------------------------------

loc_10025EB:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+2Bj
		cmp	dword ptr [edi+8], 0FFFFFDA6h
		jnz	loc_10026F9
		lea	eax, [ebp+String1]
		push	eax		; lParam
		push	104h		; wParam
		push	465h		; Msg
		push	esi		; hWnd
		call	ds:__imp__GetParent@4 ;	GetParent(x)
		push	eax		; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		test	eax, eax
		jle	loc_10026F9
		mov	ebx, offset String2
		push	ebx		; lpString2
		lea	eax, [ebp+String1]
		push	eax		; lpString1
		call	ds:__imp__lstrcmpiW@8 ;	lstrcmpiW(x,x)
		test	eax, eax
		jz	loc_10026F9
		xor	edi, edi
		push	edi		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	edi		; lpSecurityAttributes
		push	1		; dwShareMode
		push	80000000h	; dwDesiredAccess
		lea	eax, [ebp+String1]
		push	eax		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	[ebp+hObject], eax
		jz	loc_10026F9
		push	edi		; lpOverlapped
		lea	ecx, [ebp+iSize]
		push	ecx		; lpNumberOfBytesRead
		push	400h		; nNumberOfBytesToRead
		lea	ecx, [ebp+Buffer]
		push	ecx		; lpBuffer
		push	eax		; hFile
		call	ds:__imp__ReadFile@20 ;	ReadFile(x,x,x,x,x)
		test	eax, eax
		jle	short loc_10026ED
		cmp	[ebp+iSize], edi
		jz	short loc_10026ED
		push	[ebp+iSize]	; iSize
		lea	eax, [ebp+Buffer]
		push	eax		; lpv
		call	_fDetermineFileType@8 ;	fDetermineFileType(x,x)
		mov	ecx, _szFtAnsi
		mov	_g_ftOpenedAs, eax
		dec	eax
		jz	short loc_10026C5
		dec	eax
		jz	short loc_10026BD
		dec	eax
		jnz	short loc_10026CB
		mov	ecx, _szFtUtf8
		jmp	short loc_10026CB
; ---------------------------------------------------------------------------

loc_10026BD:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+25Ej
		mov	ecx, _szFtUnicodeBe
		jmp	short loc_10026CB
; ---------------------------------------------------------------------------

loc_10026C5:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+25Bj
		mov	ecx, _szFtUnicode

loc_10026CB:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+261j
					; NpOpenDialogHookProc(x,x,x,x)+269j ...
		push	ecx		; lParam
		push	0FFFFFFFFh	; wParam
		push	14Dh		; Msg
		push	101h		; nIDDlgItem
		push	esi		; hDlg
		call	ds:__imp__SendDlgItemMessageW@20 ; SendDlgItemMessageW(x,x,x,x,x)
		lea	eax, [ebp+String1]
		push	eax		; lpString2
		push	ebx		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)

loc_10026ED:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+233j
					; NpOpenDialogHookProc(x,x,x,x)+23Bj
		push	[ebp+hObject]	; hObject
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)

loc_10026F9:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+4Bj
					; NpOpenDialogHookProc(x,x,x,x)+6Bj ...
		xor	eax, eax

loc_10026FB:				; CODE XREF: NpOpenDialogHookProc(x,x,x,x)+167j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	10h
_NpOpenDialogHookProc@16 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall CheckSave(x)
_CheckSave@4	proc near		; CODE XREF: NPCommand(x,x,x)+187p
					; FileDragOpen()+Dp ...

var_210		= dword	ptr -210h
String2		= word ptr -20Ch
var_20A		= byte ptr -20Ah
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 210h
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		push	edi
		mov	[ebp+var_4], eax
		xor	ebx, ebx
		xor	eax, eax
		mov	[ebp+String2], bx
		mov	ecx, 81h
		lea	edi, [ebp+var_20A]
		rep stosd
		xor	esi, esi
		inc	esi
		cmp	_fUntitled, ebx
		stosw
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	[ebp+var_210], esi
		jz	short loc_100276A
		push	ebx		; lParam
		push	ebx		; wParam
		push	0Eh		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		test	eax, eax
		jz	loc_1002806

loc_100276A:				; CODE XREF: CheckSave(x)+45j
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B8h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		test	eax, eax
		jz	loc_10028FE
		cmp	_fUntitled, ebx
		mov	eax, _szUntitled
		mov	edi, offset _szFileName
		jnz	short loc_1002795
		mov	eax, edi

loc_1002795:				; CODE XREF: CheckSave(x)+82j
		mov	ecx, [ebp+arg_0]
		neg	ecx
		sbb	ecx, ecx
		and	ecx, 1000h
		movzx	ecx, cx
		or	ecx, 33h
		push	ecx		; uType
		push	eax		; lpString
		push	_szSCBC		; lpText
		mov	_fInSaveAsDlg, esi
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		cmp	eax, 6
		mov	[ebp+var_210], eax
		mov	_fInSaveAsDlg, ebx
		jnz	loc_10028FE
		cmp	_fUntitled, ebx
		jz	short loc_10027EB
		push	offset a_txt_0	; "*.txt"
		jmp	short loc_100280E
; ---------------------------------------------------------------------------

loc_10027EB:				; CODE XREF: CheckSave(x)+D3j
		mov	eax, _g_ftOpenedAs
		push	ebx		; lpBuffer
		push	edi		; lpString
		push	_hwndNP		; hWnd
		mov	_g_ftSaveAs, eax
		call	_SaveFile@12	; SaveFile(x,x,x)
		test	eax, eax
		jz	short loc_100280D

loc_1002806:				; CODE XREF: CheckSave(x)+55j
		mov	eax, esi
		jmp	loc_100290A
; ---------------------------------------------------------------------------

loc_100280D:				; CODE XREF: CheckSave(x)+F5j
		push	edi		; lpString2

loc_100280E:				; CODE XREF: CheckSave(x)+DAj
		lea	eax, [ebp+String2]
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		mov	edi, ds:__imp__GetSaveFileNameW@4 ; GetSaveFileNameW(x)
		mov	ebx, offset _OFN
		jmp	short loc_1002868
; ---------------------------------------------------------------------------

loc_1002828:				; CODE XREF: CheckSave(x)+1B1j
		push	_OFN.lpstrFile	; lpString2
		lea	eax, [ebp+String2]
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		push	esi		; lpBuffer
		lea	eax, [ebp+String2]
		push	eax		; lpString
		push	_hwndNP		; hWnd
		call	_SaveFile@12	; SaveFile(x,x,x)
		test	eax, eax
		lea	eax, [ebp+String2]
		jnz	loc_1002919
		push	offset _szFileName ; lpString2
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)

loc_1002868:				; CODE XREF: CheckSave(x)+117j
		lea	eax, [ebp+String2]
		mov	_OFN.lpstrFile,	eax
		mov	eax, _szSaveCaption
		push	ebx		; LPOPENFILENAMEW
		mov	_fInSaveAsDlg, esi
		mov	_OFN.nFilterIndex, esi
		mov	_OFN.lpstrDefExt, offset aTxt ;	"txt"
		mov	_OFN.lpstrFilter, offset _szSaveFilterSpec
		mov	_OFN.lpfnHook, offset _NpSaveDialogHookProc@16 ; NpSaveDialogHookProc(x,x,x,x)
		mov	_OFN.lpTemplateName, offset aNpencodingdial ; "NpEncodingDialog"
		mov	_OFN.Flags, 888866h
		mov	_OFN.lpstrTitle, eax
		call	edi ; GetSaveFileNameW(x) ; GetSaveFileNameW(x)
		test	eax, eax
		jnz	loc_1002828
		mov	[ebp+var_210], 2
		call	ds:__imp__CommDlgExtendedError@0 ; CommDlgExtendedError()
		test	eax, eax
		jz	short loc_10028F7
		push	1010h		; uType
		push	_szNN		; lpCaption
		push	_szErrSpace	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)

loc_10028F7:				; CODE XREF: CheckSave(x)+1C9j
					; CheckSave(x)+220j
		and	_fInSaveAsDlg, 0

loc_10028FE:				; CODE XREF: CheckSave(x)+6Cj
					; CheckSave(x)+C7j
		xor	eax, eax
		cmp	[ebp+var_210], 2
		setnz	al

loc_100290A:				; CODE XREF: CheckSave(x)+F9j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
; ---------------------------------------------------------------------------

loc_1002919:				; CODE XREF: CheckSave(x)+147j
		push	eax		; lpString2
		push	offset _szFileName ; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		mov	eax, _g_ftSaveAs
		mov	_g_ftOpenedAs, eax
		jmp	short loc_10028F7
_CheckSave@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nShowCmd)
_WinMain@16	proc near		; CODE XREF: .text:0100750Cp

Msg		= tagMSG ptr -20h
var_4		= dword	ptr -4
hInstance	= dword	ptr  8
hPrevInstance	= dword	ptr  0Ch
lpCmdLine	= dword	ptr  10h
nCmdShow	= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 20h
		push	esi
		push	edi
		call	ds:__imp__GetCommandLineW@0 ; GetCommandLineW()
		push	offset ProcName	; "RegisterPenApp"
		push	29h		; nIndex
		mov	edi, eax
		call	ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
		push	eax		; hModule
		call	ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
		xor	esi, esi
		cmp	eax, esi
		mov	[ebp+var_4], eax
		jz	short loc_100296B
		push	1
		push	1
		call	eax

loc_100296B:				; CODE XREF: WinMain(x,x,x,x)+2Dj
		push	[ebp+nCmdShow]	; nCmdShow
		push	edi		; lpsz
		call	_SkipProgramName@4 ; SkipProgramName(x)
		push	eax		; int
		push	[ebp+hPrevInstance] ; int
		push	[ebp+hInstance]	; hInstance
		call	_NPInit@16	; NPInit(x,x,x,x)
		test	eax, eax
		jnz	short loc_100298C
		mov	[ebp+Msg.wParam], esi
		jmp	loc_1002A3C
; ---------------------------------------------------------------------------

loc_100298C:				; CODE XREF: WinMain(x,x,x,x)+4Cj
		push	ebx
		push	esi		; dwFlags
		push	esi		; idThread
		call	ds:__imp__GetCurrentProcessId@0	; GetCurrentProcessId()
		push	eax		; idProcess
		push	offset _WinEventFunc@28	; pfnWinEventProc
		push	esi		; hmodWinEventProc
		mov	eax, 800Bh
		push	eax		; eventMax
		push	eax		; eventMin
		call	ds:__imp__SetWinEventHook@28 ; SetWinEventHook(x,x,x,x,x,x,x)
		mov	edi, ds:__imp__GetMessageW@16 ;	GetMessageW(x,x,x,x)
		mov	ebx, eax
		jmp	short loc_1002A12
; ---------------------------------------------------------------------------

loc_10029B3:				; CODE XREF: WinMain(x,x,x,x)+E7j
		cmp	[ebp+Msg.message], 50h
		jnz	short loc_10029CC
		push	esi		; lParam
		push	esi		; wParam
		push	8001h		; Msg
		push	_hwndNP		; hWnd
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)

loc_10029CC:				; CODE XREF: WinMain(x,x,x,x)+81j
		mov	eax, _hDlgFind
		cmp	eax, esi
		jz	short loc_10029E4
		lea	ecx, [ebp+Msg]
		push	ecx		; lpMsg
		push	eax		; hDlg
		call	ds:__imp__IsDialogMessageW@8 ; IsDialogMessageW(x,x)
		test	eax, eax
		jnz	short loc_1002A12

loc_10029E4:				; CODE XREF: WinMain(x,x,x,x)+9Dj
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		push	_hAccel		; hAccTable
		push	_hwndNP		; hWnd
		call	ds:__imp__TranslateAcceleratorW@12 ; TranslateAcceleratorW(x,x,x)
		test	eax, eax
		jnz	short loc_1002A12
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		call	ds:__imp__TranslateMessage@4 ; TranslateMessage(x)
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		call	ds:__imp__DispatchMessageW@4 ; DispatchMessageW(x)

loc_1002A12:				; CODE XREF: WinMain(x,x,x,x)+7Bj
					; WinMain(x,x,x,x)+ACj	...
		push	esi		; wMsgFilterMax
		push	esi		; wMsgFilterMin
		lea	eax, [ebp+Msg]
		push	esi		; hWnd
		push	eax		; lpMsg
		call	edi ; GetMessageW(x,x,x,x) ; GetMessageW(x,x,x,x)
		test	eax, eax
		jnz	short loc_10029B3
		call	_FreeGlobal@0	; FreeGlobal()
		push	_hEdit		; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		cmp	ebx, esi
		jz	short loc_1002A3B
		push	ebx		; hWinEventHook
		call	ds:__imp__UnhookWinEvent@4 ; UnhookWinEvent(x)

loc_1002A3B:				; CODE XREF: WinMain(x,x,x,x)+FCj
		pop	ebx

loc_1002A3C:				; CODE XREF: WinMain(x,x,x,x)+51j
		cmp	[ebp+var_4], esi
		jz	short loc_1002A47
		push	esi
		push	1
		call	[ebp+var_4]

loc_1002A47:				; CODE XREF: WinMain(x,x,x,x)+109j
		mov	eax, [ebp+Msg.wParam]
		pop	edi
		pop	esi
		leave
		retn	10h
_WinMain@16	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SetTitle(LPCWSTR pcchNewDestLength)
_SetTitle@4	proc near		; CODE XREF: NPInit(x,x,x,x)+3C1p
					; NPInit(x,x,x,x)+50Fp	...

FindFileData	= _WIN32_FIND_DATAW ptr	-7C8h
var_578		= word ptr -578h
String		= word ptr -370h
lParam		= word ptr -104h
var_102		= byte ptr -102h
var_4		= dword	ptr -4
pcchNewDestLength= dword ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 7C8h
		mov	eax, ___security_cookie
		and	[ebp+lParam], 0
		push	esi
		mov	esi, [ebp+pcchNewDestLength]
		push	edi
		push	3Fh
		mov	[ebp+var_4], eax
		pop	ecx
		push	_szUntitled	; lpString2
		xor	eax, eax
		lea	edi, [ebp+var_102]
		rep stosd
		push	esi		; lpString1
		stosw
		call	ds:__imp__lstrcmpW@8 ; lstrcmpW(x,x)
		test	eax, eax
		jnz	short loc_1002AAE
		push	_szUntitled	; pcchNewDestLength
		lea	eax, [ebp+String]
		push	136h		; cchDest
		push	eax		; pszDest
		call	_StringCopyWorkerW@12 ;	StringCopyWorkerW(x,x,x)
		jmp	short loc_1002B14
; ---------------------------------------------------------------------------

loc_1002AAE:				; CODE XREF: SetTitle(x)+3Ej
		push	esi		; lpFileName
		call	ds:__imp__GetFileAttributesW@4 ; GetFileAttributesW(x)
		lea	eax, [ebp+FindFileData]
		push	eax		; lpFindFileData
		push	esi		; lpFileName
		call	ds:__imp__FindFirstFileW@8 ; FindFirstFileW(x,x)
		mov	edi, eax
		cmp	edi, 0FFFFFFFFh
		jz	short loc_1002AEC
		lea	eax, [ebp+FindFileData.cFileName]
		push	eax		; pcchNewDestLength
		mov	esi, 104h
		push	esi		; cchDest
		lea	eax, [ebp+var_578]
		push	eax		; pszDest
		call	_StringCopyWorkerW@12 ;	StringCopyWorkerW(x,x,x)
		push	edi		; hFindFile
		call	ds:__imp__FindClose@4 ;	FindClose(x)
		jmp	short loc_1002AFF
; ---------------------------------------------------------------------------

loc_1002AEC:				; CODE XREF: SetTitle(x)+73j
		push	esi		; pcchNewDestLength
		mov	esi, 104h
		push	esi		; cchDest
		lea	eax, [ebp+var_578]
		push	eax		; pszDest
		call	_StringCopyWorkerW@12 ;	StringCopyWorkerW(x,x,x)

loc_1002AFF:				; CODE XREF: SetTitle(x)+95j
		push	esi		; cchSize
		lea	eax, [ebp+String]
		push	eax		; Buf
		lea	eax, [ebp+var_578]
		push	eax		; LPCWSTR
		call	ds:__imp__GetFileTitleW@12 ; GetFileTitleW(x,x,x)

loc_1002B14:				; CODE XREF: SetTitle(x)+57j
		push	1
		push	1
		push	_szLineCol	; Format
		lea	eax, [ebp+lParam]
		push	7Fh		; Count
		push	eax		; Dest
		call	ds:__imp___snwprintf
		mov	eax, _hwndStatus
		add	esp, 14h
		test	eax, eax
		pop	edi
		pop	esi
		jz	short loc_1002B50
		lea	ecx, [ebp+lParam]
		push	ecx		; lParam
		push	1		; wParam
		push	40Bh		; Msg
		push	eax		; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)

loc_1002B50:				; CODE XREF: SetTitle(x)+E4j
		push	_szNpTitle	; lpString2
		lea	eax, [ebp+String]
		push	eax		; lpString1
		call	ds:__imp__lstrcatW@8 ; lstrcatW(x,x)
		lea	eax, [ebp+String]
		push	eax		; lpString
		push	_hwndNP		; hWnd
		call	ds:__imp__SetWindowTextW@8 ; SetWindowTextW(x,x)
		mov	ecx, [ebp+var_4]
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_SetTitle@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NPCommand(HWND hWnd, __int16, int)
_NPCommand@12	proc near		; CODE XREF: NPWndProc(x,x,x,x)+3FFp
					; NPWndProc(x,x,x,x)+4F9p

var_260		= tagCHOOSEFONTW ptr -260h
lParam		= dword	ptr -224h
Rect		= tagRECT ptr -220h
wParam		= dword	ptr -210h
String2		= word ptr -20Ch
var_20A		= byte ptr -20Ah
var_4		= dword	ptr -4
hWnd		= dword	ptr  8
arg_4		= word ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 260h
		mov	eax, ___security_cookie
		mov	edx, [ebp+hWnd]
		push	ebx
		push	esi
		push	edi
		mov	[ebp+var_4], eax
		xor	esi, esi
		xor	eax, eax
		mov	[ebp+String2], si
		mov	ecx, 81h
		lea	edi, [ebp+var_20A]
		rep stosd
		stosw
		movzx	edi, [ebp+arg_4]
		cmp	edi, 40h
		mov	[ebp+wParam], edx
		jg	loc_10032C6
		jz	loc_10032AE
		cmp	edi, 15h
		jg	loc_1002EAA
		jz	loc_1002FCE
		cmp	edi, 5
		jg	loc_1002E5F
		jz	loc_1002DFC
		dec	edi
		jz	loc_1002DF0
		dec	edi
		jz	loc_1002D0D
		dec	edi
		jz	short loc_1002C0C
		dec	edi
		jz	short loc_1002C37

loc_1002C05:				; CODE XREF: NPCommand(x,x,x)+2EAj
					; NPCommand(x,x,x)+346j ...
		xor	eax, eax
		jmp	loc_100336A
; ---------------------------------------------------------------------------

loc_1002C0C:				; CODE XREF: NPCommand(x,x,x)+79j
		cmp	_fUntitled, esi
		mov	eax, _g_ftOpenedAs
		mov	_g_ftSaveAs, eax
		jnz	short loc_1002C37
		push	esi		; lpBuffer
		push	offset _szFileName ; lpString
		push	_hwndNP		; hWnd
		call	_SaveFile@12	; SaveFile(x,x,x)
		test	eax, eax
		jnz	loc_1003367

loc_1002C37:				; CODE XREF: NPCommand(x,x,x)+7Cj
					; NPCommand(x,x,x)+95j
		cmp	_fUntitled, esi
		mov	edi, ds:__imp__lstrcpynW@12 ; lstrcpynW(x,x,x)
		lea	eax, [ebp+String2]
		mov	_OFN.lpstrFile,	eax
		mov	eax, _szSaveCaption
		mov	_OFN.lpstrTitle, eax
		mov	_OFN.Flags, 888866h
		mov	_OFN.lpTemplateName, offset aNpencodingdial ; "NpEncodingDialog"
		mov	_OFN.lpfnHook, offset _NpSaveDialogHookProc@16 ; NpSaveDialogHookProc(x,x,x,x)
		mov	_OFN.lpstrFilter, offset _szSaveFilterSpec
		mov	_OFN.lpstrDefExt, offset aTxt ;	"txt"
		mov	ebx, 104h
		lea	eax, [ebp+String2]
		jnz	short loc_1002CA2
		push	ebx		; iMaxLength
		push	offset _szFileName ; lpString2
		push	eax		; lpString1
		call	edi ; lstrcpynW(x,x,x) ; lstrcpynW(x,x,x)
		jmp	short loc_1002CAE
; ---------------------------------------------------------------------------

loc_1002CA2:				; CODE XREF: NPCommand(x,x,x)+10Ej
		push	offset a_txt_0	; "*.txt"
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)

loc_1002CAE:				; CODE XREF: NPCommand(x,x,x)+119j
		xor	eax, eax
		inc	eax
		push	offset _OFN	; LPOPENFILENAMEW
		mov	_fInSaveAsDlg, eax
		mov	_OFN.nFilterIndex, eax
		call	ds:__imp__GetSaveFileNameW@4 ; GetSaveFileNameW(x)
		test	eax, eax
		jz	short loc_1002CFD
		push	1		; lpBuffer
		lea	eax, [ebp+String2]
		push	eax		; lpString
		push	[ebp+wParam]	; hWnd
		call	_SaveFile@12	; SaveFile(x,x,x)
		test	eax, eax
		jz	short loc_1002D02
		push	ebx		; iMaxLength
		lea	eax, [ebp+String2]
		push	eax		; lpString2
		push	offset _szFileName ; lpString1
		call	edi ; lstrcpynW(x,x,x) ; lstrcpynW(x,x,x)
		mov	eax, _g_ftSaveAs
		mov	_g_ftOpenedAs, eax
		jmp	short loc_1002D02
; ---------------------------------------------------------------------------

loc_1002CFD:				; CODE XREF: NPCommand(x,x,x)+141j
		call	_SignalCommDlgError@0 ;	SignalCommDlgError()

loc_1002D02:				; CODE XREF: NPCommand(x,x,x)+159j
					; NPCommand(x,x,x)+174j
		mov	_fInSaveAsDlg, esi
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002D0D:				; CODE XREF: NPCommand(x,x,x)+72j
		push	esi
		call	_CheckSave@4	; CheckSave(x)
		test	eax, eax
		jz	loc_1003367
		mov	ebx, _g_ftOpenedAs
		lea	eax, [ebp+String2]
		push	offset a_txt_0	; "*.txt"
		push	eax		; lpString1
		mov	_OFN.lpstrFile,	eax
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		mov	eax, _szOpenCaption
		push	offset _OFN	; LPOPENFILENAMEW
		mov	_OFN.lpstrTitle, eax
		mov	_OFN.lpstrFilter, offset _szOpenFilterSpec
		mov	_OFN.lpstrDefExt, offset aTxt ;	"txt"
		mov	_OFN.Flags, 881064h
		mov	_OFN.nFilterIndex, 1
		mov	_OFN.lpTemplateName, offset aNpencodingdial ; "NpEncodingDialog"
		mov	_OFN.lpfnHook, offset _NpOpenDialogHookProc@16 ; NpOpenDialogHookProc(x,x,x,x)
		call	ds:__imp__GetOpenFileNameW@4 ; GetOpenFileNameW(x)
		test	eax, eax
		jz	short loc_1002DE0
		mov	edi, _fp
		push	esi		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	esi		; lpSecurityAttributes
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		lea	eax, [ebp+String2]
		push	eax		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		push	_g_ftOpenedAs	; int
		mov	_fp, eax
		lea	eax, [ebp+String2]
		push	eax		; lpString
		call	_LoadFile@8	; LoadFile(x,x)
		test	eax, eax
		jnz	loc_1003367
		mov	_fp, edi
		mov	_g_ftOpenedAs, ebx
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002DE0:				; CODE XREF: NPCommand(x,x,x)+204j
		mov	_g_ftOpenedAs, ebx

loc_1002DE6:				; CODE XREF: NPCommand(x,x,x)+29Bj
		call	_SignalCommDlgError@0 ;	SignalCommDlgError()
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002DF0:				; CODE XREF: NPCommand(x,x,x)+6Bj
		push	1
		call	_New@4		; New(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002DFC:				; CODE XREF: NPCommand(x,x,x)+64j
		mov	edi, ds:__imp__PageSetupDlgW@4 ; PageSetupDlgW(x)
		mov	ebx, offset _g_PageSetupDlg
		jmp	short loc_1002E35
; ---------------------------------------------------------------------------

loc_1002E09:				; CODE XREF: NPCommand(x,x,x)+2B3j
		call	ds:__imp__CommDlgExtendedError@0 ; CommDlgExtendedError()
		cmp	eax, 100Bh
		jz	short loc_1002E24
		cmp	eax, 1009h
		jz	short loc_1002E24
		cmp	eax, 100Ch
		jnz	short loc_1002DE6

loc_1002E24:				; CODE XREF: NPCommand(x,x,x)+28Dj
					; NPCommand(x,x,x)+294j
		call	_FreeGlobal@0	; FreeGlobal()
		mov	_g_PageSetupDlg.hDevNames, esi
		mov	_g_PageSetupDlg.hDevMode, esi

loc_1002E35:				; CODE XREF: NPCommand(x,x,x)+280j
		push	ebx		; LPPAGESETUPDLGW
		call	edi ; PageSetupDlgW(x) ; PageSetupDlgW(x)
		test	eax, eax
		jz	short loc_1002E09
		mov	esi, ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		push	offset _chPageTextTemp ; lpString2
		push	offset _chPageText ; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		push	offset word_100A390 ; lpString2
		push	offset String1	; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002E5F:				; CODE XREF: NPCommand(x,x,x)+5Ej
		sub	edi, 6
		jz	short loc_1002E9F
		dec	edi
		jz	short loc_1002E8F
		sub	edi, 8
		jz	loc_1003367
		dec	edi
		jnz	loc_1002C05
		push	esi		; lParam
		push	esi		; wParam
		push	0C7h		; Msg
		push	_hwndEdit	; hWnd

loc_1002E84:				; CODE XREF: NPCommand(x,x,x)+68Fj
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002E8F:				; CODE XREF: NPCommand(x,x,x)+2DEj
		push	esi		; lParam
		push	esi		; wParam
		push	10h		; Msg
		push	edx		; hWnd

loc_1002E94:				; CODE XREF: NPCommand(x,x,x)+7B5j
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002E9F:				; CODE XREF: NPCommand(x,x,x)+2DBj
		push	esi
		call	_PrintIt@4	; PrintIt(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002EAA:				; CODE XREF: NPCommand(x,x,x)+4Fj
		cmp	edi, 1Ah
		jg	loc_1003019
		jz	loc_100300E
		sub	edi, 16h
		jz	loc_1002FB6
		dec	edi
		jz	loc_1002F5C
		dec	edi
		jz	short loc_1002F2A
		dec	edi
		jnz	loc_1002C05
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0Eh		; Msg
		push	_hwndEdit	; hWnd
		mov	ebx, eax
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	eax		; lParam
		push	esi		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	1		; uEnable
		push	19h		; uIDEnableItem
		push	1		; nPos
		push	ebx		; hMenu
		call	ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)

loc_1002F1E:				; CODE XREF: NPCommand(x,x,x)+653j
		push	eax		; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002F2A:				; CODE XREF: NPCommand(x,x,x)+343j
		push	esi		; dwInitParam
		push	offset _GotoDlgProc@16 ; lpDialogFunc
		push	_hwndNP		; hWndParent
		push	0Eh		; lpTemplateName
		push	_hInstanceNP	; hInstance
		call	ds:__imp__DialogBoxParamW@20 ; DialogBoxParamW(x,x,x,x,x)
		test	eax, eax
		jnz	loc_1003367
		push	_lGotoLine
		call	_GotoAndScrollInView@4 ; GotoAndScrollInView(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002F5C:				; CODE XREF: NPCommand(x,x,x)+33Cj
		mov	eax, _hDlgFind
		cmp	eax, esi
		jz	short loc_1002F71

loc_1002F65:				; CODE XREF: NPCommand(x,x,x)+44Ej
		push	eax		; hWnd
		call	ds:__imp__SetFocus@4 ; SetFocus(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002F71:				; CODE XREF: NPCommand(x,x,x)+3DCj
		push	offset _FR	; LPFINDREPLACEW
		mov	_FR.Flags, 10010h
		mov	_FR.lpstrReplaceWith, offset _szReplace
		mov	_FR.wReplaceWithLen, 80h
		mov	_FR.lpstrFindWhat, offset _szSearch
		mov	_FR.wFindWhatLen, 80h
		call	ds:__imp__ReplaceTextW@4 ; ReplaceTextW(x)

loc_1002FAC:				; CODE XREF: NPCommand(x,x,x)+485j
		mov	_hDlgFind, eax
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002FB6:				; CODE XREF: NPCommand(x,x,x)+335j
		cmp	_szSearch, si
		jz	short loc_1002FCE
		push	offset _szSearch ; Str2
		call	_Search@4	; Search(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1002FCE:				; CODE XREF: NPCommand(x,x,x)+55j
					; NPCommand(x,x,x)+436j
		mov	eax, _hDlgFind
		cmp	eax, esi
		jnz	short loc_1002F65
		push	offset _FR	; LPFINDREPLACEW
		mov	_FR.Flags, 10001h
		mov	_FR.lpstrReplaceWith, esi
		mov	_FR.wReplaceWithLen, si
		mov	_FR.lpstrFindWhat, offset _szSearch
		mov	_FR.wFindWhatLen, 80h
		call	ds:__imp__FindTextW@4 ;	FindTextW(x)
		jmp	short loc_1002FAC
; ---------------------------------------------------------------------------

loc_100300E:				; CODE XREF: NPCommand(x,x,x)+32Cj
		push	esi
		call	_InsertDateTime@4 ; InsertDateTime(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_1003019:				; CODE XREF: NPCommand(x,x,x)+326j
		push	1Bh
		pop	ebx
		sub	edi, ebx
		jz	loc_100321B
		sub	edi, 5
		jz	loc_100313E
		dec	edi
		jnz	loc_1002C05
		push	esi		; hWnd
		call	ds:__imp__GetDC@4 ; GetDC(x)
		mov	ebx, eax
		cmp	ebx, esi
		jz	loc_1003367
		mov	eax, [ebp+wParam]
		push	2D0h		; nDenominator
		push	5Ah		; index
		mov	edi, offset _FontStruct
		push	ebx		; hdc
		mov	[ebp+var_260.lStructSize], 3Ch
		mov	[ebp+var_260.hwndOwner], eax
		mov	[ebp+var_260.lpLogFont], edi
		call	ds:__imp__GetDeviceCaps@8 ; GetDeviceCaps(x,x)
		push	eax		; nNumerator
		push	_iPointSize	; nNumber
		call	ds:__imp__MulDiv@12 ; MulDiv(x,x,x)
		push	ebx		; hDC
		neg	eax
		push	esi		; hWnd
		mov	_FontStruct.lfHeight, eax
		mov	[ebp+var_260.Flags], 1000041h
		mov	[ebp+var_260.rgbColors], esi
		mov	[ebp+var_260.lCustData], esi
		mov	[ebp+var_260.lpfnHook],	esi
		mov	[ebp+var_260.lpTemplateName], esi
		mov	[ebp+var_260.hInstance], esi
		mov	[ebp+var_260.lpszStyle], esi
		mov	[ebp+var_260.nFontType], 2000h
		mov	[ebp+var_260.nSizeMin],	esi
		mov	[ebp+var_260.nSizeMax],	esi
		call	ds:__imp__ReleaseDC@8 ;	ReleaseDC(x,x)
		lea	eax, [ebp+var_260]
		push	eax		; LPCHOOSEFONTW
		call	ds:__imp__ChooseFontW@4	; ChooseFontW(x)
		test	eax, eax
		jz	loc_1003367
		push	_hWaitCursor	; hCursor
		mov	ebx, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	ebx ; SetCursor(x) ; SetCursor(x)
		push	edi		; lplf
		call	ds:__imp__CreateFontIndirectW@4	; CreateFontIndirectW(x)
		mov	edi, eax
		cmp	edi, esi
		jz	short loc_1003131
		push	_hFont		; ho
		call	ds:__imp__DeleteObject@4 ; DeleteObject(x)
		push	1		; lParam
		push	edi		; wParam
		push	30h		; Msg
		push	_hwndEdit	; hWnd
		mov	_hFont,	edi
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	eax, [ebp+var_260.iPointSize]
		mov	_iPointSize, eax

loc_1003131:				; CODE XREF: NPCommand(x,x,x)+57Aj
		push	_hStdCursor	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_100313E:				; CODE XREF: NPCommand(x,x,x)+4A0j
		mov	eax, _fWrap
		neg	eax
		sbb	eax, eax
		and	eax, 100000h
		add	eax, 50200104h
		push	eax		; hWnd
		call	_NpReCreate@4	; NpReCreate(x)
		test	eax, eax
		jz	short loc_100316D
		xor	eax, eax
		cmp	_fWrap,	esi
		setz	al
		mov	_fWrap,	eax
		jmp	short loc_1003187
; ---------------------------------------------------------------------------

loc_100316D:				; CODE XREF: NPCommand(x,x,x)+5D2j
		push	30h		; uType
		push	_szNN		; lpCaption
		push	_szNoWW		; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)

loc_1003187:				; CODE XREF: NPCommand(x,x,x)+5E4j
		cmp	_fWrap,	esi
		jz	short loc_10031DF
		mov	eax, _fStatus
		cmp	eax, esi
		mov	_fLastStatus, eax
		jz	short loc_10031B0
		push	esi		; lParam
		push	ebx		; wParam
		push	111h		; Msg
		push	[ebp+wParam]	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)

loc_10031B0:				; CODE XREF: NPCommand(x,x,x)+614j
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		push	esi		; uCheck
		mov	esi, ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		push	ebx		; uIDCheckItem
		mov	edi, eax
		push	3		; nPos
		push	edi		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__CheckMenuItem@12 ; CheckMenuItem(x,x,x)
		push	1
		push	ebx
		push	3		; nPos
		push	edi		; hMenu
		call	esi ; GetSubMenu(x,x) ;	GetSubMenu(x,x)
		jmp	loc_1002F1E
; ---------------------------------------------------------------------------

loc_10031DF:				; CODE XREF: NPCommand(x,x,x)+606j
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		push	esi		; uEnable
		push	ebx		; uIDEnableItem
		push	3		; nPos
		push	eax		; hMenu
		call	ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)
		cmp	_fLastStatus, esi
		jz	loc_1003367
		push	esi
		push	ebx
		push	111h
		push	[ebp+wParam]
		jmp	loc_1002E84
; ---------------------------------------------------------------------------

loc_100321B:				; CODE XREF: NPCommand(x,x,x)+497j
		lea	eax, [ebp+Rect]
		push	eax		; lpRect
		push	_hwndNP		; hWnd
		call	ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
		cmp	_fStatus, esi
		jz	short loc_100326D
		push	esi		; nCmdShow
		push	_hwndStatus	; hWnd
		mov	_fStatus, esi
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
		mov	eax, [ebp+Rect.bottom]
		sub	eax, [ebp+Rect.top]
		push	eax		; int
		mov	eax, [ebp+Rect.right]
		sub	eax, [ebp+Rect.left]
		push	eax		; nWidth
		call	_NPSize@8	; NPSize(x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_100326D:				; CODE XREF: NPCommand(x,x,x)+6ADj
		mov	eax, [ebp+Rect.bottom]
		sub	eax, [ebp+Rect.top]
		xor	esi, esi
		push	eax		; int
		mov	eax, [ebp+Rect.right]
		sub	eax, [ebp+Rect.left]
		inc	esi
		push	eax		; nWidth
		mov	_fStatus, esi
		call	_NPSize@8	; NPSize(x,x)
		push	esi
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)
		push	5		; nCmdShow
		push	_hwndStatus	; hWnd
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_10032AE:				; CODE XREF: NPCommand(x,x,x)+46j
		push	esi		; dwData
		push	esi		; uCommand
		push	offset pszFile	; "notepad.chm"
		call	ds:__imp__GetDesktopWindow@0 ; GetDesktopWindow()
		push	eax		; hwndCaller
		call	_HtmlHelpA@16	; HtmlHelpA(x,x,x,x)
		jmp	loc_1003367
; ---------------------------------------------------------------------------

loc_10032C6:				; CODE XREF: NPCommand(x,x,x)+40j
		cmp	edi, 41h
		jz	short loc_1003341
		cmp	edi, 2FFh
		jle	loc_1002C05
		cmp	edi, 301h
		jle	short loc_10032F3
		cmp	edi, 302h
		jz	short loc_1003320
		cmp	edi, 303h
		jnz	loc_1002C05

loc_10032F3:				; CODE XREF: NPCommand(x,x,x)+756j
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	eax, [ebp+wParam]
		cmp	eax, [ebp+lParam]
		jz	short loc_1003367

loc_1003320:				; CODE XREF: NPCommand(x,x,x)+75Ej
		call	ds:__imp__GetFocus@0 ; GetFocus()
		mov	ecx, _hwndEdit
		cmp	eax, ecx
		jz	short loc_1003338
		cmp	eax, _hwndNP
		jnz	short loc_1003367

loc_1003338:				; CODE XREF: NPCommand(x,x,x)+7A7j
		push	esi
		push	esi
		push	edi
		push	ecx
		jmp	loc_1002E94
; ---------------------------------------------------------------------------

loc_1003341:				; CODE XREF: NPCommand(x,x,x)+742j
		push	2		; lpIconName
		push	_hInstanceNP	; hInstance
		call	ds:__imp__LoadIconW@8 ;	LoadIconW(x,x)
		push	eax		; hIcon
		push	offset szOtherStuff ; szOtherStuff
		push	_szNN		; szApp
		push	_hwndNP		; hWnd
		call	ds:__imp__ShellAboutW@16 ; ShellAboutW(x,x,x,x)

loc_1003367:				; CODE XREF: NPCommand(x,x,x)+AAj
					; NPCommand(x,x,x)+181j ...
		xor	eax, eax
		inc	eax

loc_100336A:				; CODE XREF: NPCommand(x,x,x)+80j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	0Ch
_NPCommand@12	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	FileDragOpen()
_FileDragOpen@0	proc near		; CODE XREF: doDrop(x,x)+35p
		mov	edi, edi
		push	esi
		push	edi
		mov	edi, _fp
		xor	esi, esi
		push	esi
		call	_CheckSave@4	; CheckSave(x)
		test	eax, eax
		jz	short loc_10033D4
		push	esi		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	esi		; lpSecurityAttributes
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		mov	esi, offset FileName
		push	esi		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	_fp, eax
		jnz	short loc_10033C2
		push	esi		; lpString
		call	_AlertUser_FileFail@4 ;	AlertUser_FileFail(x)
		jmp	short loc_10033CE
; ---------------------------------------------------------------------------

loc_10033C2:				; CODE XREF: FileDragOpen()+3Aj
		push	0FFFFFFFFh	; int
		push	esi		; lpString
		call	_LoadFile@8	; LoadFile(x,x)
		test	eax, eax
		jnz	short loc_10033D4

loc_10033CE:				; CODE XREF: FileDragOpen()+42j
		mov	_fp, edi

loc_10033D4:				; CODE XREF: FileDragOpen()+14j
					; FileDragOpen()+4Ej
		pop	edi
		pop	esi
		retn
_FileDragOpen@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	doDrop(HDROP hDrop, HWND hWnd)
_doDrop@8	proc near		; CODE XREF: NPWndProc(x,x,x,x)+40Fp

hDrop		= dword	ptr  8
hWnd		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, ds:__imp__DragQueryFileW@16 ; DragQueryFileW(x,x,x,x)
		push	0		; cch
		push	0		; lpszFile
		push	0FFFFFFFFh	; iFile
		push	[ebp+hDrop]	; hDrop
		call	esi ; DragQueryFileW(x,x,x,x) ;	DragQueryFileW(x,x,x,x)
		test	eax, eax
		jz	short loc_1003416
		push	104h		; cch
		push	offset FileName	; lpszFile
		push	0		; iFile
		push	[ebp+hDrop]	; hDrop
		call	esi ; DragQueryFileW(x,x,x,x) ;	DragQueryFileW(x,x,x,x)
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__SetActiveWindow@4 ; SetActiveWindow(x)
		call	_FileDragOpen@0	; FileDragOpen()

loc_1003416:				; CODE XREF: doDrop(x,x)+19j
		push	[ebp+hDrop]	; hDrop
		call	ds:__imp__DragFinish@4 ; DragFinish(x)
		pop	esi
		pop	ebp
		retn	8
_doDrop@8	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NPWndProc(HWND hWnd, UINT Msg, WPARAM hDrop, int)
_NPWndProc@16	proc near		; DATA XREF: sub_10044D7+62o

lParam		= dword	ptr -8
var_4		= dword	ptr -4
hWnd		= dword	ptr  8
Msg		= dword	ptr  0Ch
hDrop		= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		push	esi
		mov	esi, [ebp+Msg]
		cmp	esi, 1Ch
		push	edi
		push	8
		pop	edx
		ja	loc_1003682
		jz	loc_10035FE
		cmp	esi, edx
		ja	loc_100353C
		jz	loc_1003530
		mov	eax, esi
		dec	eax
		dec	eax
		jz	loc_1003526
		sub	eax, 3
		jz	short loc_10034C5
		dec	eax
		jz	short loc_1003486
		dec	eax
		jnz	loc_10036CA
		push	_hwndNP		; hWnd
		call	ds:__imp__IsIconic@4 ; IsIconic(x)
		test	eax, eax
		jnz	short loc_10034BD
		push	_hwndEdit
		jmp	short loc_10034B7
; ---------------------------------------------------------------------------

loc_1003486:				; CODE XREF: NPWndProc(x,x,x,x)+3Cj
		cmp	word ptr [ebp+hDrop], 1
		jz	short loc_1003494
		cmp	word ptr [ebp+hDrop], 2
		jnz	short loc_10034BD

loc_1003494:				; CODE XREF: NPWndProc(x,x,x,x)+62j
		push	_hwndNP		; hWnd
		call	ds:__imp__IsIconic@4 ; IsIconic(x)
		test	eax, eax
		jnz	short loc_10034BD
		mov	esi, ds:__imp__GetForegroundWindow@0 ; GetForegroundWindow()
		call	esi ; GetForegroundWindow() ; GetForegroundWindow()
		cmp	eax, _hwndNP
		jnz	short loc_10034BD
		call	esi ; GetForegroundWindow() ; GetForegroundWindow()
		push	eax		; hWnd

loc_10034B7:				; CODE XREF: NPWndProc(x,x,x,x)+5Bj
		call	ds:__imp__SetFocus@4 ; SetFocus(x)

loc_10034BD:				; CODE XREF: NPWndProc(x,x,x,x)+53j
					; NPWndProc(x,x,x,x)+69j ...
		xor	eax, eax

loc_10034BF:				; CODE XREF: NPWndProc(x,x,x,x)+15Ej
					; NPWndProc(x,x,x,x)+3B3j
		pop	edi
		pop	esi
		leave
		retn	10h
; ---------------------------------------------------------------------------

loc_10034C5:				; CODE XREF: NPWndProc(x,x,x,x)+39j
		mov	eax, [ebp+hDrop]
		xor	esi, esi
		sub	eax, esi
		jz	short loc_10034D4
		dec	eax
		jz	short loc_100351A
		dec	eax
		jnz	short loc_10034BD

loc_10034D4:				; CODE XREF: NPWndProc(x,x,x,x)+A3j
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	5		; Msg
		push	_hwndStatus	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		movsx	esi, word ptr [ebp+arg_C]
		push	4
		pop	ecx
		lea	eax, [esi+esi*2]
		cdq
		idiv	ecx
		or	[ebp+var_4], 0FFFFFFFFh
		mov	[ebp+lParam], eax
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		push	2		; wParam
		push	404h		; Msg
		push	_hwndStatus	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		movsx	eax, word ptr [ebp+arg_C+2]
		push	eax		; int
		push	esi		; nWidth
		call	_NPSize@8	; NPSize(x,x)
		jmp	short loc_10034BD
; ---------------------------------------------------------------------------

loc_100351A:				; CODE XREF: NPWndProc(x,x,x,x)+A6j
		push	[ebp+arg_C]
		push	1
		push	5
		jmp	loc_10037D3
; ---------------------------------------------------------------------------

loc_1003526:				; CODE XREF: NPWndProc(x,x,x,x)+30j
		push	0		; nExitCode
		call	ds:__imp__PostQuitMessage@4 ; PostQuitMessage(x)
		jmp	short loc_10034BD
; ---------------------------------------------------------------------------

loc_1003530:				; CODE XREF: NPWndProc(x,x,x,x)+26j
		push	[ebp+arg_C]
		push	[ebp+hDrop]
		push	edx
		jmp	loc_10037FD
; ---------------------------------------------------------------------------

loc_100353C:				; CODE XREF: NPWndProc(x,x,x,x)+20j
		mov	eax, esi
		sub	eax, 10h
		jz	short loc_100358C
		dec	eax
		jz	short loc_1003554
		sub	eax, 9
		jz	loc_10034BD
		jmp	loc_10036CA
; ---------------------------------------------------------------------------

loc_1003554:				; CODE XREF: NPWndProc(x,x,x,x)+11Bj
		xor	esi, esi
		cmp	_fInSaveAsDlg, esi
		jz	short loc_1003580
		mov	edi, ds:__imp__MessageBeep@4 ; MessageBeep(x)
		push	esi		; uType
		call	edi ; MessageBeep(x) ; MessageBeep(x)
		push	esi		; uType
		call	edi ; MessageBeep(x) ; MessageBeep(x)
		push	1000h
		push	_szNN
		push	_szCannotQuit
		jmp	loc_100390A
; ---------------------------------------------------------------------------

loc_1003580:				; CODE XREF: NPWndProc(x,x,x,x)+133j
		push	1
		call	_CheckSave@4	; CheckSave(x)
		jmp	loc_10034BF
; ---------------------------------------------------------------------------

loc_100358C:				; CODE XREF: NPWndProc(x,x,x,x)+118j
		call	_SaveGlobals@0	; SaveGlobals()
		xor	esi, esi
		push	esi
		call	_CheckSave@4	; CheckSave(x)
		test	eax, eax
		jz	loc_10034BD
		push	esi		; dwData
		push	2		; uCommand
		push	dword ptr _szHelpFile ;	lpszHelp
		push	_hwndNP		; hWndMain
		call	ds:__imp__WinHelpW@16 ;	WinHelpW(x,x,x,x)
		test	eax, eax
		jnz	short loc_10035D7
		push	1010h		; uType
		push	_szNN		; lpCaption
		push	_szErrSpace	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)

loc_10035D7:				; CODE XREF: NPWndProc(x,x,x,x)+18Fj
		push	_hwndStatus	; hWnd
		mov	esi, ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
		call	esi ; DestroyWindow(x) ; DestroyWindow(x)
		push	_hwndNP		; hWnd
		call	esi ; DestroyWindow(x) ; DestroyWindow(x)
		push	_hFont		; ho
		call	ds:__imp__DeleteObject@4 ; DeleteObject(x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_10035FE:				; CODE XREF: NPWndProc(x,x,x,x)+18j
		xor	esi, esi
		cmp	[ebp+hDrop], esi
		jz	short loc_1003645
		mov	eax, _dwCurrentSelectionStart
		cmp	eax, esi
		mov	ecx, _dwCurrentSelectionEnd
		jnz	short loc_100361C
		cmp	ecx, esi
		jz	loc_10034BD

loc_100361C:				; CODE XREF: NPWndProc(x,x,x,x)+1E9j
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)

loc_1003622:				; CODE XREF: NPWndProc(x,x,x,x)+246j
		push	ecx		; lParam
		push	eax		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003645:				; CODE XREF: NPWndProc(x,x,x,x)+1DAj
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	offset _dwCurrentSelectionEnd ;	lParam
		push	offset _dwCurrentSelectionStart	; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	eax, _dwCurrentSelectionStart
		mov	ecx, _dwCurrentSelectionEnd
		cmp	eax, ecx
		jnz	short loc_1003622
		mov	_dwCurrentSelectionStart, esi
		mov	_dwCurrentSelectionEnd,	esi
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003682:				; CODE XREF: NPWndProc(x,x,x,x)+12j
		mov	edi, [ebp+arg_C]
		mov	eax, esi
		sub	eax, 111h
		jz	loc_10038C7
		dec	eax
		jz	loc_1003883
		sub	eax, 4
		jz	loc_1003876
		dec	eax
		jz	loc_1003842
		sub	eax, 11Ch
		jz	loc_1003832
		sub	eax, 0E6h
		jz	loc_100380E
		sub	eax, 7CE8h
		jz	loc_10037E1

loc_10036CA:				; CODE XREF: NPWndProc(x,x,x,x)+3Fj
					; NPWndProc(x,x,x,x)+126j
		cmp	esi, _wFRMsg
		jnz	loc_10037CC
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax+0Ch]
		mov	eax, ecx
		mov	esi, ecx
		shr	esi, 2
		not	eax
		and	eax, 1
		and	esi, 1
		test	dl, cl
		mov	_fReverse, eax
		mov	_fCase,	esi
		jz	short loc_100370A
		push	_hWaitCursor	; hCursor
		mov	esi, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	esi ; SetCursor(x) ; SetCursor(x)
		jmp	short loc_1003724
; ---------------------------------------------------------------------------

loc_100370A:				; CODE XREF: NPWndProc(x,x,x,x)+2CFj
		test	cl, 10h
		jz	short loc_100373B
		push	_hWaitCursor	; hCursor
		mov	esi, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	esi ; SetCursor(x) ; SetCursor(x)
		push	1
		call	_ReplaceSel@4	; ReplaceSel(x)

loc_1003724:				; CODE XREF: NPWndProc(x,x,x,x)+2DFj
		push	offset _szSearch ; Str2
		call	_Search@4	; Search(x)
		push	_hStdCursor	; hCursor
		call	esi ; SetCursor(x) ; SetCursor(x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_100373B:				; CODE XREF: NPWndProc(x,x,x,x)+2E4j
		test	cl, 20h
		jz	short loc_10037B7
		xor	esi, esi
		cmp	eax, esi
		jz	short loc_100374C
		mov	_fReverse, esi

loc_100374C:				; CODE XREF: NPWndProc(x,x,x,x)+31Bj
		push	ebx
		push	_hWaitCursor	; hCursor
		mov	ebx, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	ebx ; SetCursor(x) ; SetCursor(x)
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1003770:				; CODE XREF: NPWndProc(x,x,x,x)+359j
		push	esi
		call	_ReplaceSel@4	; ReplaceSel(x)
		push	offset _szSearch ; Str2
		call	_Search@4	; Search(x)
		test	eax, eax
		jnz	short loc_1003770
		push	_hStdCursor	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		push	esi		; lParam
		push	esi		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	1
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)
		pop	ebx
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_10037B7:				; CODE XREF: NPWndProc(x,x,x,x)+315j
		test	cl, 40h
		jz	loc_10034BD
		and	_hDlgFind, 0
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_10037CC:				; CODE XREF: NPWndProc(x,x,x,x)+2A7j
		push	[ebp+arg_C]	; lParam

loc_10037CF:				; CODE XREF: NPWndProc(x,x,x,x)+507j
		push	[ebp+hDrop]	; wParam
		push	esi		; Msg

loc_10037D3:				; CODE XREF: NPWndProc(x,x,x,x)+F8j
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__DefWindowProcW@16 ; DefWindowProcW(x,x,x,x)
		jmp	loc_10034BF
; ---------------------------------------------------------------------------

loc_10037E1:				; CODE XREF: NPWndProc(x,x,x,x)+29Bj
		xor	esi, esi
		push	esi		; idThread
		call	ds:__imp__GetKeyboardLayout@4 ;	GetKeyboardLayout(x)
		and	ax, 3FFh
		cmp	ax, 11h
		jnz	short loc_10037F5
		inc	esi

loc_10037F5:				; CODE XREF: NPWndProc(x,x,x,x)+3C9j
		push	esi		; lParam
		push	1		; wParam
		push	0D8h		; Msg

loc_10037FD:				; CODE XREF: NPWndProc(x,x,x,x)+10Ej
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_100380E:				; CODE XREF: NPWndProc(x,x,x,x)+290j
		mov	eax, edi
		shr	eax, 10h
		and	ax, 0FFFh
		cmp	ax, 5
		jnz	loc_10038C7
		push	0		; int
		push	15h		; __int16
		push	[ebp+hWnd]	; hWnd
		call	_NPCommand@12	; NPCommand(x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003832:				; CODE XREF: NPWndProc(x,x,x,x)+285j
		push	[ebp+hWnd]	; hWnd
		push	[ebp+hDrop]	; hDrop
		call	_doDrop@8	; doDrop(x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003842:				; CODE XREF: NPWndProc(x,x,x,x)+27Aj
		cmp	_fRunBySetup, 0
		jz	loc_10034BD
		mov	eax, [ebp+arg_C]
		shr	eax, 10h
		test	ax, ax
		jz	loc_10034BD
		push	3		; uEnable
		push	0F020h		; uIDEnableItem
		push	_hSysMenuSetup	; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003876:				; CODE XREF: NPWndProc(x,x,x,x)+273j
		push	[ebp+hWnd]	; hWndNewOwner
		call	_NpResetMenu@4	; NpResetMenu(x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_1003883:				; CODE XREF: NPWndProc(x,x,x,x)+26Aj
		cmp	_fRunBySetup, 0
		mov	eax, [ebp+hDrop]
		jz	short loc_10038B0
		cmp	eax, 0F020h
		jz	loc_10034BD
		cmp	eax, 0F040h
		jz	loc_10034BD
		cmp	eax, 0F050h
		jz	loc_10034BD

loc_10038B0:				; CODE XREF: NPWndProc(x,x,x,x)+464j
		push	[ebp+arg_C]	; lParam
		push	eax		; wParam
		push	112h		; Msg
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__DefWindowProcW@16 ; DefWindowProcW(x,x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_10038C7:				; CODE XREF: NPWndProc(x,x,x,x)+263j
					; NPWndProc(x,x,x,x)+3F2j
		cmp	edi, _hwndEdit
		jnz	short loc_100391B
		mov	eax, [ebp+hDrop]
		shr	eax, 10h
		cmp	ax, 500h
		jz	short loc_10038E1
		cmp	ax, 501h
		jnz	short loc_100391B

loc_10038E1:				; CODE XREF: NPWndProc(x,x,x,x)+4B0j
		cmp	_dwEmSetHandle,	1
		jnz	short loc_10038F9
		mov	_dwEmSetHandle,	2
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_10038F9:				; CODE XREF: NPWndProc(x,x,x,x)+4BFj
		push	1010h		; uType
		push	_szNN		; lpCaption
		push	_szErrSpace	; lpText

loc_100390A:				; CODE XREF: NPWndProc(x,x,x,x)+152j
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		jmp	loc_10034BD
; ---------------------------------------------------------------------------

loc_100391B:				; CODE XREF: NPWndProc(x,x,x,x)+4A4j
					; NPWndProc(x,x,x,x)+4B6j
		push	edi		; int
		push	[ebp+hDrop]	; __int16
		push	[ebp+hWnd]	; hWnd
		call	_NPCommand@12	; NPCommand(x,x,x)
		test	eax, eax
		jnz	loc_10034BD
		push	edi
		jmp	loc_10037CF
_NPWndProc@16	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	RegWriteInt(HKEY hKey, LPCWSTR lpValueName, BYTE Data)
_RegWriteInt@12	proc near		; CODE XREF: SaveGlobals()+32p
					; SaveGlobals()+45p ...

hKey		= dword	ptr  8
lpValueName	= dword	ptr  0Ch
Data		= byte ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	4		; cbData
		lea	eax, [ebp+Data]
		push	eax		; lpData
		push	4		; dwType
		push	0		; Reserved
		push	[ebp+lpValueName] ; lpValueName
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegSetValueExW@24 ; RegSetValueExW(x,x,x,x,x,x)
		pop	ebp
		retn	0Ch
_RegWriteInt@12	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	RegWriteString(HKEY hKey, LPCWSTR lpValueName, LPCWSTR lpData)
_RegWriteString@12 proc	near		; CODE XREF: SaveGlobals()+15Ep
					; SaveGlobals()+170p ...

hKey		= dword	ptr  8
lpValueName	= dword	ptr  0Ch
lpData		= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	[ebp+lpData]	; lpString
		call	ds:__imp__lstrlenW@4 ; lstrlenW(x)
		lea	eax, [eax+eax+2]
		push	eax		; cbData
		push	[ebp+lpData]	; lpData
		push	1		; dwType
		push	0		; Reserved
		push	[ebp+lpValueName] ; lpValueName
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegSetValueExW@24 ; RegSetValueExW(x,x,x,x,x,x)
		pop	ebp
		retn	0Ch
_RegWriteString@12 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	RegGetInt(HKEY hKey, LPCWSTR lpValueName, int)
_RegGetInt@12	proc near		; CODE XREF: GetGlobals()+59p
					; GetGlobals()+6Ep ...

cbData		= dword	ptr -0Ch
Data		= byte ptr -8
Type		= dword	ptr -4
hKey		= dword	ptr  8
lpValueName	= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 0Ch
		and	[ebp+Type], 0
		cmp	[ebp+hKey], 0
		mov	dword ptr [ebp+Data], 1
		mov	[ebp+cbData], 4
		jz	short loc_10039D1
		lea	eax, [ebp+cbData]
		push	eax		; lpcbData
		lea	eax, [ebp+Data]
		push	eax		; lpData
		lea	eax, [ebp+Type]
		push	eax		; lpType
		push	0		; lpReserved
		push	[ebp+lpValueName] ; lpValueName
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegQueryValueExW@24 ;	RegQueryValueExW(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_10039D1
		cmp	[ebp+Type], 4
		jz	short loc_10039D6

loc_10039D1:				; CODE XREF: RegGetInt(x,x,x)+1Ej
					; RegGetInt(x,x,x)+3Cj
		mov	eax, [ebp+arg_8]
		jmp	short locret_10039D9
; ---------------------------------------------------------------------------

loc_10039D6:				; CODE XREF: RegGetInt(x,x,x)+42j
		mov	eax, dword ptr [ebp+Data]

locret_10039D9:				; CODE XREF: RegGetInt(x,x,x)+47j
		leave
		retn	0Ch
_RegGetInt@12	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	RegGetString(HKEY Type,	LPCWSTR	lpValueName, int, LPBYTE lpData, DWORD cbData)
_RegGetString@20 proc near		; CODE XREF: GetGlobals()+159p
					; GetGlobals()+1BCp ...

Type		= dword	ptr  8
lpValueName	= dword	ptr  0Ch
arg_8		= dword	ptr  10h
lpData		= dword	ptr  14h
cbData		= dword	ptr  18h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, [ebp+cbData]
		add	esi, esi
		cmp	[ebp+Type], 0
		push	edi
		mov	edi, [ebp+lpData]
		mov	[ebp+cbData], esi
		jz	short loc_1003A1B
		lea	eax, [ebp+cbData]
		push	eax		; lpcbData
		push	edi		; lpData
		lea	eax, [ebp+Type]
		push	eax		; lpType
		push	0		; lpReserved
		push	[ebp+lpValueName] ; lpValueName
		push	[ebp+Type]	; hKey
		call	ds:__imp__RegQueryValueExW@24 ;	RegQueryValueExW(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_1003A1B
		cmp	[ebp+Type], 1
		jz	short loc_1003A2E

loc_1003A1B:				; CODE XREF: RegGetString(x,x,x,x,x)+16j
					; RegGetString(x,x,x,x,x)+31j
		mov	ecx, esi
		mov	esi, [ebp+arg_8]
		mov	eax, ecx
		shr	ecx, 2
		rep movsd
		mov	ecx, eax
		and	ecx, 3
		rep movsb

loc_1003A2E:				; CODE XREF: RegGetString(x,x,x,x,x)+37j
		pop	edi
		pop	esi
		pop	ebp
		retn	14h
_RegGetString@20 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SaveGlobals()
_SaveGlobals@0	proc near		; CODE XREF: NPWndProc(x,x,x,x):loc_100358Cp

wndpl		= WINDOWPLACEMENT ptr -30h
hKey		= dword	ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		lea	eax, [ebp+hKey]
		push	eax		; phkResult
		push	offset SubKey	; "Software\\Microsoft\\Notepad"
		push	80000001h	; hKey
		call	ds:__imp__RegCreateKeyW@12 ; RegCreateKeyW(x,x,x)
		test	eax, eax
		jnz	locret_1003C8B
		push	_FontStruct.lfEscapement ; Data
		push	offset aLfescapement ; "lfEscapement"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_FontStruct.lfOrientation ; Data
		push	offset aLforientation ;	"lfOrientation"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_FontStruct.lfWeight ; Data
		push	offset aLfweight ; "lfWeight"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfItalic
		push	eax		; Data
		push	offset aLfitalic ; "lfItalic"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfUnderline
		push	eax		; Data
		push	offset aLfunderline ; "lfUnderline"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfStrikeOut
		push	eax		; Data
		push	offset aLfstrikeout ; "lfStrikeOut"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfCharSet
		push	eax		; Data
		push	offset aLfcharset ; "lfCharSet"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfOutPrecision
		push	eax		; Data
		push	offset aLfoutprecision ; "lfOutPrecision"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfClipPrecision
		push	eax		; Data
		push	offset aLfclipprecisio ; "lfClipPrecision"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfQuality
		push	eax		; Data
		push	offset aLfquality ; "lfQuality"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		movzx	eax, _FontStruct.lfPitchAndFamily
		push	eax		; Data
		push	offset aLfpitchandfami ; "lfPitchAndFamily"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_iPointSize	; Data
		push	offset aIpointsize ; "iPointSize"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_fWrap		; Data
		push	offset aFwrap	; "fWrap"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_fStatus	; Data
		push	offset aStatusbar ; "StatusBar"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	Data		; Data
		push	offset aFsavewindowpos ; "fSaveWindowPositions"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	offset _FontStruct.lfFaceName ;	lpData
		push	offset aLffacename ; "lfFaceName"
		push	[ebp+hKey]	; hKey
		call	_RegWriteString@12 ; RegWriteString(x,x,x)
		push	offset _chPageText ; lpData
		push	offset aSzheader ; "szHeader"
		push	[ebp+hKey]	; hKey
		call	_RegWriteString@12 ; RegWriteString(x,x,x)
		push	offset String1	; lpData
		push	offset aSztrailer ; "szTrailer"
		push	[ebp+hKey]	; hKey
		call	_RegWriteString@12 ; RegWriteString(x,x,x)
		push	_g_PageSetupDlg.rtMargin.top ; Data
		push	offset aImargintop ; "iMarginTop"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.bottom	; Data
		push	offset aImarginbottom ;	"iMarginBottom"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.left ;	Data
		push	offset aImarginleft ; "iMarginLeft"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.right ; Data
		push	offset aImarginright ; "iMarginRight"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	_fMLE_is_broken	; Data
		push	offset aFmle_is_broken ; "fMLE_is_broken"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		lea	eax, [ebp+wndpl]
		push	eax		; lpwndpl
		push	_hwndNP		; hWnd
		mov	[ebp+wndpl.length], 2Ch
		call	ds:__imp__GetWindowPlacement@8 ; GetWindowPlacement(x,x)
		test	eax, eax
		jz	short loc_1003C82
		push	[ebp+wndpl.rcNormalPosition.left] ; Data
		push	offset aIwindowposx ; "iWindowPosX"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		push	[ebp+wndpl.rcNormalPosition.top] ; Data
		push	offset aIwindowposy ; "iWindowPosY"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		mov	eax, [ebp+wndpl.rcNormalPosition.right]
		sub	eax, [ebp+wndpl.rcNormalPosition.left]
		push	eax		; Data
		push	offset aIwindowposdx ; "iWindowPosDX"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)
		mov	eax, [ebp+wndpl.rcNormalPosition.bottom]
		sub	eax, [ebp+wndpl.rcNormalPosition.top]
		push	eax		; Data
		push	offset aIwindowposdy ; "iWindowPosDY"
		push	[ebp+hKey]	; hKey
		call	_RegWriteInt@12	; RegWriteInt(x,x,x)

loc_1003C82:				; CODE XREF: SaveGlobals()+1FFj
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegCloseKey@4	; RegCloseKey(x)

locret_1003C8B:				; CODE XREF: SaveGlobals()+1Ej
		leave
		retn
_SaveGlobals@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	GetGlobals()
_GetGlobals@0	proc near		; CODE XREF: NPInit(x,x,x,x)+FDp

hKey		= dword	ptr -64h
pv		= byte ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= byte ptr -4Ch
var_4B		= byte ptr -4Bh
var_4A		= byte ptr -4Ah
var_49		= byte ptr -49h
var_48		= byte ptr -48h
var_47		= byte ptr -47h
var_46		= byte ptr -46h
var_45		= byte ptr -45h
var_4		= dword	ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 64h
		mov	eax, ___security_cookie
		push	esi
		push	edi
		push	10h		; i
		mov	[ebp+var_4], eax
		call	ds:__imp__GetStockObject@4 ; GetStockObject(x)
		xor	edi, edi
		cmp	eax, edi
		jz	short loc_1003CBF
		lea	ecx, [ebp+pv]
		push	ecx		; pv
		push	5Ch		; c
		push	eax		; h
		call	ds:__imp__GetObjectW@12	; GetObjectW(x,x,x)

loc_1003CBF:				; CODE XREF: GetGlobals()+1Ej
		lea	eax, [ebp+hKey]
		push	eax		; phkResult
		push	offset SubKey	; "Software\\Microsoft\\Notepad"
		push	80000001h	; hKey
		call	ds:__imp__RegCreateKeyW@12 ; RegCreateKeyW(x,x,x)
		test	eax, eax
		jz	short loc_1003CDA
		mov	[ebp+hKey], edi

loc_1003CDA:				; CODE XREF: GetGlobals()+43j
		push	[ebp+var_58]	; int
		mov	_FontStruct.lfWidth, edi
		push	offset aLfescapement ; "lfEscapement"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	[ebp+var_54]	; int
		mov	_FontStruct.lfEscapement, eax
		push	offset aLforientation ;	"lfOrientation"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	[ebp+var_50]	; int
		mov	_FontStruct.lfOrientation, eax
		push	offset aLfweight ; "lfWeight"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfWeight, eax
		movzx	eax, [ebp+var_4C]
		push	eax		; int
		push	offset aLfitalic ; "lfItalic"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfItalic, al
		movzx	eax, [ebp+var_4B]
		push	eax		; int
		push	offset aLfunderline ; "lfUnderline"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfUnderline, al
		movzx	eax, [ebp+var_4A]
		push	eax		; int
		push	offset aLfstrikeout ; "lfStrikeOut"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfStrikeOut, al
		movzx	eax, [ebp+var_49]
		push	eax		; int
		push	offset aLfcharset ; "lfCharSet"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfCharSet, al
		movzx	eax, [ebp+var_48]
		push	eax		; int
		push	offset aLfoutprecision ; "lfOutPrecision"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfOutPrecision, al
		movzx	eax, [ebp+var_47]
		push	eax		; int
		push	offset aLfclipprecisio ; "lfClipPrecision"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfClipPrecision, al
		movzx	eax, [ebp+var_46]
		push	eax		; int
		push	offset aLfquality ; "lfQuality"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_FontStruct.lfQuality, al
		movzx	eax, [ebp+var_45]
		push	eax		; int
		push	offset aLfpitchandfami ; "lfPitchAndFamily"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	20h		; cbData
		push	offset _FontStruct.lfFaceName ;	lpData
		push	offset aLucidaConsole ;	"Lucida	Console"
		push	offset aLffacename ; "lfFaceName"
		push	[ebp+hKey]	; Type
		mov	_FontStruct.lfPitchAndFamily, al
		call	_RegGetString@20 ; RegGetString(x,x,x,x,x)
		push	64h		; int
		push	offset aIpointsize ; "iPointSize"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	edi		; int
		push	offset aFwrap	; "fWrap"
		push	[ebp+hKey]	; hKey
		mov	_iPointSize, eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	_fWrap,	eax
		push	edi		; int
		push	offset aStatusbar ; "StatusBar"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	edi		; int
		push	offset aFsavewindowpos ; "fSaveWindowPositions"
		push	[ebp+hKey]	; hKey
		mov	_fStatus, eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	28h		; cbData
		mov	Data, eax
		mov	eax, offset _chPageText
		push	eax		; lpData
		push	eax		; int
		push	offset aSzheader ; "szHeader"
		push	[ebp+hKey]	; Type
		call	_RegGetString@20 ; RegGetString(x,x,x,x,x)
		push	28h		; cbData
		mov	eax, offset String1
		push	eax		; lpData
		push	eax		; int
		push	offset aSztrailer ; "szTrailer"
		push	[ebp+hKey]	; Type
		call	_RegGetString@20 ; RegGetString(x,x,x,x,x)
		push	_g_PageSetupDlg.rtMargin.top ; int
		push	offset aImargintop ; "iMarginTop"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.bottom	; int
		mov	_g_PageSetupDlg.rtMargin.top, eax
		push	offset aImarginbottom ;	"iMarginBottom"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.left ;	int
		mov	_g_PageSetupDlg.rtMargin.bottom, eax
		push	offset aImarginleft ; "iMarginLeft"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	_g_PageSetupDlg.rtMargin.right ; int
		mov	_g_PageSetupDlg.rtMargin.left, eax
		push	offset aImarginright ; "iMarginRight"
		push	[ebp+hKey]	; hKey
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		mov	esi, 80000000h
		push	esi		; int
		push	offset aIwindowposy ; "iWindowPosY"
		push	[ebp+hKey]	; hKey
		mov	_g_PageSetupDlg.rtMargin.right,	eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	esi		; int
		push	offset aIwindowposx ; "iWindowPosX"
		push	[ebp+hKey]	; hKey
		mov	Y, eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	esi		; int
		push	offset aIwindowposdx ; "iWindowPosDX"
		push	[ebp+hKey]	; hKey
		mov	X, eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	esi		; int
		push	offset aIwindowposdy ; "iWindowPosDY"
		push	[ebp+hKey]	; hKey
		mov	nWidth,	eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		push	edi		; int
		push	offset aFmle_is_broken ; "fMLE_is_broken"
		push	[ebp+hKey]	; hKey
		mov	nHeight, eax
		call	_RegGetInt@12	; RegGetInt(x,x,x)
		cmp	[ebp+hKey], edi
		pop	edi
		mov	_fMLE_is_broken, eax
		pop	esi
		jz	short loc_1003F3D
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegCloseKey@4	; RegCloseKey(x)

loc_1003F3D:				; CODE XREF: GetGlobals()+2A0j
		mov	ecx, [ebp+var_4]
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn
_GetGlobals@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_1003F4C	proc near		; CODE XREF: ProcessSetupOption(x)+18p
					; ProcessShellOptions(x,x)+19p	...

var_4		= dword	ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		push	esi
		push	edi
		mov	edi, ecx
		mov	ebx, eax
		mov	ax, [edi]
		test	ax, ax
		jz	short loc_1003F88
		mov	esi, ds:__imp__CharUpperW@4 ; CharUpperW(x)

loc_1003F67:				; CODE XREF: sub_1003F4C+3Aj
		movzx	eax, ax
		push	eax		; lpsz
		call	esi ; CharUpperW(x) ; CharUpperW(x)
		mov	[ebp+var_4], eax
		movzx	eax, word ptr [ebx]
		inc	edi
		inc	edi
		inc	ebx
		push	eax		; lpsz
		inc	ebx
		call	esi ; CharUpperW(x) ; CharUpperW(x)
		cmp	word ptr [ebp+var_4], ax
		jnz	short loc_1003F8F
		mov	ax, [edi]
		test	ax, ax
		jnz	short loc_1003F67

loc_1003F88:				; CODE XREF: sub_1003F4C+13j
		xor	eax, eax

loc_1003F8A:				; CODE XREF: sub_1003F4C+46j
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
; ---------------------------------------------------------------------------

loc_1003F8F:				; CODE XREF: sub_1003F4C+32j
		xor	eax, eax
		inc	eax
		jmp	short loc_1003F8A
sub_1003F4C	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	GetFileName(LPWSTR lpFileName, LPCWSTR lpString2)
_GetFileName@8	proc near		; CODE XREF: ProcessSetupOption(x)+83p
					; ProcessShellOptions(x,x)+70p	...

FindFileData	= _WIN32_FIND_DATAW ptr	-254h
var_4		= dword	ptr -4
lpFileName	= dword	ptr  8
lpString2	= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 254h
		mov	eax, ___security_cookie
		push	ebx
		mov	ebx, [ebp+lpFileName]
		push	esi
		mov	esi, [ebp+lpString2]
		mov	[ebp+var_4], eax
		mov	ax, [esi]
		cmp	ax, 22h
		push	edi
		mov	ecx, ebx
		jz	short loc_1003FD5
		cmp	ax, 27h
		jz	short loc_1003FD5
		push	104h		; iMaxLength
		push	esi		; lpString2
		push	ebx		; lpString1
		call	ds:__imp__lstrcpynW@12 ; lstrcpynW(x,x,x)
		jmp	short loc_1004000
; ---------------------------------------------------------------------------

loc_1003FD5:				; CODE XREF: GetFileName(x,x)+25j
					; GetFileName(x,x)+2Bj
		xor	edx, edx
		inc	esi
		mov	edi, eax
		inc	esi
		jmp	short loc_1003FF4
; ---------------------------------------------------------------------------

loc_1003FDD:				; CODE XREF: GetFileName(x,x)+61j
		cmp	ax, di
		jz	short loc_1003FFC
		cmp	edx, 104h
		jnb	short loc_1003FFC
		mov	[ecx], ax
		inc	ecx
		inc	ecx
		inc	edx
		inc	esi
		inc	esi
		xor	eax, eax

loc_1003FF4:				; CODE XREF: GetFileName(x,x)+42j
		mov	ax, [esi]
		test	ax, ax
		jnz	short loc_1003FDD

loc_1003FFC:				; CODE XREF: GetFileName(x,x)+47j
					; GetFileName(x,x)+4Fj
		and	word ptr [ecx],	0

loc_1004000:				; CODE XREF: GetFileName(x,x)+3Aj
		mov	edi, ds:__imp__FindFirstFileW@8	; FindFirstFileW(x,x)
		lea	eax, [ebp+FindFileData]
		push	eax		; lpFindFileData
		push	ebx		; lpFileName
		call	edi ; FindFirstFileW(x,x) ; FindFirstFileW(x,x)
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_100402A
		push	ebx		; lpString1
		call	_AddExt@4	; AddExt(x)
		lea	eax, [ebp+FindFileData]
		push	eax		; lpFindFileData
		push	ebx		; lpFileName
		call	edi ; FindFirstFileW(x,x) ; FindFirstFileW(x,x)
		cmp	eax, 0FFFFFFFFh
		jz	short loc_1004031

loc_100402A:				; CODE XREF: GetFileName(x,x)+7Aj
		push	eax		; hFindFile
		call	ds:__imp__FindClose@4 ;	FindClose(x)

loc_1004031:				; CODE XREF: GetFileName(x,x)+8Fj
		mov	ecx, [ebp+var_4]
		pop	edi
		mov	eax, esi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	8
_GetFileName@8	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SizeStrings(HINSTANCE hInstance)
_SizeStrings@4	proc near		; CODE XREF: InitStrings(x)+8p

hMem		= dword	ptr -4
hInstance	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		push	esi
		push	edi
		mov	esi, 118h
		push	230h
		jmp	short loc_100409B
; ---------------------------------------------------------------------------

loc_100405C:				; CODE XREF: SizeStrings(x)+61j
		xor	edi, edi
		xor	ebx, ebx

loc_1004060:				; CODE XREF: SizeStrings(x)+3Ej
		mov	eax, _rgsz[edi*4]
		push	esi		; cchBufferMax
		push	[ebp+hMem]	; lpBuffer
		push	dword ptr [eax]	; uID
		push	[ebp+hInstance]	; hInstance
		call	ds:__imp__LoadStringW@16 ; LoadStringW(x,x,x,x)
		lea	ecx, [esi-1]
		cmp	eax, ecx
		jge	short loc_1004087
		inc	edi
		cmp	edi, 2Dh
		lea	ebx, [ebx+eax+1]
		jl	short loc_1004060

loc_1004087:				; CODE XREF: SizeStrings(x)+34j
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		cmp	edi, 2Dh
		jge	short loc_10040AC
		add	esi, esi
		lea	eax, [esi+esi]
		push	eax		; uBytes

loc_100409B:				; CODE XREF: SizeStrings(x)+13j
		push	40h		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		test	eax, eax
		mov	[ebp+hMem], eax
		jnz	short loc_100405C
		jmp	short loc_10040AE
; ---------------------------------------------------------------------------

loc_10040AC:				; CODE XREF: SizeStrings(x)+4Cj
		mov	eax, ebx

loc_10040AE:				; CODE XREF: SizeStrings(x)+63j
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	4
_SizeStrings@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	InitStrings(HINSTANCE hInstance)
_InitStrings@4	proc near		; CODE XREF: NPInit(x,x,x,x)+65p

hInstance	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	[ebp+hInstance]	; hInstance
		call	_SizeStrings@4	; SizeStrings(x)
		test	eax, eax
		jz	loc_1004159
		push	esi
		add	eax, eax
		push	eax		; uBytes
		push	40h		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		mov	esi, eax
		test	esi, esi
		jz	short loc_1004158
		push	ebx
		push	esi		; hMem
		call	ds:__imp__LocalSize@4 ;	LocalSize(x)
		mov	ebx, eax
		shr	ebx, 1
		jnz	short loc_10040F3
		xor	eax, eax
		jmp	short loc_1004157
; ---------------------------------------------------------------------------

loc_10040F3:				; CODE XREF: InitStrings(x)+33j
		push	edi
		mov	edi, offset _rgsz

loc_10040F9:				; CODE XREF: InitStrings(x)+65j
		mov	eax, [edi]
		push	ebx		; cchBufferMax
		push	esi		; lpBuffer
		push	dword ptr [eax]	; uID
		push	[ebp+hInstance]	; hInstance
		call	ds:__imp__LoadStringW@16 ; LoadStringW(x,x,x,x)
		mov	ecx, [edi]
		inc	eax
		cmp	eax, ebx
		mov	[ecx], esi
		lea	esi, [esi+eax*2]
		jg	short loc_100415D
		add	edi, 4
		sub	ebx, eax
		cmp	edi, offset off_100919C
		jl	short loc_10040F9
		mov	esi, ds:__imp__lstrcpynW@12 ; lstrcpynW(x,x,x)
		push	28h		; iMaxLength
		push	dword ptr _szHelpFile+4	; lpString2
		push	offset _chPageText ; lpString1
		call	esi ; lstrcpynW(x,x,x) ; lstrcpynW(x,x,x)
		push	28h		; iMaxLength
		push	dword ptr _szHelpFile+8	; lpString2
		push	offset String1	; lpString1
		call	esi ; lstrcpynW(x,x,x) ; lstrcpynW(x,x,x)
		mov	eax, _szMerge
		mov	ax, [eax]
		mov	_chMerge, ax
		xor	eax, eax
		inc	eax

loc_1004156:				; CODE XREF: InitStrings(x)+B9j
		pop	edi

loc_1004157:				; CODE XREF: InitStrings(x)+37j
		pop	ebx

loc_1004158:				; CODE XREF: InitStrings(x)+25j
		pop	esi

loc_1004159:				; CODE XREF: InitStrings(x)+Fj
		pop	ebp
		retn	4
; ---------------------------------------------------------------------------

loc_100415D:				; CODE XREF: InitStrings(x)+58j
		push	0		; uType
		push	offset Caption	; "DEV Error!"
		push	offset Text	; "Out of RC string space!!"
		push	0		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		xor	eax, eax
		jmp	short loc_1004156
_InitStrings@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall SkipBlanks(x)
_SkipBlanks@4	proc near		; CODE XREF: ProcessSetupOption(x)+6Ep
					; ProcessShellOptions(x,x)+28p	...

arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]

loc_1004182:				; CODE XREF: SkipBlanks(x)+19j
		mov	cx, [eax]
		cmp	cx, 20h
		jz	short loc_1004191
		cmp	cx, 9
		jnz	short loc_1004195

loc_1004191:				; CODE XREF: SkipBlanks(x)+Fj
		inc	eax
		inc	eax
		jmp	short loc_1004182
; ---------------------------------------------------------------------------

loc_1004195:				; CODE XREF: SkipBlanks(x)+15j
		pop	ebp
		retn	4
_SkipBlanks@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall ProcessSetupOption(x)
_ProcessSetupOption@4 proc near		; CODE XREF: NPInit(x,x,x,x)+437p

var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		push	esi
		mov	esi, [ebp+arg_0]
		push	edi
		xor	edi, edi
		mov	eax, esi
		mov	ecx, offset a_setup ; "/.SETUP"
		mov	[ebp+var_4], edi
		call	sub_1003F4C
		test	eax, eax
		jnz	loc_10042EB
		push	edi		; bRevert
		push	_hwndNP		; hWnd
		mov	_fRunBySetup, 1
		call	ds:__imp__GetSystemMenu@8 ; GetSystemMenu(x,x)
		push	offset TableName ; "SlipUpAcc"
		push	_hInstanceNP	; hInstance
		mov	_hSysMenuSetup,	eax
		call	ds:__imp__LoadAcceleratorsW@8 ;	LoadAcceleratorsW(x,x)
		push	0FD0000h	; dwNewLong
		push	0FFFFFFF0h	; nIndex
		push	_hwndNP		; hWnd
		mov	_hAccel, eax
		call	ds:__imp__SetWindowLongW@12 ; SetWindowLongW(x,x,x)
		add	esi, 0Eh
		push	esi
		call	_SkipBlanks@4	; SkipBlanks(x)
		cmp	[eax], di
		jz	loc_10042E6
		push	eax		; lpString2
		mov	esi, offset _szFileName
		push	esi		; lpFileName
		call	_GetFileName@8	; GetFileName(x,x)
		push	edi		; hTemplateFile
		mov	ebx, 80h
		push	ebx		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	edi		; lpSecurityAttributes
		mov	edi, ds:__imp__CreateFileW@28 ;	CreateFileW(x,x,x,x,x,x,x)
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		push	esi		; lpFileName
		call	edi ; CreateFileW(x,x,x,x,x,x,x) ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	_fp, eax
		jnz	loc_10042D2
		call	ds:__imp__GetLastError@0 ; GetLastError()
		dec	eax
		dec	eax
		jz	short loc_1004291
		sub	eax, 3
		push	31h		; uType
		push	esi		; lpString
		jz	short loc_1004289
		sub	eax, 76h
		jz	short loc_1004281
		push	_szDiskError	; lpText

loc_100426B:				; CODE XREF: ProcessSetupOption(x)+E9j
					; ProcessSetupOption(x)+F1j
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		mov	[ebp+var_4], eax
		jmp	short loc_10042C9
; ---------------------------------------------------------------------------

loc_1004281:				; CODE XREF: ProcessSetupOption(x)+C5j
		push	_szNVF
		jmp	short loc_100426B
; ---------------------------------------------------------------------------

loc_1004289:				; CODE XREF: ProcessSetupOption(x)+C0j
		push	_szACCESSDENY
		jmp	short loc_100426B
; ---------------------------------------------------------------------------

loc_1004291:				; CODE XREF: ProcessSetupOption(x)+B8j
		push	33h		; uType
		push	esi		; lpString
		push	_szFNF		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		cmp	eax, 6
		mov	[ebp+var_4], eax
		jnz	short loc_10042C9
		push	0		; hTemplateFile
		push	ebx		; dwFlagsAndAttributes
		push	4		; dwCreationDisposition
		push	0		; lpSecurityAttributes
		push	3		; dwShareMode
		push	0C0000000h	; dwDesiredAccess
		push	esi		; lpFileName
		call	edi ; CreateFileW(x,x,x,x,x,x,x) ; CreateFileW(x,x,x,x,x,x,x)
		mov	_fp, eax

loc_10042C9:				; CODE XREF: ProcessSetupOption(x)+E1j
					; ProcessSetupOption(x)+113j
		cmp	_fp, 0FFFFFFFFh
		jz	short loc_10042EB

loc_10042D2:				; CODE XREF: ProcessSetupOption(x)+AAj
		push	dword_1009A80	; int
		push	esi		; lpString
		call	_LoadFile@8	; LoadFile(x,x)
		push	2
		pop	eax
		cmp	[ebp+var_4], eax
		jz	short loc_10042ED

loc_10042E6:				; CODE XREF: ProcessSetupOption(x)+76j
		push	6
		pop	eax
		jmp	short loc_10042ED
; ---------------------------------------------------------------------------

loc_10042EB:				; CODE XREF: ProcessSetupOption(x)+1Fj
					; ProcessSetupOption(x)+132j
		xor	eax, eax

loc_10042ED:				; CODE XREF: ProcessSetupOption(x)+146j
					; ProcessSetupOption(x)+14Bj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	4
_ProcessSetupOption@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	ProcessShellOptions(int, int nCmdShow)
_ProcessShellOptions@8 proc near	; CODE XREF: NPInit(x,x,x,x)+45Ep

var_4		= dword	ptr -4
arg_0		= dword	ptr  8
nCmdShow	= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	esi
		mov	esi, [ebp+arg_0]
		push	edi
		mov	eax, esi
		mov	ecx, offset aPt	; "/PT"
		mov	[ebp+var_4], 1
		call	sub_1003F4C
		xor	edi, edi
		test	eax, eax
		jnz	short loc_100432B
		add	esi, 6
		push	esi
		call	_SkipBlanks@4	; SkipBlanks(x)
		mov	[ebp+var_4], edi
		jmp	short loc_1004348
; ---------------------------------------------------------------------------

loc_100432B:				; CODE XREF: ProcessShellOptions(x,x)+22j
		mov	eax, esi
		mov	ecx, offset aP	; "/P"
		call	sub_1003F4C
		test	eax, eax
		jnz	loc_100444B
		add	esi, 4
		push	esi
		call	_SkipBlanks@4	; SkipBlanks(x)

loc_1004348:				; CODE XREF: ProcessShellOptions(x,x)+30j
		mov	esi, eax
		cmp	[esi], di
		jz	loc_100444B
		push	[ebp+nCmdShow]	; nCmdShow
		push	_hwndNP		; hWnd
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
		push	esi		; lpString2
		mov	esi, offset _szFileName
		push	esi		; lpFileName
		call	_GetFileName@8	; GetFileName(x,x)
		inc	eax
		inc	eax
		cmp	[ebp+var_4], edi
		jnz	short loc_10043BF
		cmp	[eax], di
		jz	loc_100444B
		push	eax
		call	_SkipBlanks@4	; SkipBlanks(x)
		cmp	word ptr [eax],	22h
		jnz	loc_100444B
		inc	eax
		inc	eax
		xor	edx, edx
		jmp	short loc_10043AF
; ---------------------------------------------------------------------------

loc_1004394:				; CODE XREF: ProcessShellOptions(x,x)+BCj
		cmp	cx, 22h
		jz	short loc_10043B7
		cmp	edx, 0FFh
		jnb	short loc_10043B7
		mov	_szPrinterName[edx*2], cx
		inc	edx
		inc	eax
		inc	eax
		xor	ecx, ecx

loc_10043AF:				; CODE XREF: ProcessShellOptions(x,x)+99j
		mov	cx, [eax]
		cmp	cx, di
		jnz	short loc_1004394

loc_10043B7:				; CODE XREF: ProcessShellOptions(x,x)+9Fj
					; ProcessShellOptions(x,x)+A7j
		mov	_szPrinterName[edx*2], di

loc_10043BF:				; CODE XREF: ProcessShellOptions(x,x)+7Aj
		push	edi		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	edi		; lpSecurityAttributes
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		push	esi		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	_fp, eax
		jnz	short loc_100442A
		call	ds:__imp__GetLastError@0 ; GetLastError()
		dec	eax
		dec	eax
		jz	short loc_100440E
		sub	eax, 3
		jz	short loc_1004407
		sub	eax, 3Ch
		jz	short loc_1004407
		sub	eax, 3Ah
		jz	short loc_1004400
		mov	eax, _szDiskError
		jmp	short loc_1004413
; ---------------------------------------------------------------------------

loc_1004400:				; CODE XREF: ProcessShellOptions(x,x)+FEj
		mov	eax, _szNVF
		jmp	short loc_1004413
; ---------------------------------------------------------------------------

loc_1004407:				; CODE XREF: ProcessShellOptions(x,x)+F4j
					; ProcessShellOptions(x,x)+F9j
		mov	eax, _szACCESSDENY
		jmp	short loc_1004413
; ---------------------------------------------------------------------------

loc_100440E:				; CODE XREF: ProcessShellOptions(x,x)+EFj
		mov	eax, _szFNF

loc_1004413:				; CODE XREF: ProcessShellOptions(x,x)+105j
					; ProcessShellOptions(x,x)+10Cj ...
		push	30h		; uType
		push	esi		; lpString
		push	eax		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		jmp	short loc_1004446
; ---------------------------------------------------------------------------

loc_100442A:				; CODE XREF: ProcessShellOptions(x,x)+E5j
		push	dword_1009A80	; int
		push	esi		; lpString
		call	_LoadFile@8	; LoadFile(x,x)
		cmp	[ebp+var_4], edi
		jz	short loc_100443F
		push	1
		jmp	short loc_1004441
; ---------------------------------------------------------------------------

loc_100443F:				; CODE XREF: ProcessShellOptions(x,x)+140j
		push	2

loc_1004441:				; CODE XREF: ProcessShellOptions(x,x)+144j
		call	_PrintIt@4	; PrintIt(x)

loc_1004446:				; CODE XREF: ProcessShellOptions(x,x)+12Fj
		xor	eax, eax
		inc	eax
		jmp	short loc_100444D
; ---------------------------------------------------------------------------

loc_100444B:				; CODE XREF: ProcessShellOptions(x,x)+40j
					; ProcessShellOptions(x,x)+54j	...
		xor	eax, eax

loc_100444D:				; CODE XREF: ProcessShellOptions(x,x)+150j
		pop	edi
		pop	esi
		leave
		retn	8
_ProcessShellOptions@8 endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	CreateFilter(LPWSTR lpString)
_CreateFilter@4	proc near		; CODE XREF: NPInit(x,x,x,x)+53Bp
					; NPInit(x,x,x,x)+545p

lpString	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ebx
		mov	ebx, [ebp+lpString]
		push	esi
		mov	esi, ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		push	edi
		push	_szAnsiText	; lpString2
		push	ebx		; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		mov	edi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		push	ebx		; lpString
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		lea	ebx, [ebx+eax*2+2]
		push	offset a_txt_0	; "*.txt"
		push	ebx		; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		push	ebx		; lpString
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		push	_szAllFiles	; lpString2
		lea	ebx, [ebx+eax*2+2]
		push	ebx		; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		push	ebx		; lpString
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		lea	ebx, [ebx+eax*2+2]
		push	offset a_	; "*.*"
		push	ebx		; lpString1
		call	esi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
		push	ebx		; lpString
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		and	word ptr [ebx+eax*2+2],	0
		pop	edi
		pop	esi
		pop	ebx
		pop	ebp
		retn	4
_CreateFilter@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	EnumProc(const LOGFONTW	*, const TEXTMETRICW *,	DWORD, LPARAM)
_EnumProc@16	proc near		; DATA XREF: NPInit(x,x,x,x)+34Co

arg_0		= dword	ptr  8
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		mov	al, [eax+17h]
		mov	ecx, [ebp+arg_C]
		mov	[ecx+17h], al
		xor	eax, eax
		pop	ebp
		retn	10h
_EnumProc@16	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_10044D7	proc near		; CODE XREF: NPInit(x,x,x,x)+C9p

var_30		= WNDCLASSEXW ptr -30h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 30h
		push	edi
		push	29h		; nIndex
		mov	[ebp+var_30.cbSize], 30h
		call	ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
		neg	eax
		sbb	eax, eax
		add	eax, 7F01h
		push	eax		; lpCursorName
		xor	edi, edi
		push	edi		; hInstance
		call	ds:__imp__LoadCursorW@8	; LoadCursorW(x,x)
		push	2		; lpIconName
		push	esi		; hInstance
		mov	[ebp+var_30.hCursor], eax
		call	ds:__imp__LoadIconW@8 ;	LoadIconW(x,x)
		push	edi		; fuLoad
		push	10h		; cy
		push	10h		; cx
		push	1		; type
		push	2		; name
		push	esi		; hInst
		mov	[ebp+var_30.hIcon], eax
		call	ds:__imp__LoadImageW@24	; LoadImageW(x,x,x,x,x,x)
		mov	[ebp+var_30.hIconSm], eax
		lea	eax, [ebp+var_30]
		push	eax		; WNDCLASSEXW *
		mov	[ebp+var_30.lpszMenuName], 1
		mov	[ebp+var_30.hInstance],	esi
		mov	[ebp+var_30.lpszClassName], offset _szNotepad ;	"Notepad"
		mov	[ebp+var_30.lpfnWndProc], offset _NPWndProc@16 ; NPWndProc(x,x,x,x)
		mov	[ebp+var_30.hbrBackground], 6
		mov	[ebp+var_30.style], edi
		mov	[ebp+var_30.cbClsExtra], edi
		mov	[ebp+var_30.cbWndExtra], edi
		call	ds:__imp__RegisterClassExW@4 ; RegisterClassExW(x)
		neg	ax
		pop	edi
		sbb	eax, eax
		neg	eax
		leave
		retn
sub_10044D7	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NPInit(HINSTANCE hInstance, int, int, int nCmdShow)
_NPInit@16	proc near		; CODE XREF: WinMain(x,x,x,x)+45p

wndpl		= WINDOWPLACEMENT ptr -0A8h
Rect		= tagRECT ptr -7Ch
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
lParam		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
wParam		= dword	ptr -4Ch
hDC		= dword	ptr -48h
String1		= word ptr -44h
var_4		= dword	ptr -4
hInstance	= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
nCmdShow	= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 0A8h
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		mov	esi, [ebp+hInstance]
		push	edi
		mov	edi, ds:__imp__RegisterWindowMessageW@4	; RegisterWindowMessageW(x)
		mov	[ebp+var_4], eax
		mov	eax, [ebp+arg_8]
		push	offset String	; "commdlg_FindReplace"
		mov	[ebp+var_54], esi
		mov	[ebp+var_50], eax
		call	edi ; RegisterWindowMessageW(x)	; RegisterWindowMessageW(x)
		xor	ebx, ebx
		cmp	eax, ebx
		mov	_wFRMsg, eax
		jz	loc_10049AE
		push	offset aCommdlg_help ; "commdlg_help"
		call	edi ; RegisterWindowMessageW(x)	; RegisterWindowMessageW(x)
		cmp	eax, ebx
		mov	_wHlpMsg, eax
		jz	loc_10049AE
		push	ebx		; hWnd
		call	ds:__imp__GetDC@4 ; GetDC(x)
		cmp	eax, ebx
		mov	[ebp+hDC], eax
		jz	loc_10049AE
		push	esi		; hInstance
		call	_InitStrings@4	; InitStrings(x)
		test	eax, eax
		jz	loc_10049AE
		push	29h		; nIndex
		call	ds:__imp__GetSystemMetrics@4 ; GetSystemMetrics(x)
		mov	edi, ds:__imp__LoadCursorW@8 ; LoadCursorW(x,x)
		neg	eax
		sbb	eax, eax
		add	eax, 7F01h
		push	eax		; lpCursorName
		push	ebx		; hInstance
		call	edi ; LoadCursorW(x,x) ; LoadCursorW(x,x)
		push	7F02h		; lpCursorName
		push	ebx		; hInstance
		mov	_hStdCursor, eax
		call	edi ; LoadCursorW(x,x) ; LoadCursorW(x,x)
		push	offset aMainacc	; "MainAcc"
		push	esi		; hInstance
		mov	_hWaitCursor, eax
		call	ds:__imp__LoadAcceleratorsW@8 ;	LoadAcceleratorsW(x,x)
		cmp	_hWaitCursor, ebx
		mov	_hAccel, eax
		jz	loc_10049AE
		cmp	eax, ebx
		jz	loc_10049AE
		cmp	[ebp+arg_4], ebx
		jnz	short loc_100463B
		call	sub_10044D7
		test	eax, eax
		jz	loc_10049AE

loc_100463B:				; CODE XREF: NPInit(x,x,x,x)+C7j
		mov	_hInstanceNP, esi
		mov	_g_PageSetupDlg.lStructSize, 54h
		mov	_g_PageSetupDlg.hDevMode, ebx
		mov	_g_PageSetupDlg.hDevNames, ebx
		mov	_g_PageSetupDlg.hInstance, esi
		call	_SetPageSetupDefaults@0	; SetPageSetupDefaults()
		call	_GetGlobals@0	; GetGlobals()
		push	ebx		; lpParam
		push	esi		; hInstance
		push	ebx		; hMenu
		push	ebx		; hWndParent
		push	nHeight		; nHeight
		mov	esi, offset szOtherStuff
		push	nWidth		; nWidth
		push	Y		; Y
		push	X		; X
		push	0CF0000h	; dwStyle
		push	esi		; lpWindowName
		push	offset _szNotepad ; "Notepad"
		push	ebx		; dwExStyle
		call	ds:__imp__CreateWindowExW@48 ; CreateWindowExW(x,x,x,x,x,x,x,x,x,x,x,x)
		mov	edx, eax
		cmp	edx, ebx
		mov	_hwndNP, edx
		mov	_g_PageSetupDlg.hwndOwner, edx
		jz	loc_10049AE
		mov	eax, 80000000h
		cmp	nWidth,	eax
		jz	short loc_100471F
		cmp	nHeight, eax
		jz	short loc_100471F
		xor	eax, eax
		push	0Bh
		pop	ecx
		lea	edi, [ebp+wndpl]
		rep stosd
		mov	eax, X
		mov	ecx, nWidth
		mov	[ebp+wndpl.rcNormalPosition.left], eax
		add	eax, ecx
		mov	ecx, nHeight
		mov	[ebp+wndpl.rcNormalPosition.right], eax
		mov	eax, Y
		mov	[ebp+wndpl.rcNormalPosition.top], eax
		add	eax, ecx
		mov	[ebp+wndpl.rcNormalPosition.bottom], eax
		lea	eax, [ebp+wndpl]
		push	eax		; lpwndpl
		push	edx		; hWnd
		mov	[ebp+wndpl.length], 2Ch
		call	ds:__imp__SetWindowPlacement@8 ; SetWindowPlacement(x,x)
		mov	edx, _hwndNP

loc_100471F:				; CODE XREF: NPInit(x,x,x,x)+156j
					; NPInit(x,x,x,x)+15Ej
		push	1		; fAccept
		push	edx		; hWnd
		call	ds:__imp__DragAcceptFiles@8 ; DragAcceptFiles(x,x)
		mov	edi, ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
		lea	eax, [ebp+Rect]
		push	eax		; lpRect
		push	_hwndNP		; hWnd
		call	edi ; GetClientRect(x,x) ; GetClientRect(x,x)
		mov	eax, [ebp+Rect.bottom]
		push	ebx		; lpParam
		push	[ebp+var_54]	; hInstance
		add	eax, 0FFFFFF9Ch
		push	0Fh		; hMenu
		push	_hwndNP		; hWndParent
		push	eax		; nHeight
		push	[ebp+Rect.right] ; nWidth
		mov	eax, _fWrap
		neg	eax
		push	ebx		; Y
		sbb	eax, eax
		push	ebx		; X
		and	eax, 0FFF00000h
		add	eax, 50300104h
		push	eax		; dwStyle
		push	esi		; lpWindowName
		push	offset ClassName ; "Edit"
		push	200h		; dwExStyle
		call	ds:__imp__CreateWindowExW@48 ; CreateWindowExW(x,x,x,x,x,x,x,x,x,x,x,x)
		cmp	eax, ebx
		mov	_hwndEdit, eax
		jz	loc_10049AE
		mov	eax, _fStatus
		neg	eax
		push	401h		; wID
		push	_hwndNP		; hwndParent
		sbb	eax, eax
		and	eax, 10000000h
		push	esi		; lpszText
		or	eax, 44800000h
		push	eax		; style
		call	ds:__imp__CreateStatusWindowW@16 ; CreateStatusWindowW(x,x,x,x)
		cmp	eax, ebx
		mov	_hwndStatus, eax
		jz	loc_10049AE
		push	1
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)
		lea	eax, [ebp+var_6C]
		push	eax		; lpRect
		push	_hwndStatus	; hWnd
		call	edi ; GetClientRect(x,x) ; GetClientRect(x,x)
		mov	eax, [ebp+var_60]
		sub	eax, [ebp+var_68]
		push	4
		mov	_dyStatus, eax
		mov	eax, [ebp+var_64]
		sub	eax, [ebp+var_6C]
		pop	ecx
		lea	eax, [eax+eax*2]
		cdq
		idiv	ecx
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		or	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+lParam], eax
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		push	2		; wParam
		push	404h		; Msg
		push	_hwndStatus	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; lParam
		push	_fWrap		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	_fWrap,	ebx
		jz	short loc_1004840
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		push	1		; uEnable
		push	1Bh		; uIDEnableItem
		push	3		; nPos
		push	eax		; hMenu
		call	ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)

loc_1004840:				; CODE XREF: NPInit(x,x,x,x)+2B9j
		push	2D0h		; nDenominator
		push	5Ah		; index
		push	[ebp+hDC]	; hdc
		call	ds:__imp__GetDeviceCaps@8 ; GetDeviceCaps(x,x)
		push	eax		; nNumerator
		push	_iPointSize	; nNumber
		call	ds:__imp__MulDiv@12 ; MulDiv(x,x,x)
		neg	eax
		mov	edi, offset _FontStruct
		push	edi		; lplf
		mov	_FontStruct.lfHeight, eax
		call	ds:__imp__CreateFontIndirectW@4	; CreateFontIndirectW(x)
		push	eax		; h
		push	[ebp+hDC]	; hdc
		mov	_hFont,	eax
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		mov	[ebp+wParam], eax
		lea	eax, [ebp+String1]
		push	eax		; lpName
		push	20h		; c
		push	[ebp+hDC]	; hdc
		call	ds:__imp__GetTextFaceW@12 ; GetTextFaceW(x,x,x)
		push	[ebp+wParam]	; h
		push	[ebp+hDC]	; hdc
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		push	offset _FontStruct.lfFaceName ;	lpString2
		lea	eax, [ebp+String1]
		push	eax		; lpString1
		call	ds:__imp__lstrcmpiW@8 ;	lstrcmpiW(x,x)
		test	eax, eax
		jz	short loc_10048DC
		push	edi		; lParam
		push	offset _EnumProc@16 ; lpProc
		push	offset _FontStruct.lfFaceName ;	lpLogfont
		push	[ebp+hDC]	; hdc
		call	ds:__imp__EnumFontsW@16	; EnumFontsW(x,x,x,x)
		push	_hFont		; ho
		call	ds:__imp__DeleteObject@4 ; DeleteObject(x)
		push	edi		; lplf
		call	ds:__imp__CreateFontIndirectW@4	; CreateFontIndirectW(x)
		mov	_hFont,	eax

loc_10048DC:				; CODE XREF: NPInit(x,x,x,x)+349j
		push	ebx		; lParam
		push	_hFont		; wParam
		push	30h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	[ebp+hDC]	; hDC
		push	ebx		; hWnd
		call	ds:__imp__ReleaseDC@8 ;	ReleaseDC(x,x)
		push	2		; uBytes
		push	42h		; uFlags
		mov	_szSearch, bx
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		push	ebx		; lParam
		push	ebx		; wParam
		push	0C5h		; Msg
		push	_hwndEdit	; hWnd
		mov	_hEdit,	eax
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)
		push	_szUntitled	; pcchNewDestLength
		call	_SetTitle@4	; SetTitle(x)
		push	[ebp+nCmdShow]	; nCmdShow
		push	_hwndNP		; hWnd
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		push	[ebp+var_50]
		call	_SkipBlanks@4	; SkipBlanks(x)
		or	dword_1009A80, 0FFFFFFFFh
		mov	ecx, offset aA	; "/A"
		mov	edi, eax
		call	sub_1003F4C
		test	eax, eax
		jnz	short loc_100496D
		mov	dword_1009A80, ebx
		jmp	short loc_1004990
; ---------------------------------------------------------------------------

loc_100496D:				; CODE XREF: NPInit(x,x,x,x)+3FEj
		mov	eax, edi
		mov	ecx, offset aW	; "/W"
		call	sub_1003F4C
		test	eax, eax
		jnz	short loc_1004987
		mov	dword_1009A80, 1

loc_1004987:				; CODE XREF: NPInit(x,x,x,x)+416j
		cmp	dword_1009A80, 0FFFFFFFFh
		jz	short loc_100499B

loc_1004990:				; CODE XREF: NPInit(x,x,x,x)+406j
		add	edi, 4
		push	edi
		call	_SkipBlanks@4	; SkipBlanks(x)
		mov	edi, eax

loc_100499B:				; CODE XREF: NPInit(x,x,x,x)+429j
		push	edi
		call	_ProcessSetupOption@4 ;	ProcessSetupOption(x)
		cmp	eax, ebx
		jz	short loc_10049BF
		cmp	eax, 2
		jnz	loc_1004A9B

loc_10049AE:				; CODE XREF: NPInit(x,x,x,x)+38j
					; NPInit(x,x,x,x)+4Cj ...
		xor	eax, eax

loc_10049B0:				; CODE XREF: NPInit(x,x,x,x)+5F6j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	10h
; ---------------------------------------------------------------------------

loc_10049BF:				; CODE XREF: NPInit(x,x,x,x)+43Ej
		push	[ebp+nCmdShow]	; nCmdShow
		push	edi		; int
		call	_ProcessShellOptions@8 ; ProcessShellOptions(x,x)
		test	eax, eax
		jz	short loc_10049E1
		push	ebx		; lParam
		push	ebx		; wParam
		push	10h		; Msg
		push	_hwndNP		; hWnd
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)
		jmp	loc_1004B58
; ---------------------------------------------------------------------------

loc_10049E1:				; CODE XREF: NPInit(x,x,x,x)+465j
		cmp	[edi], bx
		jz	loc_1004A9B
		push	edi		; lpString2
		mov	edi, offset _szFileName
		push	edi		; lpFileName
		call	_GetFileName@8	; GetFileName(x,x)
		push	ebx		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	3		; dwCreationDisposition
		push	ebx		; lpSecurityAttributes
		push	3		; dwShareMode
		push	80000000h	; dwDesiredAccess
		push	edi		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	_fp, eax
		jnz	short loc_1004A8F
		call	ds:__imp__GetLastError@0 ; GetLastError()
		cmp	eax, 2
		jnz	short loc_1004A68
		push	33h		; uType
		push	edi		; lpString
		push	_szFNF		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		cmp	eax, 2
		jz	loc_10049AE
		cmp	eax, 6
		jnz	short loc_1004A86
		push	ebx		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	4		; dwCreationDisposition
		push	ebx		; lpSecurityAttributes
		push	3		; dwShareMode
		push	0C0000000h	; dwDesiredAccess
		push	edi		; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		mov	_fp, eax
		jmp	short loc_1004A86
; ---------------------------------------------------------------------------

loc_1004A68:				; CODE XREF: NPInit(x,x,x,x)+4BBj
		push	edi		; lpString
		call	_AlertUser_FileFail@4 ;	AlertUser_FileFail(x)
		push	_szUntitled	; pcchNewDestLength
		call	_SetTitle@4	; SetTitle(x)
		push	_szUntitled	; lpString2
		push	edi		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)

loc_1004A86:				; CODE XREF: NPInit(x,x,x,x)+4E3j
					; NPInit(x,x,x,x)+501j
		cmp	_fp, 0FFFFFFFFh
		jz	short loc_1004A9B

loc_1004A8F:				; CODE XREF: NPInit(x,x,x,x)+4B0j
		push	dword_1009A80	; int
		push	edi		; lpString
		call	_LoadFile@8	; LoadFile(x,x)

loc_1004A9B:				; CODE XREF: NPInit(x,x,x,x)+443j
					; NPInit(x,x,x,x)+47Fj	...
		push	offset _szOpenFilterSpec ; lpString
		call	_CreateFilter@4	; CreateFilter(x)
		push	offset _szSaveFilterSpec ; lpString
		call	_CreateFilter@4	; CreateFilter(x)
		mov	edx, _hwndNP
		push	16h
		pop	ecx
		xor	eax, eax
		push	0Ah
		mov	edi, offset _OFN
		rep stosd
		mov	eax, [ebp+var_54]
		pop	ecx
		mov	_OFN.hInstance,	eax
		xor	eax, eax
		mov	edi, offset _FR
		rep stosd
		lea	eax, [ebp+var_50]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		mov	_OFN.lStructSize, 58h
		mov	_OFN.hwndOwner,	edx
		mov	_OFN.nMaxFile, 104h
		mov	_FR.lStructSize, 28h
		mov	_FR.hwndOwner, edx
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	[ebp+var_50]	; lParam
		push	[ebp+wParam]	; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; idThread
		call	ds:__imp__GetKeyboardLayout@4 ;	GetKeyboardLayout(x)
		and	ax, 3FFh
		cmp	ax, 11h
		jnz	short loc_1004B58
		push	1		; lParam
		push	1		; wParam
		push	0D8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1004B58:				; CODE XREF: NPInit(x,x,x,x)+477j
					; NPInit(x,x,x,x)+5E0j
		xor	eax, eax
		inc	eax
		jmp	loc_10049B0
_NPInit@16	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall ReverseEndian(x, x,	x)
_ReverseEndian@12 proc near		; CODE XREF: SaveFile(x,x,x)+193p
					; SaveFile(x,x,x)+1B5p	...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, [ebp+arg_8]
		test	esi, esi
		jbe	short loc_1004B8F
		mov	eax, [ebp+arg_4]
		mov	ecx, [ebp+arg_0]
		push	ebx

loc_1004B79:				; CODE XREF: ReverseEndian(x,x,x)+27j
		movzx	dx, byte ptr [eax+1]
		xor	ebx, ebx
		mov	bh, [eax]
		xor	edx, ebx
		mov	[ecx], dx
		inc	ecx
		inc	ecx
		inc	eax
		inc	eax
		dec	esi
		jnz	short loc_1004B79
		pop	ebx

loc_1004B8F:				; CODE XREF: ReverseEndian(x,x,x)+Bj
		pop	esi
		pop	ebp
		retn	0Ch
_ReverseEndian@12 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	AnsiWriteFile(HANDLE hFile, UINT CodePage, DWORD dwFlags, LPCWSTR lpWideCharStr, int cchWideChar)
_AnsiWriteFile@20 proc near		; CODE XREF: SaveFile(x,x,x)+16Bp

NumberOfBytesWritten= dword ptr	-10h
var_C		= byte ptr -0Ch
hMem		= dword	ptr -8
lpUsedDefaultChar= dword ptr -4
hFile		= dword	ptr  8
CodePage	= dword	ptr  0Ch
dwFlags		= dword	ptr  10h
lpWideCharStr	= dword	ptr  14h
cchWideChar	= dword	ptr  18h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		push	ebx
		xor	ebx, ebx
		cmp	[ebp+cchWideChar], ebx
		jnz	short loc_1004BB1
		xor	eax, eax
		inc	eax
		jmp	loc_1004C3F
; ---------------------------------------------------------------------------

loc_1004BB1:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+Ej
		cmp	[ebp+CodePage],	0FDE9h
		mov	[ebp+lpUsedDefaultChar], ebx
		jz	short loc_1004BC3
		lea	eax, [ebp+var_C]
		mov	[ebp+lpUsedDefaultChar], eax

loc_1004BC3:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+22j
		push	esi
		mov	esi, ds:__imp__WideCharToMultiByte@32 ;	WideCharToMultiByte(x,x,x,x,x,x,x,x)
		push	edi
		push	[ebp+lpUsedDefaultChar]	; lpUsedDefaultChar
		push	ebx		; lpDefaultChar
		push	ebx		; cbMultiByte
		push	ebx		; lpMultiByteStr
		push	[ebp+cchWideChar] ; cchWideChar
		push	[ebp+lpWideCharStr] ; lpWideCharStr
		push	[ebp+dwFlags]	; dwFlags
		push	[ebp+CodePage]	; CodePage
		call	esi ; WideCharToMultiByte(x,x,x,x,x,x,x,x) ; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		mov	edi, eax
		cmp	edi, ebx
		jz	short loc_1004C00
		lea	eax, [edi+1]
		push	eax		; uBytes
		push	40h		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		cmp	eax, ebx
		mov	[ebp+hMem], eax
		jnz	short loc_1004C04
		push	8		; dwErrCode
		call	ds:__imp__SetLastError@4 ; SetLastError(x)

loc_1004C00:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+4Aj
		xor	eax, eax
		jmp	short loc_1004C3D
; ---------------------------------------------------------------------------

loc_1004C04:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+5Dj
		push	[ebp+lpUsedDefaultChar]	; lpUsedDefaultChar
		push	ebx		; lpDefaultChar
		push	edi		; cbMultiByte
		push	eax		; lpMultiByteStr
		push	[ebp+cchWideChar] ; cchWideChar
		push	[ebp+lpWideCharStr] ; lpWideCharStr
		push	[ebp+dwFlags]	; dwFlags
		push	[ebp+CodePage]	; CodePage
		call	esi ; WideCharToMultiByte(x,x,x,x,x,x,x,x) ; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		mov	esi, eax
		cmp	esi, ebx
		jz	short loc_1004C32
		push	ebx		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		push	edi		; nNumberOfBytesToWrite
		push	[ebp+hMem]	; lpBuffer
		push	[ebp+hFile]	; hFile
		call	ds:__imp__WriteFile@20 ; WriteFile(x,x,x,x,x)
		mov	esi, eax

loc_1004C32:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+83j
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		mov	eax, esi

loc_1004C3D:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+69j
		pop	edi
		pop	esi

loc_1004C3F:				; CODE XREF: AnsiWriteFile(x,x,x,x,x)+13j
		pop	ebx
		leave
		retn	14h
_AnsiWriteFile@20 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	ClearFmt()
_ClearFmt@0	proc near		; CODE XREF: SaveFile(x,x,x)+7Ep
		mov	edi, edi
		push	edi
		xor	edi, edi
		cmp	_fWrap,	edi
		jz	short loc_1004CA4
		cmp	_fMLE_is_broken, edi
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		jz	short loc_1004C6E
		push	1
		call	_GotoAndScrollInView@4 ; GotoAndScrollInView(x)
		jmp	short loc_1004C94
; ---------------------------------------------------------------------------

loc_1004C6E:				; CODE XREF: ClearFmt()+1Aj
		push	offset lParam	; lParam
		push	offset wParam	; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	edi		; lParam
		push	edi		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1004C94:				; CODE XREF: ClearFmt()+23j
		push	edi		; lParam
		push	edi		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		pop	esi

loc_1004CA4:				; CODE XREF: ClearFmt()+Bj
		pop	edi
		retn
_ClearFmt@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	RestoreFmt()
_RestoreFmt@0	proc near		; CODE XREF: SaveFile(x,x,x)+247p
					; SaveFile(x,x,x)+2B0p
		xor	eax, eax
		cmp	_fWrap,	eax
		jz	short locret_1004CF9
		cmp	_fMLE_is_broken, eax
		jz	short loc_1004CC8
		push	50200104h	; hWnd
		call	_NpReCreate@4	; NpReCreate(x)
		retn
; ---------------------------------------------------------------------------

loc_1004CC8:				; CODE XREF: RestoreFmt()+10j
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	eax		; lParam
		push	1		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	lParam		; lParam
		push	wParam		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		pop	esi

locret_1004CF9:				; CODE XREF: RestoreFmt()+8j
		retn
_RestoreFmt@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall New(x)
_New@4		proc near		; CODE XREF: NPCommand(x,x,x)+26Bp
					; LoadFile(x,x)+2A1p ...

arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ebx
		xor	ebx, ebx
		cmp	[ebp+arg_0], ebx
		jz	short loc_1004D1A
		push	ebx
		call	_CheckSave@4	; CheckSave(x)
		test	eax, eax
		jz	loc_1004DC3

loc_1004D1A:				; CODE XREF: New(x)+Bj
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	edi
		push	offset szOtherStuff ; lParam
		push	ebx		; wParam
		push	0Ch		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	_szUntitled	; lpString2
		mov	edi, offset _szFileName
		push	edi		; lpString1
		mov	_fUntitled, 1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		push	edi		; pcchNewDestLength
		call	_SetTitle@4	; SetTitle(x)
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	2		; uFlags
		push	2		; uBytes
		push	_hEdit		; hMem
		call	ds:__imp__LocalReAlloc@12 ; LocalReAlloc(x,x,x)
		cmp	eax, ebx
		jz	short loc_1004D8B
		mov	_hEdit,	eax

loc_1004D8B:				; CODE XREF: New(x)+85j
		push	_hEdit		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		mov	[eax], bx
		push	_hEdit		; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		push	ebx		; lParam
		push	_hEdit		; wParam
		push	0BCh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		pop	edi
		mov	_szSearch, bx
		pop	esi

loc_1004DC3:				; CODE XREF: New(x)+15j
		pop	ebx
		pop	ebp
		retn	4
_New@4		endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	AddExt(LPCWSTR lpString1)
_AddExt@4	proc near		; CODE XREF: GetFileName(x,x)+7Dp

lpString1	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, [ebp+lpString1]
		push	esi		; lpString
		call	ds:__imp__lstrlenW@4 ; lstrlenW(x)
		lea	ecx, [esi+eax*2]
		jmp	short loc_1004DF2
; ---------------------------------------------------------------------------

loc_1004DE2:				; CODE XREF: AddExt(x)+2Bj
		cmp	edx, 5Ch
		jz	short loc_1004DFA
		cmp	edx, 3Ah
		jz	short loc_1004DFA
		cmp	ecx, esi
		jbe	short loc_1004DFA
		dec	ecx
		dec	ecx

loc_1004DF2:				; CODE XREF: AddExt(x)+13j
		movzx	edx, word ptr [ecx]
		cmp	edx, 2Eh
		jnz	short loc_1004DE2

loc_1004DFA:				; CODE XREF: AddExt(x)+18j
					; AddExt(x)+1Dj ...
		cmp	word ptr [ecx],	2Eh
		jz	short loc_1004E16
		add	eax, 5
		cmp	eax, 104h
		ja	short loc_1004E16
		push	offset a_txt	; ".txt"
		push	esi		; lpString1
		call	ds:__imp__lstrcatW@8 ; lstrcatW(x,x)

loc_1004E16:				; CODE XREF: AddExt(x)+31j
					; AddExt(x)+3Bj
		pop	esi
		pop	ebp
		retn	4
_AddExt@4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	AlertUser_FileFail(LPCWSTR lpString)
_AlertUser_FileFail@4 proc near		; CODE XREF: FileDragOpen()+3Dp
					; NPInit(x,x,x,x)+504p	...

Text		= word ptr -204h
var_4		= dword	ptr -4
lpString	= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 204h
		mov	eax, ___security_cookie
		push	esi
		mov	esi, [ebp+lpString]
		push	0		; Arguments
		mov	[ebp+var_4], eax
		push	100h		; nSize
		lea	eax, [ebp+Text]
		push	eax		; lpBuffer
		call	ds:__imp__GetUserDefaultUILanguage@0 ; GetUserDefaultUILanguage()
		movzx	eax, ax
		push	eax		; dwLanguageId
		call	ds:__imp__GetLastError@0 ; GetLastError()
		push	eax		; dwMessageId
		push	0		; lpSource
		push	1200h		; dwFlags
		call	ds:__imp__FormatMessageW@28 ; FormatMessageW(x,x,x,x,x,x,x)
		test	eax, eax
		push	30h		; uType
		jz	short loc_1004E84
		push	_szNN		; lpCaption
		lea	eax, [ebp+Text]
		push	eax		; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		jmp	short loc_1004E9C
; ---------------------------------------------------------------------------

loc_1004E84:				; CODE XREF: AlertUser_FileFail(x)+47j
		push	esi		; lpString
		push	_szDiskError	; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)

loc_1004E9C:				; CODE XREF: AlertUser_FileFail(x)+62j
		mov	ecx, [ebp+var_4]
		pop	esi
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_AlertUser_FileFail@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	SaveFile(HWND hWnd, LPCWSTR lpString, LPCWSTR lpBuffer)
_SaveFile@12	proc near		; CODE XREF: CheckSave(x)+EEp
					; CheckSave(x)+13Ap ...

var_14		= dword	ptr -14h
UsedDefaultChar	= dword	ptr -10h
hMem		= dword	ptr -0Ch
CodePage	= dword	ptr -8
NumberOfBytesWritten= dword ptr	-4
hWnd		= dword	ptr  8
pcchNewDestLength= dword ptr  0Ch
lpBuffer	= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 14h
		push	esi
		xor	esi, esi
		cmp	[ebp+lpBuffer],	esi
		push	esi		; hTemplateFile
		push	80h		; dwFlagsAndAttributes
		push	4		; dwCreationDisposition
		mov	[ebp+UsedDefaultChar], esi
		push	esi		; lpSecurityAttributes
		jnz	short loc_1004ECE
		push	1
		jmp	short loc_1004ED0
; ---------------------------------------------------------------------------

loc_1004ECE:				; CODE XREF: SaveFile(x,x,x)+1Aj
		push	3		; dwShareMode

loc_1004ED0:				; CODE XREF: SaveFile(x,x,x)+1Ej
		push	0C0000000h	; dwDesiredAccess
		push	[ebp+pcchNewDestLength]	; lpFileName
		call	ds:__imp__CreateFileW@28 ; CreateFileW(x,x,x,x,x,x,x)
		cmp	eax, 0FFFFFFFFh
		mov	_fp, eax
		jz	short loc_1004F04
		call	ds:__imp__GetLastError@0 ; GetLastError()
		xor	ecx, ecx
		cmp	eax, 0B7h
		setnz	cl
		cmp	_fp, 0FFFFFFFFh
		mov	[ebp+var_14], ecx
		jnz	short loc_1004F24

loc_1004F04:				; CODE XREF: SaveFile(x,x,x)+38j
		push	30h		; uType
		push	[ebp+pcchNewDestLength]	; lpString
		push	_szCREATEERR	; lpText
		push	_szNN		; lpCaption
		push	[ebp+hWnd]	; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		xor	eax, eax
		jmp	loc_10050FE
; ---------------------------------------------------------------------------

loc_1004F24:				; CODE XREF: SaveFile(x,x,x)+54j
		cmp	_fWrap,	esi
		jz	short loc_1004F31
		call	_ClearFmt@0	; ClearFmt()

loc_1004F31:				; CODE XREF: SaveFile(x,x,x)+7Cj
		push	ebx
		push	edi
		mov	edi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0Eh		; Msg
		push	_hwndEdit	; hWnd
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	esi		; lParam
		push	esi		; wParam
		push	0BDh		; Msg
		push	_hwndEdit	; hWnd
		mov	ebx, eax
		call	edi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	eax, esi
		mov	[ebp+hMem], eax
		jz	loc_10050AA
		push	eax		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		cmp	eax, esi
		mov	[ebp+lpBuffer],	eax
		jz	loc_10050AA
		mov	eax, _g_ftSaveAs
		dec	eax
		jz	loc_100506A
		dec	eax
		jz	loc_1005020
		dec	eax
		jnz	short loc_1004FA1
		push	esi		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		push	3		; nNumberOfBytesToWrite
		push	offset _BOM_UTF8 ; lpBuffer
		push	_fp		; hFile
		call	ds:__imp__WriteFile@20 ; WriteFile(x,x,x,x,x)

loc_1004FA1:				; CODE XREF: SaveFile(x,x,x)+D9j
		cmp	_g_ftSaveAs, 3
		jz	short loc_1004FBD
		call	ds:__imp__GetACP@0 ; GetACP()
		mov	[ebp+CodePage],	eax
		lea	eax, [ebp+UsedDefaultChar]
		mov	edi, 400h
		jmp	short loc_1004FC8
; ---------------------------------------------------------------------------

loc_1004FBD:				; CODE XREF: SaveFile(x,x,x)+FAj
		xor	eax, eax
		mov	[ebp+CodePage],	0FDE9h
		xor	edi, edi

loc_1004FC8:				; CODE XREF: SaveFile(x,x,x)+10Dj
		push	eax		; lpUsedDefaultChar
		push	esi		; lpDefaultChar
		push	esi		; cbMultiByte
		push	esi		; lpMultiByteStr
		push	ebx		; cchWideChar
		push	[ebp+lpBuffer]	; lpWideCharStr
		push	edi		; dwFlags
		push	[ebp+CodePage]	; CodePage
		call	ds:__imp__WideCharToMultiByte@32 ; WideCharToMultiByte(x,x,x,x,x,x,x,x)
		cmp	[ebp+UsedDefaultChar], esi
		jnz	short loc_1004FE7
		cmp	ebx, esi
		jz	short loc_100500B
		cmp	eax, esi
		jnz	short loc_100500B

loc_1004FE7:				; CODE XREF: SaveFile(x,x,x)+12Fj
		push	31h		; uType
		push	[ebp+pcchNewDestLength]	; lpString
		push	_szErrUnicode	; lpText
		push	_szNN		; lpCaption
		push	[ebp+hWnd]	; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		cmp	eax, 2
		jz	loc_10050B2
		xor	edi, edi

loc_100500B:				; CODE XREF: SaveFile(x,x,x)+133j
					; SaveFile(x,x,x)+137j
		push	ebx		; cchWideChar
		push	[ebp+lpBuffer]	; lpWideCharStr
		push	edi		; dwFlags
		push	[ebp+CodePage]	; CodePage
		push	_fp		; hFile
		call	_AnsiWriteFile@20 ; AnsiWriteFile(x,x,x,x,x)
		jmp	short loc_1005098
; ---------------------------------------------------------------------------

loc_1005020:				; CODE XREF: SaveFile(x,x,x)+D2j
		mov	edi, ds:__imp__WriteFile@20 ; WriteFile(x,x,x,x,x)
		push	esi		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		push	2		; nNumberOfBytesToWrite
		push	offset dword_10091E8 ; lpBuffer
		push	_fp		; hFile
		call	edi ; WriteFile(x,x,x,x,x) ; WriteFile(x,x,x,x,x)
		push	ebx
		push	[ebp+lpBuffer]
		push	[ebp+lpBuffer]
		call	_ReverseEndian@12 ; ReverseEndian(x,x,x)
		push	esi		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebx+ebx]
		push	eax		; nNumberOfBytesToWrite
		push	[ebp+lpBuffer]	; lpBuffer
		push	_fp		; hFile
		call	edi ; WriteFile(x,x,x,x,x) ; WriteFile(x,x,x,x,x)
		push	ebx
		push	[ebp+lpBuffer]
		mov	edi, eax
		push	[ebp+lpBuffer]
		call	_ReverseEndian@12 ; ReverseEndian(x,x,x)
		jmp	short loc_100509A
; ---------------------------------------------------------------------------

loc_100506A:				; CODE XREF: SaveFile(x,x,x)+CBj
		mov	edi, ds:__imp__WriteFile@20 ; WriteFile(x,x,x,x,x)
		push	esi		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		push	2		; nNumberOfBytesToWrite
		push	offset dword_10091E4 ; lpBuffer
		push	_fp		; hFile
		call	edi ; WriteFile(x,x,x,x,x) ; WriteFile(x,x,x,x,x)
		push	esi		; lpOverlapped
		lea	eax, [ebp+NumberOfBytesWritten]
		push	eax		; lpNumberOfBytesWritten
		lea	eax, [ebx+ebx]
		push	eax		; nNumberOfBytesToWrite
		push	[ebp+lpBuffer]	; lpBuffer
		push	_fp		; hFile
		call	edi ; WriteFile(x,x,x,x,x) ; WriteFile(x,x,x,x,x)

loc_1005098:				; CODE XREF: SaveFile(x,x,x)+170j
		mov	edi, eax

loc_100509A:				; CODE XREF: SaveFile(x,x,x)+1BAj
		cmp	edi, esi
		jnz	short loc_1005103
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)

loc_10050AA:				; CODE XREF: SaveFile(x,x,x)+ADj
					; SaveFile(x,x,x)+BFj
		push	[ebp+pcchNewDestLength]	; lpString
		call	_AlertUser_FileFail@4 ;	AlertUser_FileFail(x)

loc_10050B2:				; CODE XREF: SaveFile(x,x,x)+155j
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		push	_fp		; hObject
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)
		or	_fp, 0FFFFFFFFh
		cmp	[ebp+hMem], esi
		jz	short loc_10050DF
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)

loc_10050DF:				; CODE XREF: SaveFile(x,x,x)+226j
		cmp	[ebp+var_14], esi
		jz	short loc_10050ED
		push	[ebp+pcchNewDestLength]	; lpFileName
		call	ds:__imp__DeleteFileW@4	; DeleteFileW(x)

loc_10050ED:				; CODE XREF: SaveFile(x,x,x)+234j
		cmp	_fWrap,	esi
		jz	short loc_10050FA
		call	_RestoreFmt@0	; RestoreFmt()

loc_10050FA:				; CODE XREF: SaveFile(x,x,x)+245j
		xor	eax, eax

loc_10050FC:				; CODE XREF: SaveFile(x,x,x)+2C4j
		pop	edi
		pop	ebx

loc_10050FE:				; CODE XREF: SaveFile(x,x,x)+71j
		pop	esi
		leave
		retn	0Ch
; ---------------------------------------------------------------------------

loc_1005103:				; CODE XREF: SaveFile(x,x,x)+1EEj
		push	_fp		; hFile
		call	ds:__imp__SetEndOfFile@4 ; SetEndOfFile(x)
		mov	eax, _g_ftSaveAs
		push	esi		; lParam
		push	esi		; wParam
		push	0B9h		; Msg
		push	_hwndEdit	; hWnd
		mov	_g_ftOpenedAs, eax
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	[ebp+pcchNewDestLength]	; pcchNewDestLength
		call	_SetTitle@4	; SetTitle(x)
		push	_fp		; hObject
		mov	_fUntitled, esi
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)
		push	[ebp+hMem]	; hMem
		or	_fp, 0FFFFFFFFh
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		cmp	_fWrap,	esi
		jz	short loc_1005163
		call	_RestoreFmt@0	; RestoreFmt()

loc_1005163:				; CODE XREF: SaveFile(x,x,x)+2AEj
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		xor	eax, eax
		inc	eax
		jmp	short loc_10050FC
_SaveFile@12	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	LoadFile(LPCWSTR lpString, int)
_LoadFile@8	proc near		; CODE XREF: NPCommand(x,x,x)+23Bp
					; FileDragOpen()+47p ...

FileInformation	= _BY_HANDLE_FILE_INFORMATION ptr -290h
hObject		= dword	ptr -25Ch
var_258		= dword	ptr -258h
cbMultiByte	= dword	ptr -254h
var_250		= dword	ptr -250h
var_24C		= word ptr -24Ch
hMem		= dword	ptr -248h
lpMultiByteStr	= dword	ptr -244h
pcchNewDestLength= dword ptr -240h
var_23C		= dword	ptr -23Ch
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
CodePage	= dword	ptr -230h
var_22C		= dword	ptr -22Ch
wParam		= dword	ptr -228h
String		= word ptr -224h
var_1C		= dword	ptr -1Ch
ms_exc		= CPPEH_RECORD ptr -18h
lpString	= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	280h
		push	offset stru_1001800
		call	__SEH_prolog
		mov	eax, ___security_cookie
		mov	[ebp+var_1C], eax
		mov	edi, [ebp+lpString]
		mov	[ebp+pcchNewDestLength], edi
		xor	ebx, ebx
		mov	[ebp+var_234], ebx
		mov	[ebp+var_250], ebx
		mov	[ebp+var_238], ebx
		mov	[ebp+hMem], ebx
		mov	[ebp+CodePage],	ebx
		mov	eax, _fp
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_10051C9
		push	edi
		jmp	loc_10052A0
; ---------------------------------------------------------------------------

loc_10051C9:				; CODE XREF: LoadFile(x,x)+48j
		lea	ecx, [ebp+FileInformation]
		push	ecx		; lpFileInformation
		push	eax		; hFile
		call	ds:__imp__GetFileInformationByHandle@8 ; GetFileInformationByHandle(x,x)
		mov	esi, [ebp+FileInformation.nFileSizeLow]
		mov	[ebp+cbMultiByte], esi
		cmp	eax, ebx
		jnz	short loc_10051F2
		push	edi		; lpString
		call	_AlertUser_FileFail@4 ;	AlertUser_FileFail(x)
		jmp	loc_10057E1
; ---------------------------------------------------------------------------

loc_10051F2:				; CODE XREF: LoadFile(x,x)+6Cj
		cmp	esi, 40000000h
		jnb	loc_10057C7
		cmp	[ebp+FileInformation.nFileSizeHigh], ebx
		jnz	loc_10057C7
		push	_hWaitCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		cmp	esi, ebx
		jz	short loc_100525E
		xor	edi, edi
		mov	[ebp+var_23C], edi
		push	ebx		; lpName
		push	esi		; dwMaximumSizeLow
		push	ebx		; dwMaximumSizeHigh
		push	2		; flProtect
		push	ebx		; lpFileMappingAttributes
		push	_fp		; hFile
		call	ds:__imp__CreateFileMappingW@24	; CreateFileMappingW(x,x,x,x,x,x)
		mov	[ebp+hObject], eax
		cmp	eax, ebx
		jz	short loc_1005277
		push	esi		; dwNumberOfBytesToMap
		push	ebx		; dwFileOffsetLow
		push	ebx		; dwFileOffsetHigh
		push	4		; dwDesiredAccess
		push	eax		; hFileMappingObject
		call	ds:__imp__MapViewOfFile@20 ; MapViewOfFile(x,x,x,x,x)
		mov	[ebp+var_23C], eax
		push	[ebp+hObject]	; hObject
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)
		jmp	short loc_1005271
; ---------------------------------------------------------------------------

loc_100525E:				; CODE XREF: LoadFile(x,x)+9Fj
		lea	eax, [ebp+var_24C]
		mov	[ebp+var_23C], eax
		mov	[ebp+var_24C], bx

loc_1005271:				; CODE XREF: LoadFile(x,x)+E3j
		mov	edi, [ebp+var_23C]

loc_1005277:				; CODE XREF: LoadFile(x,x)+C3j
		push	_fp		; hObject
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)
		or	_fp, 0FFFFFFFFh
		cmp	edi, ebx
		jnz	short loc_10052AA
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		push	[ebp+pcchNewDestLength]	; lpString

loc_10052A0:				; CODE XREF: LoadFile(x,x)+4Bj
		call	_AlertUser_FileFail@4 ;	AlertUser_FileFail(x)
		jmp	loc_10057F4
; ---------------------------------------------------------------------------

loc_10052AA:				; CODE XREF: LoadFile(x,x)+113j
		mov	[ebp+ms_exc.disabled], ebx
		mov	[ebp+lpMultiByteStr], edi
		mov	eax, [ebp+arg_4]
		cmp	eax, 0FFFFFFFFh
		jnz	loc_1005471
		movzx	eax, word ptr [edi]
		cmp	eax, 0BBEFh
		jz	short loc_1005305
		cmp	eax, 0FEFFh
		jz	short loc_10052F4
		cmp	eax, 0FFFEh
		jnz	short loc_1005332
		mov	[ebp+var_238], 1
		mov	[ebp+var_22C], 2

loc_10052EB:				; CODE XREF: LoadFile(x,x)+18Aj
		mov	ebx, esi
		shr	ebx, 1
		jmp	loc_1005524
; ---------------------------------------------------------------------------

loc_10052F4:				; CODE XREF: LoadFile(x,x)+155j
		xor	eax, eax
		inc	eax
		mov	[ebp+var_238], eax
		mov	[ebp+var_22C], eax
		jmp	short loc_10052EB
; ---------------------------------------------------------------------------

loc_1005305:				; CODE XREF: LoadFile(x,x)+14Ej
		cmp	esi, 2
		jbe	short loc_1005332
		cmp	byte ptr [edi+2], 0BFh
		jnz	short loc_1005332
		mov	[ebp+var_258], 1
		mov	[ebp+CodePage],	0FDE9h
		push	3
		pop	eax
		mov	[ebp+var_22C], eax
		jmp	loc_10054CA
; ---------------------------------------------------------------------------

loc_1005332:				; CODE XREF: LoadFile(x,x)+15Cj
					; LoadFile(x,x)+18Fj ...
		push	esi		; iSize
		push	edi		; lpv
		call	_IsInputTextUnicode@8 ;	IsInputTextUnicode(x,x)
		mov	[ebp+var_238], eax
		cmp	eax, ebx
		jz	short loc_1005356
		mov	[ebp+var_22C], 1
		mov	ebx, esi
		shr	ebx, 1
		jmp	loc_1005525
; ---------------------------------------------------------------------------

loc_1005356:				; CODE XREF: LoadFile(x,x)+1C8j
		push	esi
		push	edi
		call	_IsTextUTF8@8	; IsTextUTF8(x,x)
		mov	[ebp+var_258], eax
		cmp	eax, ebx
		jz	loc_100547E
		mov	[ebp+var_22C], 3
		mov	[ebp+CodePage],	0FDE9h

loc_100537F:				; CODE XREF: LoadFile(x,x)+311j
					; LoadFile(x,x)+336j ...
		mov	ebx, [ebp+wParam]

loc_1005385:				; CODE XREF: LoadFile(x,x):loc_100551Ej
					; LoadFile(x,x)+3B2j
		xor	eax, eax
		cmp	[ebp+var_238], eax
		jnz	short loc_10053AF
		push	eax		; cchWideChar
		push	eax		; lpWideCharStr
		push	esi		; cbMultiByte
		push	[ebp+lpMultiByteStr] ; lpMultiByteStr
		push	eax		; dwFlags
		push	[ebp+CodePage]	; CodePage
		call	ds:__imp__MultiByteToWideChar@24 ; MultiByteToWideChar(x,x,x,x,x,x)
		mov	ebx, eax
		mov	[ebp+wParam], ebx
		xor	eax, eax

loc_10053AF:				; CODE XREF: LoadFile(x,x)+214j
		push	eax		; lParam
		push	eax		; wParam
		push	0Bh		; Msg
		push	_hwndEdit	; hWnd
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	0		; lParam
		push	0		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	2		; uFlags
		lea	eax, [ebx+ebx+2]
		push	eax		; uBytes
		push	_hEdit		; hMem
		call	ds:__imp__LocalReAlloc@12 ; LocalReAlloc(x,x,x)
		mov	[ebp+hMem], eax
		test	eax, eax
		jnz	loc_1005530
		push	[ebp+pcchNewDestLength]	; lpString2
		lea	eax, [ebp+String]
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		xor	ebx, ebx
		push	ebx
		call	_New@4		; New(x)
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		push	30h		; uType
		lea	eax, [ebp+String]
		push	eax		; lpString
		push	_szFTL		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		lea	eax, [ebp+var_24C]
		cmp	edi, eax
		jz	short loc_100545C
		push	edi		; lpBaseAddress
		call	ds:__imp__UnmapViewOfFile@4 ; UnmapViewOfFile(x)

loc_100545C:				; CODE XREF: LoadFile(x,x)+2DAj
		push	ebx		; lParam
		push	ebx		; wParam
		push	0Bh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		or	[ebp+ms_exc.disabled], 0FFFFFFFFh
		jmp	loc_10057F4
; ---------------------------------------------------------------------------

loc_1005471:				; CODE XREF: LoadFile(x,x)+140j
		dec	eax
		jz	loc_1005500
		dec	eax
		jz	short loc_10054E0
		dec	eax
		jz	short loc_100548F

loc_100547E:				; CODE XREF: LoadFile(x,x)+1ECj
		mov	[ebp+var_22C], ebx
		mov	[ebp+CodePage],	ebx
		jmp	loc_100537F
; ---------------------------------------------------------------------------

loc_100548F:				; CODE XREF: LoadFile(x,x)+303j
		mov	[ebp+var_258], 1
		mov	[ebp+CodePage],	0FDE9h
		push	3
		pop	eax
		mov	[ebp+var_22C], eax
		cmp	esi, 2
		jbe	loc_100537F
		cmp	word ptr [edi],	0BBEFh
		jnz	loc_100537F
		cmp	byte ptr [edi+2], 0BFh
		jnz	loc_100537F

loc_10054CA:				; CODE XREF: LoadFile(x,x)+1B4j
		lea	ecx, [edi+3]
		mov	[ebp+lpMultiByteStr], ecx
		sub	esi, eax
		mov	[ebp+cbMultiByte], esi
		jmp	loc_100537F
; ---------------------------------------------------------------------------

loc_10054E0:				; CODE XREF: LoadFile(x,x)+300j
		xor	eax, eax
		inc	eax
		mov	[ebp+var_238], eax
		mov	[ebp+var_22C], eax
		mov	ebx, esi
		shr	ebx, 1
		mov	[ebp+wParam], ebx
		cmp	word ptr [edi],	0FFFEh
		jmp	short loc_100551E
; ---------------------------------------------------------------------------

loc_1005500:				; CODE XREF: LoadFile(x,x)+2F9j
		xor	eax, eax
		inc	eax
		mov	[ebp+var_238], eax
		mov	[ebp+var_22C], eax
		mov	ebx, esi
		shr	ebx, 1
		mov	[ebp+wParam], ebx
		cmp	word ptr [edi],	0FEFFh

loc_100551E:				; CODE XREF: LoadFile(x,x)+385j
		jnz	loc_1005385

loc_1005524:				; CODE XREF: LoadFile(x,x)+176j
		dec	ebx

loc_1005525:				; CODE XREF: LoadFile(x,x)+1D8j
		mov	[ebp+wParam], ebx
		jmp	loc_1005385
; ---------------------------------------------------------------------------

loc_1005530:				; CODE XREF: LoadFile(x,x)+285j
		push	eax		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		mov	[ebp+var_234], eax
		cmp	[ebp+var_238], 0
		jz	short loc_100558C
		mov	cx, [edi]
		cmp	cx, 0FEFFh
		jnz	short loc_1005555
		lea	esi, [edi+2]
		jmp	short loc_100556B
; ---------------------------------------------------------------------------

loc_1005555:				; CODE XREF: LoadFile(x,x)+3D5j
		cmp	cx, 0FFFEh
		jnz	short loc_1005569
		push	ebx
		lea	ecx, [edi+2]
		push	ecx
		push	eax
		call	_ReverseEndian@12 ; ReverseEndian(x,x,x)
		jmp	short loc_10055B0
; ---------------------------------------------------------------------------

loc_1005569:				; CODE XREF: LoadFile(x,x)+3E1j
		mov	esi, edi

loc_100556B:				; CODE XREF: LoadFile(x,x)+3DAj
		lea	ecx, [ebx+ebx]
		mov	edi, eax
		mov	eax, ecx
		shr	ecx, 2
		rep movsd
		mov	ecx, eax
		and	ecx, 3
		rep movsb
		mov	edi, [ebp+var_23C]
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		jmp	short loc_10055B0
; ---------------------------------------------------------------------------

loc_100558C:				; CODE XREF: LoadFile(x,x)+3CBj
		push	ebx		; cchWideChar
		push	eax		; lpWideCharStr
		push	[ebp+cbMultiByte] ; cbMultiByte
		push	[ebp+lpMultiByteStr] ; lpMultiByteStr
		push	0		; dwFlags
		push	[ebp+CodePage]	; CodePage
		call	ds:__imp__MultiByteToWideChar@24 ; MultiByteToWideChar(x,x,x,x,x,x)
		mov	ebx, eax
		mov	[ebp+wParam], ebx

loc_10055B0:				; CODE XREF: LoadFile(x,x)+3EEj
					; LoadFile(x,x)+411j
		mov	eax, [ebp+var_234]
		mov	ecx, [ebp+var_22C]
		mov	_g_ftOpenedAs, ecx
		or	[ebp+ms_exc.disabled], 0FFFFFFFFh
		jmp	short loc_1005606
; ---------------------------------------------------------------------------

loc_10055C8:				; DATA XREF: .text:stru_1001800o
		xor	eax, eax	; Exception filter 0 for function 1005179
		inc	eax
		retn
; ---------------------------------------------------------------------------

loc_10055CC:				; DATA XREF: .text:stru_1001800o
		mov	esp, [ebp+ms_exc.old_esp] ; Exception handler 0	for function 1005179
		push	30h		; uType
		push	[ebp+pcchNewDestLength]	; lpString
		push	_szDiskError	; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		xor	ebx, ebx
		or	[ebp+ms_exc.disabled], 0FFFFFFFFh
		mov	edi, [ebp+var_23C]
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	eax, [ebp+var_234]

loc_1005606:				; CODE XREF: LoadFile(x,x)+44Dj
		lea	ecx, [ebp+var_24C]
		cmp	edi, ecx
		jz	short loc_100561D
		push	edi		; lpBaseAddress
		call	ds:__imp__UnmapViewOfFile@4 ; UnmapViewOfFile(x)
		mov	eax, [ebp+var_234]

loc_100561D:				; CODE XREF: LoadFile(x,x)+495j
		xor	edi, edi
		cmp	eax, edi
		jz	short loc_1005675
		mov	ecx, eax
		cmp	ebx, edi
		jbe	short loc_100563A
		mov	edx, ebx

loc_100562B:				; CODE XREF: LoadFile(x,x)+4BFj
		cmp	[ecx], di
		jnz	short loc_1005635
		mov	word ptr [ecx],	20h

loc_1005635:				; CODE XREF: LoadFile(x,x)+4B5j
		inc	ecx
		inc	ecx
		dec	edx
		jnz	short loc_100562B

loc_100563A:				; CODE XREF: LoadFile(x,x)+4AEj
		mov	[eax+ebx*2], di
		mov	cx, [eax]
		inc	eax
		inc	eax
		cmp	cx, 2Eh
		jnz	short loc_100566F
		mov	cx, [eax]
		inc	eax
		inc	eax
		cmp	cx, 4Ch
		jnz	short loc_100566F
		mov	cx, [eax]
		inc	eax
		inc	eax
		cmp	cx, 4Fh
		jnz	short loc_100566F
		cmp	word ptr [eax],	47h
		mov	[ebp+var_250], 1
		jz	short loc_1005675

loc_100566F:				; CODE XREF: LoadFile(x,x)+4CEj
					; LoadFile(x,x)+4D9j ...
		mov	[ebp+var_250], edi

loc_1005675:				; CODE XREF: LoadFile(x,x)+4A8j
					; LoadFile(x,x)+4F4j
		cmp	[ebp+hMem], edi
		jz	short loc_1005694
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		mov	eax, [ebp+hMem]
		mov	_hEdit,	eax

loc_1005694:				; CODE XREF: LoadFile(x,x)+502j
		push	[ebp+pcchNewDestLength]	; lpString2
		push	offset _szFileName ; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		push	[ebp+pcchNewDestLength]	; pcchNewDestLength
		call	_SetTitle@4	; SetTitle(x)
		mov	_fUntitled, edi
		mov	_dwEmSetHandle,	1
		push	edi		; lParam
		push	_hEdit		; wParam
		push	0BCh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	_dwEmSetHandle,	2
		jnz	short loc_1005726
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		mov	_dwEmSetHandle,	edi
		push	30h		; uType
		push	[ebp+pcchNewDestLength]	; lpString
		push	_szFTL		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		push	edi
		call	_New@4		; New(x)
		push	edi		; lParam
		push	1		; wParam
		push	0Bh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		jmp	loc_10057F4
; ---------------------------------------------------------------------------

loc_1005726:				; CODE XREF: LoadFile(x,x)+562j
		mov	_dwEmSetHandle,	edi
		push	edi		; lParam
		push	edi		; wParam
		push	0C5h		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)
		cmp	[ebp+var_250], edi
		jz	short loc_100576C
		push	ebx		; lParam
		push	ebx		; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	edi		; lParam
		push	edi		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	1
		call	_InsertDateTime@4 ; InsertDateTime(x)

loc_100576C:				; CODE XREF: LoadFile(x,x)+5CCj
		xor	ebx, ebx
		inc	ebx
		push	ebx		; bRedraw
		push	edi		; lParam
		push	0BEh		; wParam
		push	115h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	eax		; nPos
		push	ebx		; nBar
		push	_hwndNP		; hWnd
		call	ds:__imp__SetScrollPos@16 ; SetScrollPos(x,x,x,x)
		push	edi		; lParam
		push	ebx		; wParam
		push	0Bh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; bErase
		push	edi		; lpRect
		push	_hwndEdit	; hWnd
		call	ds:__imp__InvalidateRect@12 ; InvalidateRect(x,x,x)
		push	_hwndEdit	; hWnd
		call	ds:__imp__UpdateWindow@4 ; UpdateWindow(x)
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		mov	eax, ebx
		jmp	short loc_10057F6
; ---------------------------------------------------------------------------

loc_10057C7:				; CODE XREF: LoadFile(x,x)+7Fj
					; LoadFile(x,x)+8Bj
		push	30h		; uType
		push	edi		; lpString
		push	_szFTL		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)

loc_10057E1:				; CODE XREF: LoadFile(x,x)+74j
		push	_fp		; hObject
		call	ds:__imp__CloseHandle@4	; CloseHandle(x)
		or	_fp, 0FFFFFFFFh

loc_10057F4:				; CODE XREF: LoadFile(x,x)+12Cj
					; LoadFile(x,x)+2F3j ...
		xor	eax, eax

loc_10057F6:				; CODE XREF: LoadFile(x,x)+64Cj
		mov	ecx, [ebp+var_1C]
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		call	__SEH_epilog
		retn	8
_LoadFile@8	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	ReverseScan(int, int, LPCWSTR Str2, int)
_ReverseScan@16	proc near		; CODE XREF: Search(x)+106p

var_8		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
Str2		= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		push	ebx
		push	esi
		mov	esi, [ebp+Str2]
		movzx	eax, word ptr [esi]
		push	edi
		push	eax		; lpsz
		call	ds:__imp__CharUpperW@4 ; CharUpperW(x)
		mov	[ebp+var_4], eax
		movzx	eax, word ptr [esi]
		push	eax		; lpsz
		call	ds:__imp__CharLowerW@4 ; CharLowerW(x)
		mov	edi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		push	esi		; lpString
		mov	[ebp+var_8], eax
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		mov	ebx, [ebp+arg_4]
		test	ebx, ebx
		mov	[ebp+Str2], eax
		jnz	short loc_10058A1
		mov	ebx, [ebp+arg_0]
		push	ebx		; lpString
		call	edi ; lstrlenW(x) ; lstrlenW(x)
		lea	ebx, [ebx+eax*2]
		jmp	short loc_10058A1
; ---------------------------------------------------------------------------

loc_1005850:				; CODE XREF: ReverseScan(x,x,x,x)+99j
		dec	ebx
		dec	ebx
		cmp	[ebp+arg_C], 0
		mov	ax, [ebx]
		jz	short loc_1005860
		cmp	ax, [esi]
		jmp	short loc_100586A
; ---------------------------------------------------------------------------

loc_1005860:				; CODE XREF: ReverseScan(x,x,x,x)+4Ej
		cmp	ax, word ptr [ebp+var_4]
		jz	short loc_1005884
		cmp	ax, word ptr [ebp+var_8]

loc_100586A:				; CODE XREF: ReverseScan(x,x,x,x)+53j
		jnz	short loc_10058A1
		cmp	[ebp+arg_C], 0
		jz	short loc_1005884
		push	[ebp+Str2]	; MaxCount
		push	esi		; Str2
		push	ebx		; Str1
		call	ds:__imp__wcsncmp
		add	esp, 0Ch
		test	eax, eax
		jmp	short loc_100589F
; ---------------------------------------------------------------------------

loc_1005884:				; CODE XREF: ReverseScan(x,x,x,x)+59j
					; ReverseScan(x,x,x,x)+65j
		push	[ebp+Str2]	; cchCount2
		push	esi		; lpString2
		push	[ebp+Str2]	; cchCount1
		push	ebx		; lpString1
		push	10001001h	; dwCmpFlags
		push	400h		; Locale
		call	ds:__imp__CompareStringW@24 ; CompareStringW(x,x,x,x,x,x)
		cmp	eax, 2

loc_100589F:				; CODE XREF: ReverseScan(x,x,x,x)+77j
		jz	short loc_10058AA

loc_10058A1:				; CODE XREF: ReverseScan(x,x,x,x)+38j
					; ReverseScan(x,x,x,x)+43j ...
		cmp	ebx, [ebp+arg_0]
		jnz	short loc_1005850
		xor	eax, eax
		jmp	short loc_10058AC
; ---------------------------------------------------------------------------

loc_10058AA:				; CODE XREF: ReverseScan(x,x,x,x):loc_100589Fj
		mov	eax, ebx

loc_10058AC:				; CODE XREF: ReverseScan(x,x,x,x)+9Dj
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	10h
_ReverseScan@16	endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	ForwardScan(wchar_t *lpString1,	LPCWSTR	Str2, int)
_ForwardScan@12	proc near		; CODE XREF: Search(x)+123p

var_4		= dword	ptr -4
lpString1	= dword	ptr  8
Str2		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ebx
		push	esi
		mov	esi, [ebp+Str2]
		push	edi
		push	esi		; lpString
		call	ds:__imp__lstrlenW@4 ; lstrlenW(x)
		mov	ebx, eax
		movzx	eax, word ptr [esi]
		push	eax		; lpsz
		call	ds:__imp__CharUpperW@4 ; CharUpperW(x)
		mov	[ebp+Str2], eax
		movzx	eax, word ptr [esi]
		push	eax		; lpsz
		call	ds:__imp__CharLowerW@4 ; CharLowerW(x)
		mov	edi, [ebp+lpString1]
		mov	[ebp+var_4], eax
		jmp	short loc_100592E
; ---------------------------------------------------------------------------

loc_10058EC:				; CODE XREF: ForwardScan(x,x,x)+7Cj
		cmp	[ebp+arg_8], 0
		jz	short loc_1005907
		cmp	ax, [esi]
		jnz	short loc_100592C
		push	ebx		; MaxCount
		push	esi		; Str2
		push	edi		; Str1
		call	ds:__imp__wcsncmp
		add	esp, 0Ch
		test	eax, eax
		jmp	short loc_100592A
; ---------------------------------------------------------------------------

loc_1005907:				; CODE XREF: ForwardScan(x,x,x)+38j
		cmp	ax, word ptr [ebp+Str2]
		jz	short loc_1005913
		cmp	ax, word ptr [ebp+var_4]
		jnz	short loc_100592C

loc_1005913:				; CODE XREF: ForwardScan(x,x,x)+53j
		push	ebx		; cchCount2
		push	esi		; lpString2
		push	ebx		; cchCount1
		push	edi		; lpString1
		push	10001001h	; dwCmpFlags
		push	400h		; Locale
		call	ds:__imp__CompareStringW@24 ; CompareStringW(x,x,x,x,x,x)
		cmp	eax, 2

loc_100592A:				; CODE XREF: ForwardScan(x,x,x)+4Dj
		jz	short loc_1005936

loc_100592C:				; CODE XREF: ForwardScan(x,x,x)+3Dj
					; ForwardScan(x,x,x)+59j
		inc	edi
		inc	edi

loc_100592E:				; CODE XREF: ForwardScan(x,x,x)+32j
		mov	ax, [edi]
		test	ax, ax
		jnz	short loc_10058EC

loc_1005936:				; CODE XREF: ForwardScan(x,x,x):loc_100592Aj
		mov	ax, [edi]
		neg	ax
		sbb	eax, eax
		and	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	0Ch
_ForwardScan@12	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	Search(LPCWSTR Str2)
_Search@4	proc near		; CODE XREF: NPCommand(x,x,x)+43Dp
					; NPWndProc(x,x,x,x)+300p ...

hMenu		= dword	ptr -24h
hMem		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
lParam		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_8		= dword	ptr -8
wParam		= dword	ptr -4
Str2		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 24h
		mov	eax, [ebp+Str2]
		push	ebx
		xor	ebx, ebx
		cmp	[eax], bx
		mov	[ebp+var_18], ebx
		mov	[ebp+var_14], ebx
		jnz	short loc_100596C
		xor	eax, eax
		jmp	loc_1005B37
; ---------------------------------------------------------------------------

loc_100596C:				; CODE XREF: Search(x)+17j
		push	esi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		push	edi
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		lea	eax, [ebp+wParam]
		push	eax		; wParam
		push	0B0h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	_hwndNP		; hWnd
		call	ds:__imp__GetMenu@4 ; GetMenu(x)
		push	ebx		; uFlags
		push	19h		; uId
		xor	edi, edi
		inc	edi
		push	edi		; nPos
		push	eax		; hMenu
		mov	[ebp+hMenu], eax
		call	ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__GetMenuState@12 ; GetMenuState(x,x,x)
		cmp	eax, edi
		jnz	short loc_10059BA
		mov	[ebp+var_14], edi
		mov	[ebp+lParam], ebx
		mov	[ebp+wParam], ebx

loc_10059BA:				; CODE XREF: Search(x)+63j
		push	ebx		; lParam
		push	ebx		; wParam
		push	0BDh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		cmp	eax, ebx
		mov	[ebp+hMem], eax
		jz	short loc_10059DD
		push	eax		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		mov	edi, eax
		cmp	edi, ebx
		jnz	short loc_10059E4

loc_10059DD:				; CODE XREF: Search(x)+82j
		xor	eax, eax
		jmp	loc_1005B35
; ---------------------------------------------------------------------------

loc_10059E4:				; CODE XREF: Search(x)+8Fj
		cmp	_fReverse, ebx
		jz	short loc_1005A5F
		push	ebx		; lParam
		push	[ebp+wParam]	; wParam
		push	0C9h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	ebx		; lParam
		push	eax		; wParam
		push	0BBh		; Msg
		push	_hwndEdit	; hWnd
		mov	[ebp+var_8], eax
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	ecx, [ebp+var_8]
		mov	[ebp+var_8], ecx
		mov	ecx, [ebp+wParam]
		jmp	short loc_1005A3E
; ---------------------------------------------------------------------------

loc_1005A1A:				; CODE XREF: Search(x)+10Fj
		cmp	[ebp+var_8], 0
		mov	eax, [ebp+var_C]
		mov	[ebp+var_1C], eax
		jz	short loc_1005A76
		dec	[ebp+var_8]
		push	0		; lParam
		push	[ebp+var_8]	; wParam
		push	0BBh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	ecx, [ebp+var_1C]

loc_1005A3E:				; CODE XREF: Search(x)+CCj
		push	_fCase		; int
		lea	ecx, [edi+ecx*2]
		push	[ebp+Str2]	; Str2
		mov	[ebp+var_C], eax
		lea	eax, [edi+eax*2]
		push	ecx		; int
		push	eax		; int
		call	_ReverseScan@16	; ReverseScan(x,x,x,x)
		mov	ebx, eax
		test	ebx, ebx
		jz	short loc_1005A1A
		jmp	short loc_1005A76
; ---------------------------------------------------------------------------

loc_1005A5F:				; CODE XREF: Search(x)+9Ej
		push	_fCase		; int
		mov	eax, [ebp+lParam]
		push	[ebp+Str2]	; Str2
		lea	eax, [edi+eax*2]
		push	eax		; lpString1
		call	_ForwardScan@12	; ForwardScan(x,x,x)
		mov	ebx, eax

loc_1005A76:				; CODE XREF: Search(x)+D8j
					; Search(x)+111j
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		test	ebx, ebx
		jnz	short loc_1005ACC
		test	byte ptr _FR.Flags, 20h
		jnz	loc_1005B32
		push	_hStdCursor	; hCursor
		mov	esi, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	esi ; SetCursor(x) ; SetCursor(x)
		mov	edi, eax
		mov	eax, _hDlgFind
		test	eax, eax
		jnz	short loc_1005AAE
		mov	eax, _hwndNP

loc_1005AAE:				; CODE XREF: Search(x)+15Bj
		push	40h		; uType
		push	offset _szSearch ; lpString
		push	_szCFS		; lpText
		push	_szNN		; lpCaption
		push	eax		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)
		push	edi		; hCursor
		call	esi ; SetCursor(x) ; SetCursor(x)
		jmp	short loc_1005B32
; ---------------------------------------------------------------------------

loc_1005ACC:				; CODE XREF: Search(x)+135j
		push	[ebp+Str2]	; lpString
		sub	ebx, edi
		sar	ebx, 1
		mov	[ebp+wParam], ebx
		call	ds:__imp__lstrlenW@4 ; lstrlenW(x)
		add	eax, [ebp+wParam]
		push	eax		; lParam
		push	[ebp+wParam]	; wParam
		push	0B1h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		xor	edi, edi
		cmp	[ebp+var_14], edi
		jz	short loc_1005B0C
		push	edi		; uEnable
		push	19h		; uIDEnableItem
		push	1		; nPos
		push	[ebp+hMenu]	; hMenu
		call	ds:__imp__GetSubMenu@8 ; GetSubMenu(x,x)
		push	eax		; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)

loc_1005B0C:				; CODE XREF: Search(x)+1A9j
		test	byte ptr _FR.Flags, 20h
		jnz	short loc_1005B2B
		push	edi		; lParam
		push	edi		; wParam
		push	0B7h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	1
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)

loc_1005B2B:				; CODE XREF: Search(x)+1C7j
		mov	[ebp+var_18], 1

loc_1005B32:				; CODE XREF: Search(x)+13Ej
					; Search(x)+17Ej
		mov	eax, [ebp+var_18]

loc_1005B35:				; CODE XREF: Search(x)+93j
		pop	edi
		pop	esi

loc_1005B37:				; CODE XREF: Search(x)+1Bj
		pop	ebx
		leave
		retn	4
_Search@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	NpReCreate(DWORD hWnd)
_NpReCreate@4	proc near		; CODE XREF: NPCommand(x,x,x)+5CBp
					; RestoreFmt()+17p

Rect		= tagRECT ptr -38h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
wParam		= dword	ptr -18h
lParam		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
hCursor		= dword	ptr -8
hMem		= dword	ptr -4
hWnd		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 38h
		push	ebx
		mov	ebx, ds:__imp__SetCursor@4 ; SetCursor(x)
		push	esi
		mov	esi, [ebp+hWnd]
		push	edi
		push	_hWaitCursor	; hCursor
		shr	esi, 14h
		and	esi, 1
		mov	[ebp+var_C], esi
		call	ebx ; SetCursor(x) ; SetCursor(x)
		xor	edi, edi
		cmp	esi, edi
		mov	esi, ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	[ebp+hCursor], eax
		jz	short loc_1005B8B
		push	1
		call	_GotoAndScrollInView@4 ; GotoAndScrollInView(x)
		push	edi		; lParam
		push	edi		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1005B8B:				; CODE XREF: NpReCreate(x)+32j
		push	edi		; lParam
		push	edi		; wParam
		push	0B8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	edi		; lParam
		neg	eax
		push	edi		; wParam
		sbb	eax, eax
		push	0Eh		; Msg
		push	_hwndEdit	; hWnd
		neg	eax
		mov	[ebp+wParam], eax
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		mov	[ebp+var_10], eax
		lea	eax, [eax+eax+2]
		push	eax		; uBytes
		push	2		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		cmp	eax, edi
		mov	[ebp+hMem], eax
		jnz	short loc_1005BE5
		cmp	[ebp+var_C], edi
		jz	short loc_1005BDB
		push	edi		; lParam
		push	1		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1005BDB:				; CODE XREF: NpReCreate(x)+88j
		push	[ebp+hCursor]	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		jmp	loc_1005CD5
; ---------------------------------------------------------------------------

loc_1005BE5:				; CODE XREF: NpReCreate(x)+83j
		lea	eax, [ebp+Rect]
		push	eax		; lpRect
		push	_hwndNP		; hWnd
		call	ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		push	eax		; lParam
		mov	[ebp+lParam], eax
		mov	eax, [ebp+var_10]
		inc	eax
		push	eax		; wParam
		push	0Dh		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	edi		; lpParam
		push	_hInstanceNP	; hInstance
		push	0Fh		; hMenu
		push	_hwndNP		; hWndParent
		push	[ebp+Rect.bottom] ; nHeight
		push	[ebp+Rect.right] ; nWidth
		push	edi		; Y
		push	edi		; X
		push	[ebp+hWnd]	; dwStyle
		push	offset szOtherStuff ; lpWindowName
		push	offset ClassName ; "Edit"
		push	200h		; dwExStyle
		call	ds:__imp__CreateWindowExW@48 ; CreateWindowExW(x,x,x,x,x,x,x,x,x,x,x,x)
		cmp	eax, edi
		mov	[ebp+hWnd], eax
		jnz	short loc_1005C63
		push	[ebp+hCursor]	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		cmp	[ebp+var_C], edi
		jz	short loc_1005CC3
		push	edi		; lParam
		push	1		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		jmp	short loc_1005CC3
; ---------------------------------------------------------------------------

loc_1005C63:				; CODE XREF: NpReCreate(x)+104j
		push	0FFFFFFECh	; nIndex
		push	_hwndEdit	; hWnd
		call	ds:__imp__GetWindowLongW@8 ; GetWindowLongW(x,x)
		or	eax, 200h
		push	eax		; dwNewLong
		push	0FFFFFFECh	; nIndex
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__SetWindowLongW@12 ; SetWindowLongW(x,x,x)
		push	1		; lParam
		push	_hFont		; wParam
		push	30h		; Msg
		push	[ebp+hWnd]	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	[ebp+lParam]	; lParam
		push	edi		; wParam
		push	0Ch		; Msg
		push	[ebp+hWnd]	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		test	eax, eax
		jnz	short loc_1005CDC
		push	[ebp+hCursor]	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		cmp	[ebp+var_C], edi
		jz	short loc_1005CBA
		push	edi		; lParam
		push	1		; wParam
		push	0C8h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)

loc_1005CBA:				; CODE XREF: NpReCreate(x)+167j
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__DestroyWindow@4 ; DestroyWindow(x)

loc_1005CC3:				; CODE XREF: NpReCreate(x)+10Ej
					; NpReCreate(x)+120j
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)

loc_1005CD5:				; CODE XREF: NpReCreate(x)+9Fj
		xor	eax, eax
		jmp	loc_1005D97
; ---------------------------------------------------------------------------

loc_1005CDC:				; CODE XREF: NpReCreate(x)+15Dj
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)
		push	_hwndEdit	; hWnd
		call	ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
		mov	eax, [ebp+hWnd]
		mov	_hwndEdit, eax
		mov	eax, _hEdit
		cmp	eax, edi
		jz	short loc_1005D09
		push	eax		; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)

loc_1005D09:				; CODE XREF: NpReCreate(x)+1BFj
		mov	eax, [ebp+hMem]
		push	edi		; lParam
		push	edi		; wParam
		push	0C5h		; Msg
		push	_hwndEdit	; hWnd
		mov	_hEdit,	eax
		call	ds:__imp__PostMessageW@16 ; PostMessageW(x,x,x,x)
		push	5		; nCmdShow
		push	_hwndNP		; hWnd
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)
		push	edi		; lParam
		push	[ebp+wParam]	; wParam
		push	0B9h		; Msg
		push	_hwndEdit	; hWnd
		call	esi ; SendMessageW(x,x,x,x) ; SendMessageW(x,x,x,x)
		push	_hwndEdit	; hWnd
		call	ds:__imp__SetFocus@4 ; SetFocus(x)
		push	[ebp+hCursor]	; hCursor
		call	ebx ; SetCursor(x) ; SetCursor(x)
		cmp	_fStatus, edi
		jz	short loc_1005D94
		lea	eax, [ebp+var_28]
		push	eax		; lpRect
		push	_hwndNP		; hWnd
		call	ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
		mov	eax, [ebp+var_1C]
		sub	eax, [ebp+var_24]
		push	eax		; int
		mov	eax, [ebp+var_20]
		sub	eax, [ebp+var_28]
		push	eax		; nWidth
		call	_NPSize@8	; NPSize(x,x)
		push	1
		call	_UpdateStatusBar@4 ; UpdateStatusBar(x)
		push	5		; nCmdShow
		push	_hwndStatus	; hWnd
		call	ds:__imp__ShowWindow@8 ; ShowWindow(x,x)

loc_1005D94:				; CODE XREF: NpReCreate(x)+219j
		xor	eax, eax
		inc	eax

loc_1005D97:				; CODE XREF: NpReCreate(x)+196j
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	4
_NpReCreate@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall AbortProc(HDC,	int)
_AbortProc@8	proc near		; DATA XREF: NpPrintGivenDC(x)+2D9o

Msg		= tagMSG ptr -1Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 1Ch
		push	esi
		xor	esi, esi
		jmp	short loc_1005DEF
; ---------------------------------------------------------------------------

loc_1005DB0:				; CODE XREF: AbortProc(x,x)+52j
		push	1		; wRemoveMsg
		push	esi		; wMsgFilterMax
		push	esi		; wMsgFilterMin
		push	esi		; hWnd
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		call	ds:__imp__PeekMessageW@20 ; PeekMessageW(x,x,x,x,x)
		test	eax, eax
		jz	short loc_1005DF7
		mov	eax, _hAbortDlgWnd
		cmp	eax, esi
		jz	short loc_1005DDB
		lea	ecx, [ebp+Msg]
		push	ecx		; lpMsg
		push	eax		; hDlg
		call	ds:__imp__IsDialogMessageW@8 ; IsDialogMessageW(x,x)
		test	eax, eax
		jnz	short loc_1005DEF

loc_1005DDB:				; CODE XREF: AbortProc(x,x)+27j
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		call	ds:__imp__TranslateMessage@4 ; TranslateMessage(x)
		lea	eax, [ebp+Msg]
		push	eax		; lpMsg
		call	ds:__imp__DispatchMessageW@4 ; DispatchMessageW(x)

loc_1005DEF:				; CODE XREF: AbortProc(x,x)+Bj
					; AbortProc(x,x)+36j
		cmp	_fAbort, esi
		jz	short loc_1005DB0

loc_1005DF7:				; CODE XREF: AbortProc(x,x)+1Ej
		xor	eax, eax
		cmp	_fAbort, esi
		pop	esi
		setz	al
		leave
		retn	8
_AbortProc@8	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	GetResolutions(HDC hdc)
_GetResolutions@4 proc near		; CODE XREF: NpPrintGivenDC(x)+58p

hdc		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, ds:__imp__GetDeviceCaps@8 ; GetDeviceCaps(x,x)
		push	edi
		mov	edi, [ebp+hdc]
		push	8		; index
		push	edi		; hdc
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	0Ah		; index
		push	edi		; hdc
		mov	_xPrintRes, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	5Ah		; index
		push	edi		; hdc
		mov	_yPrintRes, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	6Eh		; index
		push	edi		; hdc
		mov	_yPixInch, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	6Fh		; index
		push	edi		; hdc
		mov	_xPhysRes, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	70h		; index
		push	edi		; hdc
		mov	_yPhysRes, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		push	71h		; index
		push	edi		; hdc
		mov	_xPhysOff, eax
		call	esi ; GetDeviceCaps(x,x) ; GetDeviceCaps(x,x)
		pop	edi
		mov	_yPhysOff, eax
		pop	esi
		pop	ebp
		retn	4
_GetResolutions@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	GetPrinterDCviaDialog()
_GetPrinterDCviaDialog@0 proc near	; CODE XREF: NpPrint(x):loc_1006E25p

var_54		= tagPDEXW ptr -54h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 54h
		mov	edx, _g_PageSetupDlg.hDevNames
		test	edx, edx
		push	ebx
		push	esi
		mov	esi, ds:__imp__PageSetupDlgW@4 ; PageSetupDlgW(x)
		push	edi
		mov	ebx, 0FFFFFB7Fh
		jnz	short loc_1005EA9
		or	word ptr _g_PageSetupDlg.Flags,	480h
		push	offset _g_PageSetupDlg ; LPPAGESETUPDLGW
		call	esi ; PageSetupDlgW(x) ; PageSetupDlgW(x)
		and	_g_PageSetupDlg.Flags, ebx
		mov	edx, _g_PageSetupDlg.hDevNames

loc_1005EA9:				; CODE XREF: GetPrinterDCviaDialog()+1Ej
		xor	eax, eax
		push	15h
		pop	ecx
		lea	edi, [ebp+var_54]
		rep stosd
		mov	eax, _hwndNP
		mov	[ebp+var_54.hwndOwner],	eax
		mov	eax, _g_PageSetupDlg.hDevMode
		or	edi, 0FFFFFFFFh
		test	eax, eax
		mov	[ebp+var_54.lStructSize], 54h
		mov	[ebp+var_54.nStartPage], edi
		mov	[ebp+var_54.Flags], 84010Ch
		jz	short loc_1005EDB
		mov	[ebp+var_54.hDevMode], eax

loc_1005EDB:				; CODE XREF: GetPrinterDCviaDialog()+69j
		test	edx, edx
		jz	short loc_1005EE2
		mov	[ebp+var_54.hDevNames],	edx

loc_1005EE2:				; CODE XREF: GetPrinterDCviaDialog()+70j
		lea	eax, [ebp+var_54]
		push	eax		; LPPRINTDLGEXW
		call	ds:__imp__PrintDlgExW@4	; PrintDlgExW(x)
		test	eax, eax
		jnz	short loc_1005F30
		cmp	[ebp+var_54.dwResultAction], 1
		jz	short loc_1005EFE
		cmp	[ebp+var_54.dwResultAction], 2
		jnz	short loc_1005F30
		jmp	short loc_1005F01
; ---------------------------------------------------------------------------

loc_1005EFE:				; CODE XREF: GetPrinterDCviaDialog()+87j
		mov	edi, [ebp+var_54.hDC]

loc_1005F01:				; CODE XREF: GetPrinterDCviaDialog()+8Fj
		cmp	_g_PageSetupDlg.hDevMode, 0
		jnz	short loc_1005F20
		or	word ptr _g_PageSetupDlg.Flags,	480h
		push	offset _g_PageSetupDlg ; LPPAGESETUPDLGW
		call	esi ; PageSetupDlgW(x) ; PageSetupDlgW(x)
		and	_g_PageSetupDlg.Flags, ebx

loc_1005F20:				; CODE XREF: GetPrinterDCviaDialog()+9Bj
		mov	eax, [ebp+var_54.hDevMode]
		mov	_g_PageSetupDlg.hDevMode, eax
		mov	eax, [ebp+var_54.hDevNames]
		mov	_g_PageSetupDlg.hDevNames, eax

loc_1005F30:				; CODE XREF: GetPrinterDCviaDialog()+81j
					; GetPrinterDCviaDialog()+8Dj
		mov	eax, edi
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn
_GetPrinterDCviaDialog@0 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	DestroyAbortWnd()
_DestroyAbortWnd@0 proc	near		; CODE XREF: AbortDlgProc(x,x,x,x)+3Ap
					; NpPrintGivenDC(x)+650p
		push	1		; bEnable
		push	_hwndNP		; hWnd
		call	ds:__imp__EnableWindow@8 ; EnableWindow(x,x)
		push	_hAbortDlgWnd	; hWnd
		call	ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
		and	_hAbortDlgWnd, 0
		retn
_DestroyAbortWnd@0 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	PageSetupHookProc(HWND hDlg, int, HWND hWndMain, int)
_PageSetupHookProc@16 proc near		; DATA XREF: SetPageSetupDefaults()+13o

Point		= tagPOINT ptr -8
hDlg		= dword	ptr  8
arg_4		= dword	ptr  0Ch
hWndMain	= dword	ptr  10h
arg_C		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		mov	eax, [ebp+arg_4]
		dec	eax
		dec	eax
		push	esi
		push	edi
		jz	loc_1006063
		sub	eax, 51h
		jz	loc_100603B
		sub	eax, 28h
		jz	short loc_1005FE1
		sub	eax, 95h
		jnz	loc_1006084
		mov	esi, ds:__imp__SendDlgItemMessageW@20 ;	SendDlgItemMessageW(x,x,x,x,x)
		push	ebx
		push	1Eh
		pop	edi
		mov	ebx, offset _chPageText

loc_1005F9F:				; CODE XREF: PageSetupHookProc(x,x,x,x)+60j
		push	0		; lParam
		push	27h		; wParam
		push	0C5h		; Msg
		push	edi		; nIDDlgItem
		push	[ebp+hDlg]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		push	ebx		; lpString
		push	edi		; nIDDlgItem
		push	[ebp+hDlg]	; hDlg
		call	ds:__imp__SetDlgItemTextW@12 ; SetDlgItemTextW(x,x,x)
		add	ebx, 50h
		inc	edi
		cmp	ebx, offset String1
		jle	short loc_1005F9F
		push	270000h		; lParam
		push	0		; wParam
		push	0B1h		; Msg
		push	1Eh		; nIDDlgItem
		push	[ebp+hDlg]	; hDlg
		call	esi ; SendDlgItemMessageW(x,x,x,x,x) ; SendDlgItemMessageW(x,x,x,x,x)
		xor	eax, eax
		inc	eax
		pop	ebx
		jmp	loc_1006086
; ---------------------------------------------------------------------------

loc_1005FE1:				; CODE XREF: PageSetupHookProc(x,x,x,x)+20j
		mov	esi, [ebp+hWndMain]
		cmp	[ebp+hDlg], esi
		jnz	short loc_1006011
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		call	ds:__imp__GetCursorPos@4 ; GetCursorPos(x)
		lea	eax, [ebp+Point]
		push	eax		; lpPoint
		push	[ebp+hDlg]	; hWnd
		call	ds:__imp__ScreenToClient@8 ; ScreenToClient(x,x)
		push	[ebp+Point.y]
		push	[ebp+Point.x]	; Point
		push	[ebp+hDlg]	; hWndParent
		call	ds:__imp__ChildWindowFromPoint@12 ; ChildWindowFromPoint(x,x,x)
		mov	esi, eax

loc_1006011:				; CODE XREF: PageSetupHookProc(x,x,x,x)+84j
		push	esi		; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 1Eh
		jl	short loc_1006084
		cmp	eax, 21h
		jg	short loc_1006084
		push	offset _s_PageSetupHelpIDs ; dwData
		push	0Ah		; uCommand
		push	dword ptr _szHelpFile ;	lpszHelp
		push	esi		; hWndMain

loc_1006030:				; CODE XREF: PageSetupHookProc(x,x,x,x)+FEj
		call	ds:__imp__WinHelpW@16 ;	WinHelpW(x,x,x,x)
		xor	eax, eax
		inc	eax
		jmp	short loc_1006086
; ---------------------------------------------------------------------------

loc_100603B:				; CODE XREF: PageSetupHookProc(x,x,x,x)+17j
		mov	esi, [ebp+arg_C]
		push	dword ptr [esi+0Ch] ; hWnd
		call	ds:__imp__GetDlgCtrlID@4 ; GetDlgCtrlID(x)
		cmp	eax, 1Eh
		jl	short loc_1006084
		cmp	eax, 21h
		jg	short loc_1006084
		push	offset _s_PageSetupHelpIDs
		push	0Ch
		push	dword ptr _szHelpFile
		push	dword ptr [esi+0Ch]
		jmp	short loc_1006030
; ---------------------------------------------------------------------------

loc_1006063:				; CODE XREF: PageSetupHookProc(x,x,x,x)+Ej
		push	1Eh
		pop	edi
		mov	esi, offset _chPageTextTemp

loc_100606B:				; CODE XREF: PageSetupHookProc(x,x,x,x)+11Fj
		push	28h		; cchMax
		push	esi		; lpString
		push	edi		; nIDDlgItem
		push	[ebp+hDlg]	; hDlg
		call	ds:__imp__GetDlgItemTextW@16 ; GetDlgItemTextW(x,x,x,x)
		add	esi, 50h
		inc	edi
		cmp	esi, offset word_100A390
		jle	short loc_100606B

loc_1006084:				; CODE XREF: PageSetupHookProc(x,x,x,x)+27j
					; PageSetupHookProc(x,x,x,x)+B8j ...
		xor	eax, eax

loc_1006086:				; CODE XREF: PageSetupHookProc(x,x,x,x)+79j
					; PageSetupHookProc(x,x,x,x)+D6j
		pop	edi
		pop	esi
		leave
		retn	10h
_PageSetupHookProc@16 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall TranslateString(x)
_TranslateString@4 proc	near		; CODE XREF: PrintHeaderFooter(x,x)+27p

Time		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
String		= word ptr -20Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 224h
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		mov	[ebp+var_4], eax
		push	edi
		mov	edi, [ebp+arg_0]
		xor	ebx, ebx
		lea	eax, [ebp+Time]
		xor	esi, esi
		push	eax		; Time
		mov	[ebp+var_210], edi
		inc	esi
		mov	[ebp+var_220], ebx
		mov	[ebp+var_21C], ebx
		mov	[ebp+var_218], ebx
		call	ds:__imp__time
		lea	eax, [ebp+Time]
		push	eax		; Time
		call	ds:__imp__localtime
		pop	ecx
		pop	ecx
		mov	cx, [edi]
		cmp	cx, bx
		jz	loc_10063EE
		mov	eax, dword ptr _szHelpFile+0Ch
		jmp	short loc_100612A
; ---------------------------------------------------------------------------

loc_10060F6:				; CODE XREF: TranslateString(x)+A2j
					; TranslateString(x)+357j
		cmp	cx, 26h
		jz	short loc_1006145
		add	[ebp+var_210], 2
		mov	ebx, esi
		imul	ebx, 104h
		lea	edx, [ebp+esi*4+var_220]
		mov	edi, [edx]
		add	ebx, edi
		mov	_chBuff[ebx*2],	cx
		mov	ecx, [ebp+var_210]
		movzx	ecx, word ptr [ecx]
		inc	edi
		mov	[edx], edi

loc_100612A:				; CODE XREF: TranslateString(x)+63j
		test	cx, cx
		mov	ebx, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		jnz	short loc_10060F6
		mov	ecx, [ebp+var_210]
		cmp	word ptr [ecx],	26h
		jnz	loc_10063DC

loc_1006145:				; CODE XREF: TranslateString(x)+69j
		add	[ebp+var_210], 2
		mov	ecx, [ebp+var_210]
		mov	cx, [ecx]
		cmp	cx, [eax]
		jz	loc_1006357
		cmp	cx, [eax+2]
		jz	loc_1006357
		cmp	cx, [eax+4]
		jz	loc_10062A6
		cmp	cx, [eax+6]
		jz	loc_10062A6
		cmp	cx, [eax+8]
		jz	loc_1006255
		cmp	cx, [eax+0Ah]
		jz	loc_1006255
		cmp	cx, [eax+0Ch]
		jz	loc_1006228
		cmp	cx, [eax+0Eh]
		jz	loc_1006228
		cmp	cx, 26h
		jnz	short loc_10061E9
		lea	ecx, [ebp+esi*4+var_220]
		mov	edx, [ecx]
		lea	edi, [edx+1]
		cmp	edi, 104h
		mov	[ebp+var_214], edi
		jge	loc_10063D5
		mov	edi, esi
		imul	edi, 104h
		add	edi, edx
		mov	edx, [ebp+var_214]
		mov	_chBuff[edi*2],	26h
		mov	[ecx], edx
		jmp	loc_10063D5
; ---------------------------------------------------------------------------

loc_10061E9:				; CODE XREF: TranslateString(x)+117j
		cmp	cx, [eax+10h]
		jz	short loc_1006220
		cmp	cx, [eax+12h]
		jz	short loc_1006220
		cmp	cx, [eax+14h]
		jz	short loc_1006218
		cmp	cx, [eax+16h]
		jz	short loc_1006218
		cmp	cx, [eax+18h]
		jz	short loc_1006211
		cmp	cx, [eax+1Ah]
		jnz	loc_10063D5

loc_1006211:				; CODE XREF: TranslateString(x)+174j
		xor	esi, esi
		jmp	loc_10063D5
; ---------------------------------------------------------------------------

loc_1006218:				; CODE XREF: TranslateString(x)+168j
					; TranslateString(x)+16Ej
		push	2
		pop	esi
		jmp	loc_10063D5
; ---------------------------------------------------------------------------

loc_1006220:				; CODE XREF: TranslateString(x)+15Cj
					; TranslateString(x)+162j
		xor	esi, esi
		inc	esi
		jmp	loc_10063D5
; ---------------------------------------------------------------------------

loc_1006228:				; CODE XREF: TranslateString(x)+103j
					; TranslateString(x)+10Dj
		push	offset _szFormattedDate	; lpString
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		lea	edi, [ebp+esi*4+var_220]
		mov	ecx, [edi]
		lea	edx, [ecx+eax]
		cmp	edx, 104h
		mov	[ebp+var_214], edx
		jge	loc_10063D0
		push	eax
		push	offset _szFormattedDate
		jmp	short loc_1006280
; ---------------------------------------------------------------------------

loc_1006255:				; CODE XREF: TranslateString(x)+EFj
					; TranslateString(x)+F9j
		push	offset _szFormattedTime	; lpString
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		lea	edi, [ebp+esi*4+var_220]
		mov	ecx, [edi]
		lea	edx, [ecx+eax]
		cmp	edx, 104h
		mov	[ebp+var_214], edx
		jge	loc_10063D0
		push	eax		; Count
		push	offset _szFormattedTime	; Source

loc_1006280:				; CODE XREF: TranslateString(x)+1C2j
		mov	eax, esi
		imul	eax, 104h
		add	eax, ecx
		lea	eax, ds:1009B00h[eax*2]
		push	eax		; Dest
		call	ds:__imp__wcsncpy
		mov	eax, [ebp+var_214]
		add	esp, 0Ch
		jmp	loc_10063CE
; ---------------------------------------------------------------------------

loc_10062A6:				; CODE XREF: TranslateString(x)+DBj
					; TranslateString(x)+E5j
		add	[ebp+var_210], 2
		mov	eax, [ebp+var_210]
		xor	edi, edi
		cmp	word ptr [eax],	2Bh
		jnz	short loc_10062E7
		jmp	short loc_10062CD
; ---------------------------------------------------------------------------

loc_10062BD:				; CODE XREF: TranslateString(x)+254j
		mov	eax, [ebp+var_210]
		movzx	edx, word ptr [eax]
		lea	ecx, [edi+edi*4]
		lea	edi, [edx+ecx*2-30h]

loc_10062CD:				; CODE XREF: TranslateString(x)+22Aj
		inc	eax
		inc	eax
		mov	[ebp+var_210], eax
		movzx	eax, word ptr [eax]
		push	4		; Type
		push	eax		; C
		call	ds:__imp__iswctype
		test	eax, eax
		pop	ecx
		pop	ecx
		jnz	short loc_10062BD

loc_10062E7:				; CODE XREF: TranslateString(x)+228j
		mov	eax, _iPageNum
		add	eax, edi
		push	eax
		lea	eax, [ebp+String]
		push	offset aD	; "%d"
		push	eax		; LPWSTR
		call	ds:__imp__wsprintfW
		add	esp, 0Ch
		lea	eax, [ebp+String]
		push	eax		; lpString
		lea	edi, [ebp+esi*4+var_220]
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		mov	ecx, eax
		mov	eax, [edi]
		add	ecx, eax
		cmp	ecx, 104h
		jge	short loc_100634E
		lea	ecx, [ebp+String]
		push	ecx		; lpString2
		mov	ecx, esi
		imul	ecx, 104h
		add	ecx, eax
		lea	eax, ds:1009B00h[ecx*2]
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		lea	eax, [ebp+String]
		push	eax		; lpString
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		add	eax, [edi]
		mov	[edi], eax

loc_100634E:				; CODE XREF: TranslateString(x)+28Fj
		sub	[ebp+var_210], 2
		jmp	short loc_10063D0
; ---------------------------------------------------------------------------

loc_1006357:				; CODE XREF: TranslateString(x)+C7j
					; TranslateString(x)+D1j
		cmp	_fUntitled, 0
		lea	eax, [ebp+String]
		jnz	short loc_1006379
		push	104h		; cchSize
		push	eax		; Buf
		push	offset _szFileName ; LPCWSTR
		call	ds:__imp__GetFileTitleW@12 ; GetFileTitleW(x,x,x)
		jmp	short loc_1006386
; ---------------------------------------------------------------------------

loc_1006379:				; CODE XREF: TranslateString(x)+2D3j
		push	_szUntitled	; lpString2
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)

loc_1006386:				; CODE XREF: TranslateString(x)+2E6j
		lea	eax, [ebp+String]
		push	eax		; lpString
		lea	edi, [ebp+esi*4+var_220]
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		mov	ecx, eax
		mov	eax, [edi]
		add	ecx, eax
		cmp	ecx, 104h
		jge	short loc_10063D0
		lea	ecx, [ebp+String]
		push	ecx		; lpString2
		mov	ecx, esi
		imul	ecx, 104h
		add	ecx, eax
		lea	eax, ds:1009B00h[ecx*2]
		push	eax		; lpString1
		call	ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
		lea	eax, [ebp+String]
		push	eax		; lpString
		call	ebx ; lstrlenW(x) ; lstrlenW(x)
		add	eax, [edi]

loc_10063CE:				; CODE XREF: TranslateString(x)+210j
		mov	[edi], eax

loc_10063D0:				; CODE XREF: TranslateString(x)+1B6j
					; TranslateString(x)+1E3j ...
		mov	eax, dword ptr _szHelpFile+0Ch

loc_10063D5:				; CODE XREF: TranslateString(x)+131j
					; TranslateString(x)+153j ...
		add	[ebp+var_210], 2

loc_10063DC:				; CODE XREF: TranslateString(x)+AEj
		mov	ecx, [ebp+var_210]
		mov	cx, [ecx]
		test	cx, cx
		jnz	loc_10060F6

loc_10063EE:				; CODE XREF: TranslateString(x)+58j
		pop	edi
		pop	esi
		xor	ecx, ecx
		lea	eax, [ebp+var_220]
		pop	ebx

loc_10063F9:				; CODE XREF: TranslateString(x)+384j
		mov	edx, [eax]
		add	edx, ecx
		and	_chBuff[edx*2],	0
		add	ecx, 104h
		add	eax, 4
		cmp	ecx, 208h
		jle	short loc_10063F9
		mov	ecx, [ebp+var_4]
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_TranslateString@4 endp

; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================


; int __stdcall	GetPrinterDC()
_GetPrinterDC@0	proc near		; CODE XREF: NpPrint(x)+20p
		cmp	_g_PageSetupDlg.hDevNames, 0
		jnz	short loc_1006471
		or	byte ptr _g_PageSetupDlg.Flags+1, 4
		push	offset _g_PageSetupDlg ; LPPAGESETUPDLGW
		call	ds:__imp__PageSetupDlgW@4 ; PageSetupDlgW(x)
		and	byte ptr _g_PageSetupDlg.Flags+1, 0FBh
		cmp	_g_PageSetupDlg.hDevNames, 0
		jnz	short loc_1006471
		push	30h		; uType
		push	_szNN		; lpCaption
		push	_szLoadDrvFail	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		or	eax, 0FFFFFFFFh
		retn
; ---------------------------------------------------------------------------

loc_1006471:				; CODE XREF: GetPrinterDC()+7j
					; GetPrinterDC()+29j
		push	esi
		push	edi
		push	_g_PageSetupDlg.hDevNames ; hMem
		mov	edi, ds:__imp__GlobalLock@4 ; GlobalLock(x)
		call	edi ; GlobalLock(x) ; GlobalLock(x)
		mov	ecx, _g_PageSetupDlg.hDevMode
		mov	esi, eax
		xor	eax, eax
		test	ecx, ecx
		jz	short loc_1006492
		push	ecx		; hMem
		call	edi ; GlobalLock(x) ; GlobalLock(x)

loc_1006492:				; CODE XREF: GetPrinterDC()+65j
		push	eax		; pdm
		movzx	eax, word ptr [esi+2]
		lea	eax, [esi+eax*2]
		push	0		; pszPort
		push	eax		; pwszDevice
		movzx	eax, word ptr [esi]
		lea	eax, [esi+eax*2]
		push	eax		; pwszDriver
		call	ds:__imp__CreateDCW@16 ; CreateDCW(x,x,x,x)
		push	_g_PageSetupDlg.hDevNames ; hMem
		mov	esi, ds:__imp__GlobalUnlock@4 ;	GlobalUnlock(x)
		mov	edi, eax
		call	esi ; GlobalUnlock(x) ;	GlobalUnlock(x)
		mov	eax, _g_PageSetupDlg.hDevMode
		test	eax, eax
		jz	short loc_10064C6
		push	eax		; hMem
		call	esi ; GlobalUnlock(x) ;	GlobalUnlock(x)

loc_10064C6:				; CODE XREF: GetPrinterDC()+99j
		test	edi, edi
		jnz	short loc_10064E9
		push	30h		; uType
		push	_szNN		; lpCaption
		push	_szLoadDrvFail	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		or	eax, 0FFFFFFFFh
		jmp	short loc_10064EB
; ---------------------------------------------------------------------------

loc_10064E9:				; CODE XREF: GetPrinterDC()+A0j
		mov	eax, edi

loc_10064EB:				; CODE XREF: GetPrinterDC()+BFj
		pop	edi
		pop	esi
		retn
_GetPrinterDC@0	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	GetNonDefPrinterDC()
_GetNonDefPrinterDC@0 proc near		; CODE XREF: NpPrint(x):loc_1006E1Ep

pcbNeeded	= dword	ptr -8
hPrinter	= dword	ptr -4

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		push	ebx
		push	edi
		xor	ebx, ebx
		push	ebx		; pDefault
		lea	eax, [ebp+hPrinter]
		push	eax		; phPrinter
		mov	edi, offset _szPrinterName
		push	edi		; pPrinterName
		call	_OpenPrinterW@12 ; OpenPrinterW(x,x,x)
		test	eax, eax
		jnz	short loc_100651A
		or	eax, 0FFFFFFFFh
		jmp	loc_10065C2
; ---------------------------------------------------------------------------

loc_100651A:				; CODE XREF: GetNonDefPrinterDC()+1Dj
		push	esi
		lea	eax, [ebp+pcbNeeded]
		push	eax		; pcbNeeded
		push	ebx		; cbBuf
		push	ebx		; pDriverInfo
		push	1		; Level
		push	ebx		; pEnvironment
		push	[ebp+hPrinter]	; hPrinter
		call	_GetPrinterDriverW@24 ;	GetPrinterDriverW(x,x,x,x,x,x)
		push	[ebp+pcbNeeded]	; uBytes
		push	40h		; uFlags
		call	ds:__imp__LocalAlloc@8 ; LocalAlloc(x,x)
		mov	esi, eax
		cmp	esi, ebx
		jnz	short loc_100654A

loc_100653D:				; CODE XREF: GetNonDefPrinterDC()+75j
		push	[ebp+hPrinter]	; hPrinter
		call	_ClosePrinter@4	; ClosePrinter(x)

loc_1006545:				; CODE XREF: GetNonDefPrinterDC()+CAj
		or	eax, 0FFFFFFFFh
		jmp	short loc_10065C1
; ---------------------------------------------------------------------------

loc_100654A:				; CODE XREF: GetNonDefPrinterDC()+48j
		lea	eax, [ebp+pcbNeeded]
		push	eax		; pcbNeeded
		push	[ebp+pcbNeeded]	; cbBuf
		push	esi		; pDriverInfo
		push	1		; Level
		push	ebx		; pEnvironment
		push	[ebp+hPrinter]	; hPrinter
		call	_GetPrinterDriverW@24 ;	GetPrinterDriverW(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_100656A
		push	esi		; hMem
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		jmp	short loc_100653D
; ---------------------------------------------------------------------------

loc_100656A:				; CODE XREF: GetNonDefPrinterDC()+6Cj
		or	byte ptr _g_PageSetupDlg.Flags+1, 4
		push	offset _g_PageSetupDlg ; LPPAGESETUPDLGW
		call	ds:__imp__PageSetupDlgW@4 ; PageSetupDlgW(x)
		and	byte ptr _g_PageSetupDlg.Flags+1, 0FBh
		push	ebx		; pdm
		push	ebx		; pszPort
		push	edi		; pwszDevice
		push	dword ptr [esi]	; pwszDriver
		call	ds:__imp__CreateDCW@16 ; CreateDCW(x,x,x,x)
		push	esi		; hMem
		mov	edi, eax
		call	ds:__imp__LocalFree@4 ;	LocalFree(x)
		push	[ebp+hPrinter]	; hPrinter
		call	_ClosePrinter@4	; ClosePrinter(x)
		cmp	edi, ebx
		jnz	short loc_10065BF
		push	30h		; uType
		push	_szNN		; lpCaption
		push	_szLoadDrvFail	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		jmp	short loc_1006545
; ---------------------------------------------------------------------------

loc_10065BF:				; CODE XREF: GetNonDefPrinterDC()+AEj
		mov	eax, edi

loc_10065C1:				; CODE XREF: GetNonDefPrinterDC()+55j
		pop	esi

loc_10065C2:				; CODE XREF: GetNonDefPrinterDC()+22j
		pop	edi
		pop	ebx
		leave
		retn
_GetNonDefPrinterDC@0 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; BOOL __stdcall AbortDlgProc(HWND, UINT, WPARAM, LPARAM)
_AbortDlgProc@16 proc near		; DATA XREF: NpPrintGivenDC(x)+350o

hWnd		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_4]
		sub	eax, 110h
		jz	short loc_100660C
		dec	eax
		jz	short loc_10065FB
		sub	eax, 5
		jz	short loc_10065E6
		xor	eax, eax
		jmp	short loc_100664E
; ---------------------------------------------------------------------------

loc_10065E6:				; CODE XREF: AbortDlgProc(x,x,x,x)+15j
		push	1		; uEnable
		push	0F060h		; uIDEnableItem
		push	hMenu		; hMenu
		call	ds:__imp__EnableMenuItem@12 ; EnableMenuItem(x,x,x)
		jmp	short loc_100664B
; ---------------------------------------------------------------------------

loc_10065FB:				; CODE XREF: AbortDlgProc(x,x,x,x)+10j
		mov	_fAbort, 1
		call	_DestroyAbortWnd@0 ; DestroyAbortWnd()
		jmp	short loc_100664B
; ---------------------------------------------------------------------------

loc_100660C:				; CODE XREF: AbortDlgProc(x,x,x,x)+Dj
		push	0		; bRevert
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__GetSystemMenu@8 ; GetSystemMenu(x,x)
		cmp	_fUntitled, 0
		mov	hMenu, eax
		jz	short loc_100662C
		mov	eax, _szUntitled
		jmp	short loc_1006636
; ---------------------------------------------------------------------------

loc_100662C:				; CODE XREF: AbortDlgProc(x,x,x,x)+58j
		push	offset _szFileName ; lpsz
		call	_PFileInPath@4	; PFileInPath(x)

loc_1006636:				; CODE XREF: AbortDlgProc(x,x,x,x)+5Fj
		push	eax		; lpString
		push	14h		; nIDDlgItem
		push	[ebp+hWnd]	; hDlg
		call	ds:__imp__SetDlgItemTextW@12 ; SetDlgItemTextW(x,x,x)
		push	[ebp+hWnd]	; hWnd
		call	ds:__imp__SetFocus@4 ; SetFocus(x)

loc_100664B:				; CODE XREF: AbortDlgProc(x,x,x,x)+2Ej
					; AbortDlgProc(x,x,x,x)+3Fj
		xor	eax, eax
		inc	eax

loc_100664E:				; CODE XREF: AbortDlgProc(x,x,x,x)+19j
		pop	ebp
		retn	10h
_AbortDlgProc@16 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	PrintHeaderFooter(HDC hdc, int y)
_PrintHeaderFooter@8 proc near		; CODE XREF: NpPrintGivenDC(x)+4C8p
					; NpPrintGivenDC(x)+531p

psizl		= tagSIZE ptr -8
hdc		= dword	ptr  8
y		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		push	ebx
		push	esi
		mov	esi, [ebp+y]
		lea	eax, [esi+esi*4]
		shl	eax, 4
		lea	eax, _chPageText[eax]
		xor	ebx, ebx
		cmp	[eax], bx
		jnz	short loc_100667D
		xor	eax, eax
		jmp	loc_1006768
; ---------------------------------------------------------------------------

loc_100667D:				; CODE XREF: PrintHeaderFooter(x,x)+1Dj
		push	eax
		call	_TranslateString@4 ; TranslateString(x)
		cmp	esi, ebx
		jnz	short loc_100668E
		mov	eax, _dyTop
		jmp	short loc_100669F
; ---------------------------------------------------------------------------

loc_100668E:				; CODE XREF: PrintHeaderFooter(x,x)+2Ej
		mov	eax, _yPrintRes
		sub	eax, _yPrintChar
		sub	eax, _dyBottom

loc_100669F:				; CODE XREF: PrintHeaderFooter(x,x)+35j
		cmp	_chBuff, bx
		mov	esi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
		mov	[ebp+y], eax
		push	edi
		jz	short loc_10066CE
		mov	edi, offset _chBuff
		push	edi		; lpString
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	eax		; c
		push	edi		; lpString
		push	[ebp+y]		; y
		push	_dxLeft		; x
		push	[ebp+hdc]	; hdc
		call	ds:__imp__TextOutW@20 ;	TextOutW(x,x,x,x,x)

loc_10066CE:				; CODE XREF: PrintHeaderFooter(x,x)+59j
		cmp	word_1009D08, bx
		jz	short loc_1006722
		lea	eax, [ebp+psizl]
		push	eax		; psizl
		mov	ebx, offset word_1009D08
		push	ebx		; lpString
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	eax		; c
		push	ebx		; lpString
		push	[ebp+hdc]	; hdc
		call	ds:__imp__GetTextExtentPoint32W@16 ; GetTextExtentPoint32W(x,x,x,x)
		mov	eax, _xPrintRes
		sub	eax, _dxRight
		push	ebx		; lpString
		add	eax, _dxLeft
		cdq
		sub	eax, edx
		mov	edi, eax
		mov	eax, [ebp+psizl._cx]
		cdq
		sub	eax, edx
		sar	eax, 1
		sar	edi, 1
		sub	edi, eax
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	eax		; c
		push	ebx		; lpString
		push	[ebp+y]		; y
		push	edi		; x
		push	[ebp+hdc]	; hdc
		call	ds:__imp__TextOutW@20 ;	TextOutW(x,x,x,x,x)

loc_1006722:				; CODE XREF: PrintHeaderFooter(x,x)+7Ej
		cmp	word_1009F10, 0
		jz	short loc_1006764
		lea	eax, [ebp+psizl]
		push	eax		; psizl
		mov	ebx, offset word_1009F10
		push	ebx		; lpString
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	eax		; c
		push	ebx		; lpString
		push	[ebp+hdc]	; hdc
		call	ds:__imp__GetTextExtentPoint32W@16 ; GetTextExtentPoint32W(x,x,x,x)
		mov	edi, _xPrintRes
		sub	edi, _dxRight
		push	ebx		; lpString
		sub	edi, [ebp+psizl._cx]
		call	esi ; lstrlenW(x) ; lstrlenW(x)
		push	eax		; c
		push	ebx		; lpString
		push	[ebp+y]		; y
		push	edi		; x
		push	[ebp+hdc]	; hdc
		call	ds:__imp__TextOutW@20 ;	TextOutW(x,x,x,x,x)

loc_1006764:				; CODE XREF: PrintHeaderFooter(x,x)+D3j
		xor	eax, eax
		inc	eax
		pop	edi

loc_1006768:				; CODE XREF: PrintHeaderFooter(x,x)+21j
		pop	esi
		pop	ebx
		leave
		retn	8
_PrintHeaderFooter@8 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall NpPrintGivenDC(x)
_NpPrintGivenDC@4 proc near		; CODE XREF: NpPrint(x)+45p

tm		= tagTEXTMETRICW ptr -3C8h
dtp		= tagDRAWTEXTPARAMS ptr	-38Ch
var_378		= dword	ptr -378h
var_374		= dword	ptr -374h
var_370		= dword	ptr -370h
var_36C		= dword	ptr -36Ch
var_368		= dword	ptr -368h
rc		= tagRECT ptr -364h
hMem		= dword	ptr -354h
var_350		= dword	ptr -350h
ho		= dword	ptr -34Ch
Locale		= dword	ptr -348h
var_344		= dword	ptr -344h
h		= dword	ptr -340h
lpchText	= dword	ptr -33Ch
hdc		= dword	ptr -338h
lf		= LOGFONTW ptr -334h
String		= word ptr -2D8h
Dest		= word ptr -0D0h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 3C8h
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		mov	esi, [ebp+arg_0]
		xor	ebx, ebx
		push	edi
		push	_hWaitCursor	; hCursor
		mov	[ebp+var_4], eax
		mov	[ebp+hdc], esi
		mov	[ebp+hMem], ebx
		mov	[ebp+h], ebx
		mov	[ebp+var_344], ebx
		mov	[ebp+var_350], ebx
		mov	[ebp+lpchText],	ebx
		mov	_fAbort, ebx
		mov	_hAbortDlgWnd, ebx
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		push	esi		; hdc
		call	_GetResolutions@4 ; GetResolutions(x)
		mov	esi, offset _PrintTime
		push	esi		; lpSystemTime
		call	ds:__imp__GetLocalTime@4 ; GetLocalTime(x)
		call	ds:__imp__GetUserDefaultLCID@0 ; GetUserDefaultLCID()
		mov	edi, 104h
		push	edi		; cchDate
		push	offset _szFormattedDate	; lpDateStr
		push	ebx		; lpFormat
		push	esi		; lpDate
		push	2		; dwFlags
		push	eax		; Locale
		mov	[ebp+Locale], eax
		call	ds:__imp__GetDateFormatW@24 ; GetDateFormatW(x,x,x,x,x,x)
		push	edi		; cchTime
		push	offset _szFormattedTime	; lpTimeStr
		push	ebx		; lpFormat
		push	esi		; lpTime
		push	ebx		; dwFlags
		push	[ebp+Locale]	; Locale
		call	ds:__imp__GetTimeFormatW@24 ; GetTimeFormatW(x,x,x,x,x,x)
		mov	eax, _yPixInch
		imul	eax, _iPointSize
		push	17h
		pop	ecx
		mov	esi, offset _FontStruct
		lea	edi, [ebp+lf]
		rep movsd
		cdq
		mov	ecx, 0FFFFFD30h
		idiv	ecx
		push	8		; iMode
		push	[ebp+hdc]	; hdc
		mov	[ebp+lf.lfWidth], ebx
		mov	ebx, ds:__imp__SetMapMode@8 ; SetMapMode(x,x)
		mov	[ebp+lf.lfHeight], eax
		call	ebx ; SetMapMode(x,x) ;	SetMapMode(x,x)
		push	0		; lpsz
		push	_yPhysRes	; y
		push	_xPhysRes	; x
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SetViewportExtEx@16 ;	SetViewportExtEx(x,x,x,x)
		push	0		; lpsz
		push	_g_PageSetupDlg.ptPaperSize.y ;	y
		push	_g_PageSetupDlg.ptPaperSize.x ;	x
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SetWindowExtEx@16 ; SetWindowExtEx(x,x,x,x)
		mov	eax, offset _rtMargin
		mov	edi, eax
		mov	esi, offset _g_PageSetupDlg.rtMargin
		movsd
		movsd
		movsd
		push	2		; c
		movsd
		mov	esi, [ebp+hdc]
		push	eax		; lppt
		push	esi		; hdc
		call	ds:__imp__LPtoDP@12 ; LPtoDP(x,x,x)
		xor	edi, edi
		inc	edi
		push	edi		; iMode
		push	esi		; hdc
		call	ebx ; SetMapMode(x,x) ;	SetMapMode(x,x)
		mov	ebx, ds:__imp__CreateFontIndirectW@4 ; CreateFontIndirectW(x)
		lea	eax, [ebp+lf]
		push	eax		; lplf
		call	ebx ; CreateFontIndirectW(x) ; CreateFontIndirectW(x)
		test	eax, eax
		mov	[ebp+ho], eax
		jz	loc_1006D94
		push	eax		; h
		push	esi		; hdc
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		test	eax, eax
		mov	[ebp+h], eax
		jz	loc_1006D94
		push	edi		; mode
		push	esi		; hdc
		call	ds:__imp__SetBkMode@8 ;	SetBkMode(x,x)
		lea	eax, [ebp+tm]
		push	eax		; lptm
		push	esi		; hdc
		mov	esi, ds:__imp__GetTextMetricsW@8 ; GetTextMetricsW(x,x)
		call	esi ; GetTextMetricsW(x,x) ; GetTextMetricsW(x,x)
		test	eax, eax
		jz	loc_1006D94
		test	[ebp+tm.tmPitchAndFamily], 6
		jnz	short loc_100697C
		push	[ebp+h]		; h
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		push	eax		; ho
		call	ds:__imp__DeleteObject@4 ; DeleteObject(x)
		push	10h
		pop	ecx
		xor	eax, eax
		lea	edi, [ebp+lf.lfFaceName]
		rep stosd
		lea	eax, [ebp+lf]
		push	eax		; lplf
		call	ebx ; CreateFontIndirectW(x) ; CreateFontIndirectW(x)
		test	eax, eax
		mov	[ebp+ho], eax
		jz	loc_1006D94
		push	eax		; h
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		test	eax, eax
		mov	[ebp+h], eax
		jz	loc_1006D94
		lea	eax, [ebp+tm]
		push	eax		; lptm
		push	[ebp+hdc]	; hdc
		call	esi ; GetTextMetricsW(x,x) ; GetTextMetricsW(x,x)
		test	eax, eax
		jz	loc_1006D94
		xor	edi, edi
		inc	edi

loc_100697C:				; CODE XREF: NpPrintGivenDC(x)+195j
		mov	eax, [ebp+tm.tmHeight]
		mov	ecx, [ebp+tm.tmExternalLeading]
		mov	edx, _rtMargin.x
		add	ecx, eax
		mov	eax, [ebp+tm.tmAveCharWidth]
		shl	eax, 3
		mov	_tabSize, eax
		mov	eax, _xPhysOff
		sub	edx, eax
		xor	ebx, ebx
		cmp	edx, ebx
		mov	_yPrintChar, ecx
		mov	_dxLeft, edx
		jg	short loc_10069BD
		mov	_dxLeft, ebx

loc_10069BD:				; CODE XREF: NpPrintGivenDC(x)+242j
		mov	edx, _xPrintRes
		sub	edx, _xPhysRes
		add	edx, dword_100A128
		add	eax, edx
		cmp	eax, ebx
		mov	_dxRight, eax
		jg	short loc_10069E0
		mov	_dxRight, ebx

loc_10069E0:				; CODE XREF: NpPrintGivenDC(x)+265j
		mov	eax, _rtMargin.y
		mov	edx, _yPhysOff
		sub	eax, edx
		cmp	eax, ebx
		mov	_dyTop,	eax
		jg	short loc_10069FC
		mov	_dyTop,	ebx

loc_10069FC:				; CODE XREF: NpPrintGivenDC(x)+281j
		mov	eax, _yPrintRes
		mov	esi, eax
		sub	esi, _yPhysRes
		add	esi, dword_100A12C
		add	edx, esi
		cmp	edx, ebx
		mov	_dyBottom, edx
		jg	short loc_1006A21
		mov	_dyBottom, ebx

loc_1006A21:				; CODE XREF: NpPrintGivenDC(x)+2A6j
		sub	eax, _dyBottom
		sub	eax, _dyTop
		cdq
		idiv	ecx
		cmp	_chPageText, bx
		jz	short loc_1006A3A
		dec	eax

loc_1006A3A:				; CODE XREF: NpPrintGivenDC(x)+2C4j
		cmp	String1, bx
		jz	short loc_1006A44
		dec	eax

loc_1006A44:				; CODE XREF: NpPrintGivenDC(x)+2CEj
		cmp	eax, ebx
		jle	loc_1006D73
		push	offset _AbortProc@8 ; proc
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SetAbortProc@8 ; SetAbortProc(x,x)
		mov	esi, eax
		cmp	esi, ebx
		jl	loc_1006CF5
		push	ebx		; lParam
		push	ebx		; wParam
		push	0BDh		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		cmp	eax, ebx
		mov	[ebp+hMem], eax
		jz	loc_1006D94
		push	eax		; hMem
		call	ds:__imp__LocalLock@4 ;	LocalLock(x)
		cmp	eax, ebx
		mov	[ebp+lpchText],	eax
		jz	loc_1006D94
		push	104h		; nMaxCount
		lea	eax, [ebp+String]
		push	eax		; lpString
		push	_hwndNP		; hWnd
		call	ds:__imp__GetWindowTextW@12 ; GetWindowTextW(x,x,x)
		push	ebx		; bEnable
		push	_hwndNP		; hWnd
		call	ds:__imp__EnableWindow@8 ; EnableWindow(x,x)
		push	ebx		; dwInitParam
		push	offset _AbortDlgProc@16	; lpDialogFunc
		push	_hwndNP		; hWndParent
		push	0Bh		; lpTemplateName
		push	_hInstanceNP	; hInstance
		call	ds:__imp__CreateDialogParamW@20	; CreateDialogParamW(x,x,x,x,x)
		cmp	eax, ebx
		mov	_hAbortDlgWnd, eax
		jz	loc_1006D94
		lea	eax, [ebp+String]
		push	ebx		; dwErrCode
		mov	[ebp+var_378], 14h
		mov	[ebp+var_374], eax
		mov	[ebp+var_370], ebx
		mov	[ebp+var_36C], ebx
		mov	[ebp+var_368], ebx
		call	ds:__imp__SetLastError@4 ; SetLastError(x)
		lea	eax, [ebp+var_378]
		push	eax		; lpdi
		push	[ebp+hdc]	; hdc
		call	ds:__imp__StartDocW@8 ;	StartDocW(x,x)
		test	eax, eax
		jg	short loc_1006B3C
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax
		jmp	loc_1006CF5
; ---------------------------------------------------------------------------

loc_1006B3C:				; CODE XREF: NpPrintGivenDC(x)+3BAj
		xor	eax, eax
		mov	[ebp+var_350], edi
		mov	_iPageNum, edi
		lea	edi, [ebp+rc]
		stosd
		stosd
		stosd
		mov	ecx, _yPrintChar
		stosd
		mov	eax, _dxLeft
		mov	[ebp+rc.left], eax
		mov	eax, _xPrintRes
		sub	eax, _dxRight
		xor	esi, esi
		mov	[ebp+rc.right],	eax
		mov	eax, _dyTop
		mov	[ebp+rc.top], eax
		mov	eax, _yPrintRes
		sub	eax, _dyBottom
		cmp	_chPageText, si
		mov	[ebp+Locale], ebx
		mov	[ebp+var_344], ebx
		mov	[ebp+rc.bottom], eax
		jz	short loc_1006BAF
		add	[ebp+rc.top], ecx

loc_1006BAF:				; CODE XREF: NpPrintGivenDC(x)+434j
		cmp	String1, si
		jz	short loc_1006BC0
		sub	eax, ecx
		mov	[ebp+rc.bottom], eax

loc_1006BC0:				; CODE XREF: NpPrintGivenDC(x)+443j
		push	[ebp+lpchText]	; lpString
		call	ds:__imp__lstrlenW@4 ; lstrlenW(x)
		push	0FFFFFFECh	; nIndex
		push	_hwndEdit	; hWnd
		mov	ebx, eax
		call	ds:__imp__GetWindowLongW@8 ; GetWindowLongW(x,x)
		test	ah, 20h
		jz	short loc_1006BEB
		mov	[ebp+Locale], 20002h

loc_1006BEB:				; CODE XREF: NpPrintGivenDC(x)+46Cj
		cmp	_fAbort, esi
		jnz	loc_1006CF1

loc_1006BF7:				; CODE XREF: NpPrintGivenDC(x)+578j
		test	ebx, ebx
		jle	loc_1006CF1
		push	_iPageNum
		lea	eax, [ebp+Dest]
		push	_szCurrentPage	; Format
		push	64h		; Count
		push	eax		; Dest
		call	ds:__imp___snwprintf
		add	esp, 10h
		lea	eax, [ebp+Dest]
		push	eax		; lpString
		push	15h		; nIDDlgItem
		push	_hAbortDlgWnd	; hDlg
		call	ds:__imp__SetDlgItemTextW@12 ; SetDlgItemTextW(x,x,x)
		mov	esi, [ebp+hdc]
		push	0		; y
		push	esi		; hdc
		call	_PrintHeaderFooter@8 ; PrintHeaderFooter(x,x)
		xor	eax, eax
		lea	edi, [ebp+dtp]
		stosd
		stosd
		stosd
		stosd
		stosd
		mov	eax, _tabSize
		push	esi		; hdc
		mov	[ebp+dtp.cbSize], 14h
		mov	[ebp+dtp.iTabLength], eax
		call	ds:__imp__StartPage@4 ;	StartPage(x)
		test	eax, eax
		jle	loc_1006D94
		lea	eax, [ebp+dtp]
		push	eax		; lpdtp
		mov	eax, [ebp+Locale]
		or	eax, 2850h
		push	eax		; format
		lea	eax, [ebp+rc]
		push	eax		; lprc
		push	ebx		; cchText
		push	[ebp+lpchText]	; lpchText
		xor	edi, edi
		inc	edi
		push	esi		; hdc
		mov	[ebp+var_344], edi
		call	ds:__imp__DrawTextExW@24 ; DrawTextExW(x,x,x,x,x,x)
		push	edi		; y
		push	esi		; hdc
		call	_PrintHeaderFooter@8 ; PrintHeaderFooter(x,x)
		push	esi		; hdc
		call	ds:__imp__EndPage@4 ; EndPage(x)
		test	eax, eax
		jle	loc_1006D94
		and	[ebp+var_344], 0
		mov	eax, [ebp+dtp.uiLengthDrawn]
		inc	_iPageNum
		test	eax, eax
		jz	loc_1006D71
		mov	ecx, [ebp+lpchText]
		lea	ecx, [ecx+eax*2]
		sub	ebx, eax
		cmp	_fAbort, 0
		mov	[ebp+lpchText],	ecx
		jz	loc_1006BF7

loc_1006CF1:				; CODE XREF: NpPrintGivenDC(x)+47Ej
					; NpPrintGivenDC(x)+486j
		xor	esi, esi

loc_1006CF3:				; CODE XREF: NpPrintGivenDC(x)+629j
		xor	ebx, ebx

loc_1006CF5:				; CODE XREF: NpPrintGivenDC(x)+2EEj
					; NpPrintGivenDC(x)+3C4j
		cmp	[ebp+h], ebx
		jz	short loc_1006D1B
		push	[ebp+h]		; h
		push	[ebp+hdc]	; hdc
		call	ds:__imp__SelectObject@8 ; SelectObject(x,x)
		push	[ebp+ho]	; ho
		call	ds:__imp__DeleteObject@4 ; DeleteObject(x)

loc_1006D1B:				; CODE XREF: NpPrintGivenDC(x)+588j
		cmp	[ebp+lpchText],	ebx
		jz	short loc_1006D2F
		push	[ebp+hMem]	; hMem
		call	ds:__imp__LocalUnlock@4	; LocalUnlock(x)

loc_1006D2F:				; CODE XREF: NpPrintGivenDC(x)+5AEj
		cmp	[ebp+var_344], ebx
		jz	short loc_1006D53
		push	[ebp+hdc]	; hdc
		call	ds:__imp__EndPage@4 ; EndPage(x)
		test	eax, eax
		jg	short loc_1006D53
		cmp	esi, ebx
		jnz	short loc_1006D53
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax

loc_1006D53:				; CODE XREF: NpPrintGivenDC(x)+5C2j
					; NpPrintGivenDC(x)+5D2j ...
		cmp	[ebp+var_350], ebx
		jz	short loc_1006DB7
		cmp	_fAbort, ebx
		push	[ebp+hdc]	; hdc
		jz	short loc_1006DA1
		call	ds:__imp__AbortDoc@4 ; AbortDoc(x)
		jmp	short loc_1006DB7
; ---------------------------------------------------------------------------

loc_1006D71:				; CODE XREF: NpPrintGivenDC(x)+55Aj
		xor	ebx, ebx

loc_1006D73:				; CODE XREF: NpPrintGivenDC(x)+2D3j
		push	30h		; uType
		push	_szNN		; lpCaption
		push	_szFontTooBig	; lpText
		push	_hwndNP		; hWnd
		call	ds:__imp__MessageBoxW@16 ; MessageBoxW(x,x,x,x)
		push	ebx		; dwErrCode
		call	ds:__imp__SetLastError@4 ; SetLastError(x)

loc_1006D94:				; CODE XREF: NpPrintGivenDC(x)+152j
					; NpPrintGivenDC(x)+168j ...
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax
		jmp	loc_1006CF3
; ---------------------------------------------------------------------------

loc_1006DA1:				; CODE XREF: NpPrintGivenDC(x)+5F4j
		call	ds:__imp__EndDoc@4 ; EndDoc(x)
		test	eax, eax
		jg	short loc_1006DB7
		cmp	esi, ebx
		jnz	short loc_1006DB7
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax

loc_1006DB7:				; CODE XREF: NpPrintGivenDC(x)+5E6j
					; NpPrintGivenDC(x)+5FCj ...
		push	[ebp+hdc]	; hdc
		call	ds:__imp__DeleteDC@4 ; DeleteDC(x)
		call	_DestroyAbortWnd@0 ; DestroyAbortWnd()
		push	_hStdCursor	; hCursor
		call	ds:__imp__SetCursor@4 ;	SetCursor(x)
		cmp	_fAbort, ebx
		jnz	short loc_1006DE0
		mov	eax, esi
		jmp	short loc_1006DE3
; ---------------------------------------------------------------------------

loc_1006DE0:				; CODE XREF: NpPrintGivenDC(x)+667j
		push	0FFFFFFFDh
		pop	eax

loc_1006DE3:				; CODE XREF: NpPrintGivenDC(x)+66Bj
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_NpPrintGivenDC@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall NpPrint(x)
_NpPrint@4	proc near		; CODE XREF: PrintIt(x)+17p

arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		push	_hWaitCursor	; hCursor
		mov	esi, ds:__imp__SetCursor@4 ; SetCursor(x)
		call	esi ; SetCursor(x) ; SetCursor(x)
		mov	eax, [ebp+arg_0]
		sub	eax, 0
		jz	short loc_1006E25
		dec	eax
		dec	eax
		jz	short loc_1006E1E
		call	_GetPrinterDC@0	; GetPrinterDC()
		jmp	short loc_1006E2A
; ---------------------------------------------------------------------------

loc_1006E1E:				; CODE XREF: NpPrint(x)+1Ej
		call	_GetNonDefPrinterDC@0 ;	GetNonDefPrinterDC()
		jmp	short loc_1006E2A
; ---------------------------------------------------------------------------

loc_1006E25:				; CODE XREF: NpPrint(x)+1Aj
		call	_GetPrinterDCviaDialog@0 ; GetPrinterDCviaDialog()

loc_1006E2A:				; CODE XREF: NpPrint(x)+25j
					; NpPrint(x)+2Cj
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_1006E3B
		push	_hStdCursor	; hCursor
		call	esi ; SetCursor(x) ; SetCursor(x)
		xor	eax, eax
		jmp	short loc_1006E41
; ---------------------------------------------------------------------------

loc_1006E3B:				; CODE XREF: NpPrint(x)+36j
		push	eax
		call	_NpPrintGivenDC@4 ; NpPrintGivenDC(x)

loc_1006E41:				; CODE XREF: NpPrint(x)+42j
		pop	esi
		pop	ebp
		retn	4
_NpPrint@4	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall PrintIt(x)
_PrintIt@4	proc near		; CODE XREF: NPCommand(x,x,x)+319p
					; ProcessShellOptions(x,x):loc_1004441p

Buffer		= word ptr -324h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 324h
		mov	eax, ___security_cookie
		push	esi
		push	[ebp+arg_0]
		mov	[ebp+var_4], eax
		call	_NpPrint@4	; NpPrint(x)
		mov	esi, eax
		test	esi, esi
		jz	loc_1006EFE
		cmp	esi, 0FFFFFFFEh
		jz	loc_1006EFE
		cmp	esi, 0FFFFFFFDh
		jz	short loc_1006EFE
		cmp	esi, 0FFFFFFFCh
		jnz	short loc_1006E87
		push	70h
		pop	esi

loc_1006E87:				; CODE XREF: PrintIt(x)+37j
		cmp	esi, 0FFFFFFFBh
		jnz	short loc_1006E8F
		push	0Eh
		pop	esi

loc_1006E8F:				; CODE XREF: PrintIt(x)+3Fj
		cmp	esi, 0FFFFFFFFh
		jnz	short loc_1006E9C
		call	ds:__imp__GetLastError@0 ; GetLastError()
		mov	esi, eax

loc_1006E9C:				; CODE XREF: PrintIt(x)+47j
		test	esi, esi
		jz	short loc_1006EFE
		push	0		; Arguments
		push	190h		; nSize
		lea	eax, [ebp+Buffer]
		push	eax		; lpBuffer
		call	ds:__imp__GetUserDefaultUILanguage@0 ; GetUserDefaultUILanguage()
		movzx	eax, ax
		push	eax		; dwLanguageId
		push	esi		; dwMessageId
		push	0		; lpSource
		push	1200h		; dwFlags
		call	ds:__imp__FormatMessageW@28 ; FormatMessageW(x,x,x,x,x,x,x)
		test	eax, eax
		mov	ecx, _szCP
		jz	short loc_1006ED6
		lea	ecx, [ebp+Buffer]

loc_1006ED6:				; CODE XREF: PrintIt(x)+83j
		cmp	_fUntitled, 0
		mov	eax, _szUntitled
		jnz	short loc_1006EE9
		mov	eax, offset _szFileName

loc_1006EE9:				; CODE XREF: PrintIt(x)+97j
		push	30h		; uType
		push	eax		; lpString
		push	ecx		; lpText
		push	_szNN		; lpCaption
		push	_hwndNP		; hWnd
		call	_AlertBox@20	; AlertBox(x,x,x,x,x)

loc_1006EFE:				; CODE XREF: PrintIt(x)+20j
					; PrintIt(x)+29j ...
		mov	ecx, [ebp+var_4]
		pop	esi
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_PrintIt@4	endp

; ---------------------------------------------------------------------------
		align 10h

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall InsertDateTime(x)
_InsertDateTime@4 proc near		; CODE XREF: NPCommand(x,x,x)+488p
					; LoadFile(x,x)+5EEp

SystemTime	= _SYSTEMTIME ptr -3E8h
DateStr		= word ptr -3D8h
String2		= word ptr -338h
lParam		= word ptr -298h
var_296		= byte ptr -296h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 3E8h
		mov	eax, ___security_cookie
		push	ebx
		push	esi
		push	edi
		mov	[ebp+var_4], eax
		xor	ebx, ebx
		mov	[ebp+lParam], bx
		xor	eax, eax
		mov	ecx, 0A4h
		lea	edi, [ebp+var_296]
		rep stosd
		xor	esi, esi
		stosw
		inc	esi
		mov	edi, esi
		call	ds:__imp__GetUserDefaultLCID@0 ; GetUserDefaultLCID()
		and	eax, 3FFh
		cmp	ax, si
		jz	short loc_1006F5D
		cmp	ax, 0Dh
		jz	short loc_1006F5D
		xor	esi, esi

loc_1006F5D:				; CODE XREF: InsertDateTime(x)+43j
					; InsertDateTime(x)+49j
		lea	eax, [ebp+SystemTime]
		push	eax		; lpSystemTime
		call	ds:__imp__GetLocalTime@4 ; GetLocalTime(x)
		cmp	esi, ebx
		mov	esi, ds:__imp__lstrcatW@8 ; lstrcatW(x,x)
		jz	short loc_1006FA2
		push	0FFFFFFECh	; nIndex
		push	_hwndEdit	; hWnd
		call	ds:__imp__GetWindowLongW@8 ; GetWindowLongW(x,x)
		test	ah, 20h
		lea	eax, [ebp+lParam]
		jz	short loc_1006F97
		push	21h
		pop	edi
		push	offset dword_1001844
		jmp	short loc_1006F9F
; ---------------------------------------------------------------------------

loc_1006F97:				; CODE XREF: InsertDateTime(x)+7Bj
		push	11h
		pop	edi
		push	offset word_1001840 ; lpString2

loc_1006F9F:				; CODE XREF: InsertDateTime(x)+85j
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)

loc_1006FA2:				; CODE XREF: InsertDateTime(x)+62j
		push	50h		; cchDate
		lea	eax, [ebp+DateStr]
		push	eax		; lpDateStr
		push	ebx		; lpFormat
		lea	eax, [ebp+SystemTime]
		push	eax		; lpDate
		push	edi		; dwFlags
		mov	edi, 400h
		push	edi		; Locale
		call	ds:__imp__GetDateFormatW@24 ; GetDateFormatW(x,x,x,x,x,x)
		push	50h		; cchTime
		lea	eax, [ebp+String2]
		push	eax		; lpTimeStr
		push	ebx		; lpFormat
		lea	eax, [ebp+SystemTime]
		push	eax		; lpTime
		push	2		; dwFlags
		push	edi		; Locale
		call	ds:__imp__GetTimeFormatW@24 ; GetTimeFormatW(x,x,x,x,x,x)
		cmp	[ebp+arg_0], ebx
		mov	edi, offset asc_1001838	; "\r\n"
		jz	short loc_1006FEE
		push	edi		; lpString2
		lea	eax, [ebp+lParam]
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)

loc_1006FEE:				; CODE XREF: InsertDateTime(x)+D2j
		lea	eax, [ebp+String2]
		push	eax		; lpString2
		lea	eax, [ebp+lParam]
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)
		push	offset asc_1001834 ; " "
		lea	eax, [ebp+lParam]
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)
		lea	eax, [ebp+DateStr]
		push	eax		; lpString2
		lea	eax, [ebp+lParam]
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)
		cmp	[ebp+arg_0], ebx
		jz	short loc_100702B
		push	edi		; lpString2
		lea	eax, [ebp+lParam]
		push	eax		; lpString1
		call	esi ; lstrcatW(x,x) ; lstrcatW(x,x)

loc_100702B:				; CODE XREF: InsertDateTime(x)+10Fj
		lea	eax, [ebp+lParam]
		push	eax		; lParam
		push	1		; wParam
		push	0C2h		; Msg
		push	_hwndEdit	; hWnd
		call	ds:__imp__SendMessageW@16 ; SendMessageW(x,x,x,x)
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	4
_InsertDateTime@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; __stdcall IsTextUTF8(x, x)
_IsTextUTF8@8	proc near		; CODE XREF: fDetermineFileType(x,x)+41p
					; LoadFile(x,x)+1DFp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	esi
		xor	esi, esi
		xor	ecx, ecx
		inc	esi
		xor	edx, edx
		cmp	[ebp+arg_4], ecx
		jle	short loc_10070A0

loc_100706B:				; CODE XREF: IsTextUTF8(x,x)+3Dj
		mov	eax, [ebp+arg_0]
		mov	al, [ecx+eax]
		test	al, al
		jns	short loc_1007077
		xor	esi, esi

loc_1007077:				; CODE XREF: IsTextUTF8(x,x)+1Aj
		test	edx, edx
		jnz	short loc_100708B
		cmp	al, 80h
		jb	short loc_1007092

loc_100707F:				; CODE XREF: IsTextUTF8(x,x)+2Bj
		shl	al, 1
		inc	edx
		test	al, al
		js	short loc_100707F
		dec	edx
		jz	short loc_10070A0
		jmp	short loc_1007092
; ---------------------------------------------------------------------------

loc_100708B:				; CODE XREF: IsTextUTF8(x,x)+20j
		and	al, 0C0h
		cmp	al, 80h
		jnz	short loc_10070A0
		dec	edx

loc_1007092:				; CODE XREF: IsTextUTF8(x,x)+24j
					; IsTextUTF8(x,x)+30j
		inc	ecx
		cmp	ecx, [ebp+arg_4]
		jl	short loc_100706B
		test	edx, edx
		ja	short loc_10070A0
		test	esi, esi
		jz	short loc_10070A4

loc_10070A0:				; CODE XREF: IsTextUTF8(x,x)+10j
					; IsTextUTF8(x,x)+2Ej ...
		xor	eax, eax
		jmp	short loc_10070A7
; ---------------------------------------------------------------------------

loc_10070A4:				; CODE XREF: IsTextUTF8(x,x)+45j
		xor	eax, eax
		inc	eax

loc_10070A7:				; CODE XREF: IsTextUTF8(x,x)+49j
		pop	esi
		pop	ebp
		retn	8
_IsTextUTF8@8	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	IsInputTextUnicode(void	*lpv, int iSize)
_IsInputTextUnicode@8 proc near		; CODE XREF: fDetermineFileType(x,x)+31p
					; LoadFile(x,x)+1BBp

iResult		= dword	ptr -4
lpv		= dword	ptr  8
iSize		= dword	ptr  0Ch

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		or	[ebp+iResult], 0FFFFFFFFh
		lea	eax, [ebp+iResult]
		push	eax		; lpiResult
		push	[ebp+iSize]	; iSize
		push	[ebp+lpv]	; lpv
		call	ds:__imp__IsTextUnicode@12 ; IsTextUnicode(x,x,x)
		leave
		retn	8
_IsInputTextUnicode@8 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

___security_init_cookie	proc near	; DATA XREF: .data:01009004o

PerformanceCount= LARGE_INTEGER	ptr -10h
SystemTimeAsFileTime= _FILETIME	ptr -8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 10h
		mov	eax, ___security_cookie
		test	eax, eax
		jz	short loc_10070EC
		cmp	eax, 0BB40h
		jnz	short loc_1007139

loc_10070EC:				; CODE XREF: ___security_init_cookie+Fj
		push	esi
		lea	eax, [ebp+SystemTimeAsFileTime]
		push	eax		; lpSystemTimeAsFileTime
		call	ds:__imp__GetSystemTimeAsFileTime@4 ; GetSystemTimeAsFileTime(x)
		mov	esi, [ebp+SystemTimeAsFileTime.dwHighDateTime]
		xor	esi, [ebp+SystemTimeAsFileTime.dwLowDateTime]
		call	ds:__imp__GetCurrentProcessId@0	; GetCurrentProcessId()
		xor	esi, eax
		call	ds:__imp__GetCurrentThreadId@0 ; GetCurrentThreadId()
		xor	esi, eax
		call	ds:__imp__GetTickCount@0 ; GetTickCount()
		xor	esi, eax
		lea	eax, [ebp+PerformanceCount]
		push	eax		; lpPerformanceCount
		call	ds:__imp__QueryPerformanceCounter@4 ; QueryPerformanceCounter(x)
		mov	eax, dword ptr [ebp+PerformanceCount+4]
		xor	eax, dword ptr [ebp+PerformanceCount]
		xor	eax, esi
		and	eax, 0FFFFh
		pop	esi
		jnz	short loc_1007134
		mov	eax, 0BB40h

loc_1007134:				; CODE XREF: ___security_init_cookie+59j
		mov	___security_cookie, eax

loc_1007139:				; CODE XREF: ___security_init_cookie+16j
		not	eax
		mov	___security_cookie_complement, eax
		leave
		retn
___security_init_cookie	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


; __fastcall __security_check_cookie(x)
@__security_check_cookie@4 proc	near	; CODE XREF: UpdateStatusBar(x)+CCp
					; SignalCommDlgError()+83p ...
		cmp	ecx, ___security_cookie
		jnz	short loc_1007158
		test	ecx, 0FFFF0000h
		jnz	short loc_1007158
		retn
; ---------------------------------------------------------------------------

loc_1007158:				; CODE XREF: __security_check_cookie(x)+6j
					; __security_check_cookie(x)+Ej
		jmp	___report_gsfailure
@__security_check_cookie@4 endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

___report_gsfailure proc near		; CODE XREF: __security_check_cookie(x):loc_1007158j

var_330		= dword	ptr -330h
var_324		= dword	ptr -324h
var_2E0		= dword	ptr -2E0h
var_2DC		= dword	ptr -2DCh
var_2D8		= dword	ptr -2D8h
var_24C		= word ptr -24Ch
var_248		= word ptr -248h
var_244		= word ptr -244h
var_240		= word ptr -240h
var_23C		= dword	ptr -23Ch
var_238		= dword	ptr -238h
var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_22C		= dword	ptr -22Ch
var_228		= dword	ptr -228h
var_224		= dword	ptr -224h
var_220		= dword	ptr -220h
var_21C		= word ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= word ptr -210h
ExceptionInfo	= _EXCEPTION_POINTERS ptr -8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 330h
		push	edi
		mov	[ebp+var_228], eax
		mov	[ebp+var_22C], ecx
		mov	[ebp+var_230], edx
		mov	[ebp+var_234], ebx
		mov	[ebp+var_238], esi
		mov	[ebp+var_23C], edi
		mov	[ebp+var_210], ss
		mov	[ebp+var_21C], cs
		mov	[ebp+var_240], ds
		mov	[ebp+var_244], es
		mov	[ebp+var_248], fs
		mov	[ebp+var_24C], gs
		pushf
		pop	[ebp+var_218]
		mov	[ebp+var_2D8], 10001h
		mov	eax, [ebp+4]
		mov	[ebp+var_220], eax
		lea	eax, [ebp+4]
		mov	[ebp+var_214], eax
		lea	eax, [ebp+4]
		mov	eax, [eax-4]
		mov	[ebp+var_224], eax
		push	14h
		pop	ecx
		xor	eax, eax
		lea	edi, [ebp+var_330]
		rep stosd
		mov	[ebp+var_330], 0C0000409h
		mov	eax, [ebp+4]
		mov	[ebp+var_324], eax
		lea	eax, [ebp+var_330]
		mov	[ebp+ExceptionInfo.ExceptionRecord], eax
		lea	eax, [ebp+var_2D8]
		mov	[ebp+ExceptionInfo.ContextRecord], eax
		mov	eax, ___security_cookie
		mov	[ebp+var_2E0], eax
		mov	eax, ___security_cookie_complement
		mov	[ebp+var_2DC], eax
		push	0		; lpTopLevelExceptionFilter
		call	ds:__imp__SetUnhandledExceptionFilter@4	; SetUnhandledExceptionFilter(x)
		lea	eax, [ebp+ExceptionInfo]
		push	eax		; ExceptionInfo
		call	ds:__imp__UnhandledExceptionFilter@4 ; UnhandledExceptionFilter(x)
		push	502h		; uExitCode
		call	ds:__imp__GetCurrentProcess@0 ;	GetCurrentProcess()
		push	eax		; hProcess
		call	ds:__imp__TerminateProcess@8 ; TerminateProcess(x,x)
		pop	edi
		leave
		retn
___report_gsfailure endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_100725F(LPBYTE lpData)
sub_100725F	proc near		; CODE XREF: HtmlHelpA(x,x,x,x)+35p

cbData		= dword	ptr -8
hKey		= dword	ptr -4
lpData		= dword	ptr  8

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		push	ecx
		push	ecx
		push	esi
		lea	eax, [ebp+hKey]
		push	eax		; phkResult
		push	20019h		; samDesired
		xor	esi, esi
		push	esi		; ulOptions
		push	offset aClsidAdb880a6D ; "CLSID\\{ADB880A6-D8FF-11CF-9377-00AA003B"...
		push	80000000h	; hKey
		call	ds:__imp__RegOpenKeyExA@20 ; RegOpenKeyExA(x,x,x,x,x)
		test	eax, eax
		jnz	short loc_10072B7
		lea	eax, [ebp+cbData]
		push	eax		; lpcbData
		push	[ebp+lpData]	; lpData
		mov	[ebp+cbData], 104h
		push	esi		; lpType
		push	esi		; lpReserved
		push	offset ValueName ; lpValueName
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegQueryValueExA@24 ;	RegQueryValueExA(x,x,x,x,x,x)
		test	eax, eax
		jnz	short loc_10072AA
		inc	esi

loc_10072AA:				; CODE XREF: sub_100725F+48j
		push	[ebp+hKey]	; hKey
		call	ds:__imp__RegCloseKey@4	; RegCloseKey(x)
		mov	eax, esi
		jmp	short loc_10072B9
; ---------------------------------------------------------------------------

loc_10072B7:				; CODE XREF: sub_100725F+26j
		xor	eax, eax

loc_10072B9:				; CODE XREF: sub_100725F+56j
		pop	esi
		leave
		retn	4
sub_100725F	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; HWND __stdcall HtmlHelpA(HWND	hwndCaller, LPCSTR pszFile, UINT uCommand, DWORD_PTR dwData)
_HtmlHelpA@16	proc near		; CODE XREF: NPCommand(x,x,x)+735p

Data		= byte ptr -108h
var_4		= dword	ptr -4
hwndCaller	= dword	ptr  8
pszFile		= dword	ptr  0Ch
uCommand	= dword	ptr  10h
dwData		= dword	ptr  14h

		mov	edi, edi
		push	ebp
		mov	ebp, esp
		sub	esp, 108h
		mov	ecx, hModule
		test	ecx, ecx
		mov	eax, ___security_cookie
		push	ebx
		mov	ebx, [ebp+pszFile]
		push	esi
		push	edi
		mov	edi, [ebp+hwndCaller]
		mov	[ebp+var_4], eax
		jnz	short loc_1007332
		cmp	dword_1009AA4, ecx
		jnz	short loc_1007332
		lea	eax, [ebp+Data]
		push	eax		; lpData
		call	sub_100725F
		test	eax, eax
		mov	esi, ds:__imp__LoadLibraryA@4 ;	LoadLibraryA(x)
		jz	short loc_1007315
		lea	eax, [ebp+Data]
		push	eax		; lpLibFileName
		call	esi ; LoadLibraryA(x) ;	LoadLibraryA(x)
		mov	hModule, eax

loc_1007315:				; CODE XREF: HtmlHelpA(x,x,x,x)+42j
		mov	ecx, hModule
		test	ecx, ecx
		jnz	short loc_1007332
		push	offset LibFileName ; "hhctrl.ocx"
		call	esi ; LoadLibraryA(x) ;	LoadLibraryA(x)
		mov	ecx, eax
		test	ecx, ecx
		mov	hModule, ecx
		jz	short loc_100734D

loc_1007332:				; CODE XREF: HtmlHelpA(x,x,x,x)+24j
					; HtmlHelpA(x,x,x,x)+2Cj ...
		mov	eax, ?pHtmlHelpA@@3P6GPAUHWND__@@PAU1@PBDIK@ZA ; HWND__	* (*pHtmlHelpA)(HWND__ *,char const *,uint,ulong)
		test	eax, eax
		jnz	short loc_100735B
		push	0Eh		; lpProcName
		push	ecx		; hModule
		call	ds:__imp__GetProcAddress@8 ; GetProcAddress(x,x)
		test	eax, eax
		mov	?pHtmlHelpA@@3P6GPAUHWND__@@PAU1@PBDIK@ZA, eax ; HWND__	* (*pHtmlHelpA)(HWND__ *,char const *,uint,ulong)
		jnz	short loc_100735B

loc_100734D:				; CODE XREF: HtmlHelpA(x,x,x,x)+6Dj
		mov	dword_1009AA4, 1
		xor	eax, eax
		jmp	short loc_1007365
; ---------------------------------------------------------------------------

loc_100735B:				; CODE XREF: HtmlHelpA(x,x,x,x)+76j
					; HtmlHelpA(x,x,x,x)+88j
		push	[ebp+dwData]
		push	[ebp+uCommand]
		push	ebx
		push	edi
		call	eax ; HWND__ * (*pHtmlHelpA)(HWND__ *,char const *,uint,ulong)

loc_1007365:				; CODE XREF: HtmlHelpA(x,x,x,x)+96j
		mov	ecx, [ebp+var_4]
		pop	edi
		pop	esi
		pop	ebx
		call	@__security_check_cookie@4 ; __security_check_cookie(x)
		leave
		retn	10h
_HtmlHelpA@16	endp

; ---------------------------------------------------------------------------
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION ClosePrinter(x). PRESS KEYPAD "+"	TO EXPAND]
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION GetPrinterDriverW(x,x,x,x,x,x). PRESS KEYPAD "+" TO EXPAND]
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION OpenPrinterW(x,x,x). PRESS KEYPAD	"+" TO EXPAND]
		db 5 dup(0CCh)
		assume fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================


		public _WinMainCRTStartup
_WinMainCRTStartup proc	near
		pusha
		call	sub_10073AF
		scasd
		jmp	short near ptr loc_100741F+3
_WinMainCRTStartup endp

; ---------------------------------------------------------------------------
		dw 9A7Eh
		dd 444A2F44h
		db 96h,	48h, 62h

; =============== S U B	R O U T	I N E =======================================


sub_10073AF	proc near		; CODE XREF: _WinMainCRTStartup+1p
		add	edx, 2DE3A74h
		inc	ebx
		jmp	short loc_10073BA
; ---------------------------------------------------------------------------
		pushf

loc_10073BA:				; CODE XREF: sub_10073AF+8j
		mov	esi, ebp
		mov	ah, 0B2h
		pop	eax
		cmp	edx, 70DAh
		shrd	ebp, edi, cl
		bt	ebp, edi
		dec	ebp
		lea	ebp, ds:56CFFCEDh
		jno	short loc_10073E5
		sub	edx, eax
		bsf	ebx, edx
		mov	ebx, ecx
		not	ebx
		btc	ebx, 0C0h
		movzx	ebx, cx

loc_10073E5:				; CODE XREF: sub_10073AF+24j
		add	eax, 131Eh
		not	ebx
		bswap	ebx
		test	ebp, edx
		xchg	ecx, ebx
		bts	ecx, 0EFh
		add	eax, 556Ah
		movzx	ecx, di
		add	eax, 5351h
		bswap	edi
		inc	edi
		add	eax, 8DE6h
		inc	edi
		xadd	ebx, ecx
		mov	ecx, ebp
		sub	eax, 3362h
		xchg	ecx, ebx
		inc	edi
		push	eax

loc_100741F:				; CODE XREF: _WinMainCRTStartup+7j
		imul	ecx, eax, 452A3330h
		xadd	edx, ecx
		or	dl, 39h
		rep bts	ecx, 0D9h
		pop	ebx
		or	dl, 0A9h
		ror	dl, cl
		push	ebx
		xor	ebx, ebp
		test	bh, ah
		movzx	ecx, di
		jno	short loc_1007444
		sub	ebx, eax
		mov	dl, al

loc_1007444:				; CODE XREF: sub_10073AF+8Fj
		add	eax, 1E2C7Ch
		test	ebp, edx
		adc	ecx, 2889BE57h
		not	ebx
		xor	ebx, ecx
		bswap	ecx
		sub	eax, 1E1B66h
		adc	ecx, 68C9FE97h
		imul	ebx, edx
		push	eax
		jmp	short loc_100746B
; ---------------------------------------------------------------------------
		db 88h
; ---------------------------------------------------------------------------

loc_100746B:				; CODE XREF: sub_10073AF+B9j
		shld	ebx, edx, 18h
		pop	edx
		sal	ebx, 0A8h
		sal	ebx, 38h
		btc	ebx, edx
		btc	ebx, edx
		test	edi, 0DDA20BE8h
		push	edx		; lpStartupInfo
		cmp	edx, 0D33764h
		shld	edi, esi, 8Fh
		jbe	short loc_100749B
		xor	edx, eax
		inc	ecx
		bswap	edi
		movzx	edi, bp
		btc	edi, 0CFh

loc_100749B:				; CODE XREF: sub_10073AF+DEj
		sub	eax, 283B50h
		shl	ecx, 1Fh
		mov	ecx, 0A061766Fh
		sal	ebx, 31h
		btc	ebx, 1
		sal	ebx, 1
		add	eax, 282A3Ah
		lea	ecx, ds:5A23E0A1h
		sbb	bh, 85h
		mov	ecx, ebp
		inc	ecx
		push	eax
		shld	ecx, eax, cl
		repne mov ecx, 0C2AB08E9h
		dec	ebp
		shrd	ebp, edi, cl
		pop	ebx
		imul	ebp, edi, 56CFFCEDh
		lea	ecx, ds:0A931091h
		rcr	dh, cl
		sbb	dh, dl
		call	ds:__imp__GetStartupInfoA@4 ; GetStartupInfoA(x)
		mov	[ebp+2], ah
		bsf	edi, esi
		test	eax, 3ED7A4B5h
		sub	edx, ebx
		xor	ebx, ecx
		jmp	locret_10075EE
sub_10073AF	endp ; sp-analysis failed

; ---------------------------------------------------------------------------
		cmp	dword ptr [edx], 0FFFFFFADh
		pop	ecx
		sbb	[esi-0AC8927h],	al
		xlat
		push	eax
		call	_WinMain@16	; WinMain(x,x,x,x)
		mov	esi, eax
		mov	[ebp-3Ch], esi
		cmp	[ebp-1Ch], ebx
		jnz	short loc_1007522
		push	esi
		call	ds:__imp__exit
; ---------------------------------------------------------------------------

loc_1007522:				; CODE XREF: .text:01007519j
		call	ds:__imp___cexit
		jmp	short loc_1007557
; ---------------------------------------------------------------------------
		mov	eax, [ebp-14h]
		mov	ecx, [eax]
		mov	ecx, [ecx]
		mov	[ebp-28h], ecx
		push	eax
		push	ecx
		call	__XcptFilter
		pop	ecx
		pop	ecx
		retn
; ---------------------------------------------------------------------------
		mov	esp, [ebp-18h]
		mov	esi, [ebp-28h]
		cmp	dword ptr [ebp-1Ch], 0
		jnz	short loc_1007551
		push	esi
		call	ds:__imp___exit
; ---------------------------------------------------------------------------

loc_1007551:				; CODE XREF: .text:01007548j
		call	ds:__imp___c_exit

loc_1007557:				; CODE XREF: .text:01007528j
		or	dword ptr [ebp-4], 0FFFFFFFFh
		mov	eax, esi
		call	__SEH_epilog
		retn
; ---------------------------------------------------------------------------
		align 8

; =============== S U B	R O U T	I N E =======================================


__SEH_prolog	proc near		; CODE XREF: LoadFile(x,x)+Ap

arg_4		= dword	ptr  8

		push	offset __except_handler3
		mov	eax, large fs:0
		push	eax
		mov	eax, [esp+8+arg_4]
		mov	[esp+8+arg_4], ebp
		lea	ebp, [esp+8+arg_4]
		sub	esp, eax
		push	ebx
		push	esi
		push	edi
		mov	eax, [ebp-8]
		mov	[ebp-18h], esp
		push	eax
		mov	eax, [ebp-4]
		mov	dword ptr [ebp-4], 0FFFFFFFFh
		mov	[ebp-8], eax
		lea	eax, [ebp-10h]
		mov	large fs:0, eax
		retn
__SEH_prolog	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================


__SEH_epilog	proc near		; CODE XREF: LoadFile(x,x)+685p
					; .text:0100755Dp
		mov	ecx, [ebp-10h]
		mov	large fs:0, ecx
		pop	ecx
		pop	edi
		pop	esi
		pop	ebx
		leave
		push	ecx
		retn
__SEH_epilog	endp

; ---------------------------------------------------------------------------
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION __except_handler3. PRESS KEYPAD "+" TO EXPAND]
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION __XcptFilter. PRESS KEYPAD "+" TO	EXPAND]
		db 6 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION __initterm. PRESS	KEYPAD "+" TO EXPAND]
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


__setdefaultprecision proc near
		push	30000h		; Mask
		push	10000h		; NewValue
		call	__controlfp
		pop	ecx
		pop	ecx

locret_10075EE:				; CODE XREF: sub_10073AF+14Cj
		retn
__setdefaultprecision endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)

; =============== S U B	R O U T	I N E =======================================


__setargv	proc near
		xor	eax, eax
		retn
__setargv	endp

; ---------------------------------------------------------------------------
		db 5 dup(0CCh)
; [00000006 BYTES: COLLAPSED FUNCTION __controlfp. PRESS KEYPAD	"+" TO EXPAND]
		align 4
__IMPORT_DESCRIPTOR_comdlg32 dd	rva off_1007990	; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aComdlg32_dll	; DLL Name
		dd rva __imp__PageSetupDlgW@4 ;	Import Address Table
__IMPORT_DESCRIPTOR_SHELL32 dd rva off_1007840 ; Import	Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aShell32_dll	; DLL Name
		dd rva __imp__DragFinish@4 ; Import Address Table
__IMPORT_DESCRIPTOR_WINSPOOL dd	rva off_1007980	; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aWinspool_drv	; DLL Name
		dd rva __imp__GetPrinterDriverW@24 ; Import Address Table
__IMPORT_DESCRIPTOR_COMCTL32 dd	rva off_10076EC	; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aComctl32_dll	; DLL Name
		dd rva __imp__CreateStatusWindowW@16 ; Import Address Table
__IMPORT_DESCRIPTOR_msvcrt dd rva off_10079B8 ;	Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aMsvcrt_dll	; DLL Name
		dd rva __imp___XcptFilter ; Import Address Table
__IMPORT_DESCRIPTOR_ADVAPI32 dd	rva off_10076CC	; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aAdvapi32_dll	; DLL Name
		dd rva __imp__RegQueryValueExW@24 ; Import Address Table
__IMPORT_DESCRIPTOR_KERNEL32 dd	rva off_1007758	; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aKernel32_dll	; DLL Name
		dd rva __imp__GetCurrentThreadId@0 ; Import Address Table
__IMPORT_DESCRIPTOR_GDI32 dd rva off_10076F4 ; Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aGdi32_dll	; DLL Name
		dd rva __imp__EndPage@4	; Import Address Table
__IMPORT_DESCRIPTOR_USER32 dd rva off_1007854 ;	Import Name Table
		dd 0FFFFFFFFh		; Time stamp
		dd 0FFFFFFFFh		; Forwarder Chain
		dd rva aUser32_dll	; DLL Name
		dd rva __imp__GetClientRect@8 ;	Import Address Table
__NULL_IMPORT_DESCRIPTOR dd 5 dup(0)
;
; Import names for ADVAPI32.dll
;
off_10076CC	dd rva word_1007CA2	; DATA XREF: .text:__IMPORT_DESCRIPTOR_ADVAPI32o
		dd rva word_1007CB6
		dd rva word_1007CC4
		dd rva word_1007CD4
		dd rva word_1007CE4
		dd rva word_1007CF8
		dd rva word_1007C90
		dd 0
;
; Import names for COMCTL32.dll
;
off_10076EC	dd rva word_1007B48	; DATA XREF: .text:__IMPORT_DESCRIPTOR_COMCTL32o
		dd 0
;
; Import names for GDI32.dll
;
off_10076F4	dd rva word_10081D0	; DATA XREF: .text:__IMPORT_DESCRIPTOR_GDI32o
		dd rva word_10081C4
		dd rva word_10081BA
		dd rva word_10081AE
		dd rva word_10081DA
		dd rva word_100818A
		dd rva word_100817E
		dd rva word_10081F2
		dd rva word_100815E
		dd rva word_10081A2
		dd rva word_10081E6
		dd rva word_1008150
		dd rva word_100813E
		dd rva word_1008130
		dd rva word_1008120
		dd rva word_100810A
		dd rva word_10080FA
		dd rva word_1008202
		dd rva word_1008214
		dd rva word_1008220
		dd rva word_100822A
		dd rva word_100823C
		dd rva word_1008250
		dd rva word_100816E
		dd 0
;
; Import names for KERNEL32.dll
;
off_1007758	dd rva word_1008024	; DATA XREF: .text:__IMPORT_DESCRIPTOR_KERNEL32o
		dd rva word_1008014
		dd rva word_1007FFA
		dd rva word_1007FEA
		dd rva word_1007FD4
		dd rva word_1007FC2
		dd rva word_1007FB0
		dd rva word_1007FA2
		dd rva word_1007F92
		dd rva word_1007F74
		dd rva word_1007F5E
		dd rva word_100803A
		dd rva word_1008054
		dd rva word_1008068
		dd rva word_1008098
		dd rva word_10080B6
		dd rva word_10080C6
		dd rva word_10080DA
		dd rva word_1007D16
		dd rva word_1007D24
		dd rva word_1007D36
		dd rva word_1007D42
		dd rva word_1007D50
		dd rva word_1007D5C
		dd rva word_1007D6A
		dd rva word_1007D7C
		dd rva word_1007D88
		dd rva word_1007D96
		dd rva word_1007DA4
		dd rva word_1007DB0
		dd rva word_1007DBC
		dd rva word_1007DCA
		dd rva word_1007DD6
		dd rva word_1007DEC
		dd rva word_1007DFE
		dd rva word_1007E10
		dd rva word_1007E1C
		dd rva word_1007E28
		dd rva word_1007E3A
		dd rva word_1007E50
		dd rva word_1007E5C
		dd rva word_1007E66
		dd rva word_1007E72
		dd rva word_1007E7E
		dd rva word_1007E8E
		dd rva word_1007E9A
		dd rva word_1007EAA
		dd rva word_1007EC0
		dd rva word_1007ED0
		dd rva word_1007EE2
		dd rva word_1007EFE
		dd rva word_1007F0E
		dd rva word_1007F1C
		dd rva word_1007F26
		dd rva word_1007F38
		dd rva word_1007F4E
		dd rva word_100807C
		dd 0
;
; Import names for SHELL32.dll
;
off_1007840	dd rva word_1007AC8	; DATA XREF: .text:__IMPORT_DESCRIPTOR_SHELL32o
		dd rva word_1007AD6
		dd rva word_1007AE8
		dd rva word_1007ABA
		dd 0
;
; Import names for USER32.dll
;
off_1007854	dd rva word_1008524	; DATA XREF: .text:__IMPORT_DESCRIPTOR_USER32o
		dd rva word_1008534
		dd rva word_1008540
		dd rva word_100854C
		dd rva word_1008554
		dd rva word_1008566
		dd rva word_1008578
		dd rva word_100858C
		dd rva word_100859E
		dd rva word_10085AE
		dd rva word_1008516
		dd rva word_10085CE
		dd rva word_10085E4
		dd rva word_10085F0
		dd rva word_1008606
		dd rva word_1008614
		dd rva word_1008622
		dd rva word_1008636
		dd rva word_1008646
		dd rva word_100865A
		dd rva word_1008668
		dd rva word_1008676
		dd rva word_100868C
		dd rva word_1008502
		dd rva word_10084F6
		dd rva word_10084EA
		dd rva word_10084D8
		dd rva word_10085BC
		dd rva word_100869E
		dd rva word_10086B8
		dd rva word_10086C8
		dd rva word_10086D8
		dd rva word_10086E6
		dd rva word_10086F6
		dd rva word_1008706
		dd rva word_1008714
		dd rva word_100872A
		dd rva word_10084C4
		dd rva word_1008268
		dd rva word_1008276
		dd rva word_1008288
		dd rva word_1008294
		dd rva word_10082A4
		dd rva word_10082BC
		dd rva word_10082CE
		dd rva word_10082DE
		dd rva word_10082F4
		dd rva word_1008304
		dd rva word_1008310
		dd rva word_1008320
		dd rva word_1008332
		dd rva word_1008350
		dd rva word_1008360
		dd rva word_1008370
		dd rva word_1008382
		dd rva word_1008390
		dd rva word_100839A
		dd rva word_10083A8
		dd rva word_10083BA
		dd rva word_10083CC
		dd rva word_10083DA
		dd rva word_10083E6
		dd rva word_10083F8
		dd rva word_1008404
		dd rva word_1008416
		dd rva word_1008422
		dd rva word_100842E
		dd rva word_1008440
		dd rva word_1008454
		dd rva word_1008468
		dd rva word_1008480
		dd rva word_1008494
		dd rva word_10084A4
		dd rva word_10084B2
		dd 0
;
; Import names for WINSPOOL.DRV
;
off_1007980	dd rva word_1007B16	; DATA XREF: .text:__IMPORT_DESCRIPTOR_WINSPOOLo
		dd rva word_1007B06
		dd rva word_1007B2A
		dd 0
;
; Import names for comdlg32.dll
;
off_1007990	dd rva word_1007A7A	; DATA XREF: .text:__IMPORT_DESCRIPTOR_comdlg32o
		dd rva word_1007A5E
		dd rva word_1007A9E
		dd rva word_1007A50
		dd rva word_1007A40
		dd rva word_1007A8A
		dd rva word_1007A6A
		dd rva word_1007A14
		dd rva word_1007A2C
		dd 0
;
; Import names for msvcrt.dll
;
off_10079B8	dd rva word_1007BDC	; DATA XREF: .text:__IMPORT_DESCRIPTOR_msvcrto
		dd rva word_1007BD4
		dd rva word_1007BCA
		dd rva word_1007BC2
		dd rva word_1007BB6
		dd rva word_1007BEA
		dd rva word_1007BA0
		dd rva word_1007B8C
		dd rva word_1007B84
		dd rva word_1007B7A
		dd rva word_1007B6C
		dd rva word_1007BF4
		dd rva word_1007BFC
		dd rva word_1007C06
		dd rva word_1007C16
		dd rva word_1007C22
		dd rva word_1007C36
		dd rva word_1007C46
		dd rva word_1007C56
		dd rva word_1007C64
		dd rva word_1007C82
		dd rva word_1007BAC
		dd 0
word_1007A14	dw 4			; DATA XREF: .text:010079ACo
		db 'CommDlgExtendedError',0
		align 4
word_1007A2C	dw 0Ch			; DATA XREF: .text:010079B0o
		db 'GetSaveFileNameW',0
		align 10h
word_1007A40	dw 8			; DATA XREF: .text:010079A0o
		db 'GetFileTitleW',0
word_1007A50	dw 3			; DATA XREF: .text:0100799Co
		db 'ChooseFontW',0
word_1007A5E	dw 6			; DATA XREF: .text:01007994o
		db 'FindTextW',0
word_1007A6A	dw 15h			; DATA XREF: .text:010079A8o
		db 'ReplaceTextW',0
		align 2
word_1007A7A	dw 0Fh			; DATA XREF: .text:off_1007990o
		db 'PageSetupDlgW',0
word_1007A8A	dw 0Ah			; DATA XREF: .text:010079A4o
		db 'GetOpenFileNameW',0
		align 2
word_1007A9E	dw 12h			; DATA XREF: .text:01007998o
		db 'PrintDlgExW',0
aComdlg32_dll	db 'comdlg32.dll',0     ; DATA XREF: .text:01007610o
		align 2
word_1007ABA	dw 103h			; DATA XREF: .text:0100784Co
		db 'ShellAboutW',0
word_1007AC8	dw 1Fh			; DATA XREF: .text:off_1007840o
		db 'DragFinish',0
		align 2
word_1007AD6	dw 23h			; DATA XREF: .text:01007844o
		db 'DragQueryFileW',0
		align 4
word_1007AE8	dw 1Eh			; DATA XREF: .text:01007848o
		db 'DragAcceptFiles',0
aShell32_dll	db 'SHELL32.dll',0      ; DATA XREF: .text:01007624o
word_1007B06	dw 1Bh			; DATA XREF: .text:01007984o
		db 'ClosePrinter',0
		align 2
word_1007B16	dw 78h			; DATA XREF: .text:off_1007980o
		db 'GetPrinterDriverW',0
word_1007B2A	dw 7Eh			; DATA XREF: .text:01007988o
		db 'OpenPrinterW',0
		align 2
aWinspool_drv	db 'WINSPOOL.DRV',0     ; DATA XREF: .text:01007638o
		align 4
word_1007B48	dw 8			; DATA XREF: .text:off_10076ECo
		db 'CreateStatusWindowW',0
aComctl32_dll	db 'COMCTL32.dll',0     ; DATA XREF: .text:0100764Co
		align 4
word_1007B6C	dw 1E4h			; DATA XREF: .text:010079E0o
		db '_snwprintf',0
		align 2
word_1007B7A	dw 32Fh			; DATA XREF: .text:010079DCo
		db 'wcsncmp',0
word_1007B84	dw 274h			; DATA XREF: .text:010079D8o
		db '_wtol',0
word_1007B8C	dw 0EDh			; DATA XREF: .text:010079D4o
		db '_except_handler3',0
		align 10h
word_1007BA0	dw 2C6h			; DATA XREF: .text:010079D0o
		db 'iswctype',0
		align 4
word_1007BAC	dw 330h			; DATA XREF: .text:01007A0Co
		db 'wcsncpy',0
word_1007BB6	dw 2D4h			; DATA XREF: .text:010079C8o
		db 'localtime',0
word_1007BC2	dw 317h			; DATA XREF: .text:010079C4o
		db 'time',0
		align 2
word_1007BCA	dw 0C5h			; DATA XREF: .text:010079C0o
		db '_c_exit',0
word_1007BD4	dw 0F6h			; DATA XREF: .text:010079BCo
		db '_exit',0
word_1007BDC	dw 4Eh			; DATA XREF: .text:off_10079B8o
		db '_XcptFilter',0
word_1007BEA	dw 0C8h			; DATA XREF: .text:010079CCo
		db '_cexit',0
		align 4
word_1007BF4	dw 290h			; DATA XREF: .text:010079E4o
		db 'exit',0
		align 4
word_1007BFC	dw 0A8h			; DATA XREF: .text:010079E8o
		db '_acmdln',0
word_1007C06	dw 6Dh			; DATA XREF: .text:010079ECo
		db '__getmainargs',0
word_1007C16	dw 13Bh			; DATA XREF: .text:010079F0o
		db '_initterm',0
word_1007C22	dw 9Ah			; DATA XREF: .text:010079F4o
		db '__setusermatherr',0
		align 2
word_1007C36	dw 0B6h			; DATA XREF: .text:010079F8o
		db '_adjust_fdiv',0
		align 2
word_1007C46	dw 80h			; DATA XREF: .text:010079FCo
		db '__p__commode',0
		align 2
word_1007C56	dw 85h			; DATA XREF: .text:01007A00o
		db '__p__fmode',0
		align 4
word_1007C64	dw 98h			; DATA XREF: .text:01007A04o
		db '__set_app_type',0
		align 2
aMsvcrt_dll	db 'msvcrt.dll',0       ; DATA XREF: .text:01007660o
		align 2
word_1007C82	dw 0D6h			; DATA XREF: .text:01007A08o
		db '_controlfp',0
		align 10h
word_1007C90	dw 1FCh			; DATA XREF: .text:010076E4o
		db 'RegSetValueExW',0
		align 2
word_1007CA2	dw 1EFh			; DATA XREF: .text:off_10076CCo
		db 'RegQueryValueExW',0
		align 2
word_1007CB6	dw 1CAh			; DATA XREF: .text:010076D0o
		db 'RegCloseKey',0
word_1007CC4	dw 1D0h			; DATA XREF: .text:010076D4o
		db 'RegCreateKeyW',0
word_1007CD4	dw 139h			; DATA XREF: .text:010076D8o
		db 'IsTextUnicode',0
word_1007CE4	dw 1EEh			; DATA XREF: .text:010076DCo
		db 'RegQueryValueExA',0
		align 4
word_1007CF8	dw 1E4h			; DATA XREF: .text:010076E0o
		db 'RegOpenKeyExA',0
aAdvapi32_dll	db 'ADVAPI32.dll',0     ; DATA XREF: .text:01007674o
		align 2
word_1007D16	dw 1F4h			; DATA XREF: .text:010077A0o
		db 'GlobalFree',0
		align 4
word_1007D24	dw 16Ch			; DATA XREF: .text:010077A4o
		db 'GetLocaleInfoW',0
		align 2
word_1007D36	dw 24Eh			; DATA XREF: .text:010077A8o
		db 'LocalFree',0
word_1007D42	dw 24Ah			; DATA XREF: .text:010077ACo
		db 'LocalAlloc',0
		align 10h
word_1007D50	dw 3B8h			; DATA XREF: .text:010077B0o
		db 'lstrlenW',0
		align 4
word_1007D5C	dw 254h			; DATA XREF: .text:010077B4o
		db 'LocalUnlock',0
word_1007D6A	dw 38h			; DATA XREF: .text:010077B8o
		db 'CompareStringW',0
		align 4
word_1007D7C	dw 250h			; DATA XREF: .text:010077BCo
		db 'LocalLock',0
word_1007D88	dw 0EAh			; DATA XREF: .text:010077C0o
		db 'FoldStringW',0
word_1007D96	dw 31h			; DATA XREF: .text:010077C4o
		db 'CloseHandle',0
word_1007DA4	dw 3B2h			; DATA XREF: .text:010077C8o
		db 'lstrcpyW',0
		align 10h
word_1007DB0	dw 2A6h			; DATA XREF: .text:010077CCo
		db 'ReadFile',0
		align 4
word_1007DBC	dw 52h			; DATA XREF: .text:010077D0o
		db 'CreateFileW',0
word_1007DCA	dw 3AFh			; DATA XREF: .text:010077D4o
		db 'lstrcmpiW',0
word_1007DD6	dw 13Ch			; DATA XREF: .text:010077D8o
		db 'GetCurrentProcessId',0
word_1007DEC	dw 198h			; DATA XREF: .text:010077DCo
		db 'GetProcAddress',0
		align 2
word_1007DFE	dw 10Ah			; DATA XREF: .text:010077E0o
		db 'GetCommandLineW',0
word_1007E10	dw 3A9h			; DATA XREF: .text:010077E4o
		db 'lstrcatW',0
		align 4
word_1007E1C	dw 0CCh			; DATA XREF: .text:010077E8o
		db 'FindClose',0
word_1007E28	dw 0D3h			; DATA XREF: .text:010077ECo
		db 'FindFirstFileW',0
		align 2
word_1007E3A	dw 159h			; DATA XREF: .text:010077F0o
		db 'GetFileAttributesW',0
		align 10h
word_1007E50	dw 3ACh			; DATA XREF: .text:010077F4o
		db 'lstrcmpW',0
		align 4
word_1007E5C	dw 266h			; DATA XREF: .text:010077F8o
		db 'MulDiv',0
		align 2
word_1007E66	dw 3B5h			; DATA XREF: .text:010077FCo
		db 'lstrcpynW',0
word_1007E72	dw 253h			; DATA XREF: .text:01007800o
		db 'LocalSize',0
word_1007E7E	dw 168h			; DATA XREF: .text:01007804o
		db 'GetLastError',0
		align 2
word_1007E8E	dw 38Fh			; DATA XREF: .text:01007808o
		db 'WriteFile',0
word_1007E9A	dw 316h			; DATA XREF: .text:0100780Co
		db 'SetLastError',0
		align 2
word_1007EAA	dw 382h			; DATA XREF: .text:01007810o
		db 'WideCharToMultiByte',0
word_1007EC0	dw 251h			; DATA XREF: .text:01007814o
		db 'LocalReAlloc',0
		align 10h
word_1007ED0	dw 0ECh			; DATA XREF: .text:01007818o
		db 'FormatMessageW',0
		align 2
word_1007EE2	dw 1DAh			; DATA XREF: .text:0100781Co
		db 'GetUserDefaultUILanguage',0
		align 2
word_1007EFE	dw 300h			; DATA XREF: .text:01007820o
		db 'SetEndOfFile',0
		align 2
word_1007F0E	dw 82h			; DATA XREF: .text:01007824o
		db 'DeleteFileW',0
word_1007F1C	dw 0F6h			; DATA XREF: .text:01007828o
		db 'GetACP',0
		align 2
word_1007F26	dw 35Eh			; DATA XREF: .text:0100782Co
		db 'UnmapViewOfFile',0
word_1007F38	dw 267h			; DATA XREF: .text:01007830o
		db 'MultiByteToWideChar',0
word_1007F4E	dw 25Ah			; DATA XREF: .text:01007834o
		db 'MapViewOfFile',0
word_1007F5E	dw 51h			; DATA XREF: .text:01007780o
		db 'CreateFileMappingW',0
		align 4
word_1007F74	dw 15Ah			; DATA XREF: .text:0100777Co
		db 'GetFileInformationByHandle',0
		align 2
word_1007F92	dw 1FFh			; DATA XREF: .text:01007778o
		db 'GlobalUnlock',0
		align 2
word_1007FA2	dw 1F8h			; DATA XREF: .text:01007774o
		db 'GlobalLock',0
		align 10h
word_1007FB0	dw 1D6h			; DATA XREF: .text:01007770o
		db 'GetTimeFormatW',0
		align 2
word_1007FC2	dw 140h			; DATA XREF: .text:0100776Co
		db 'GetDateFormatW',0
		align 4
word_1007FD4	dw 1D8h			; DATA XREF: .text:01007768o
		db 'GetUserDefaultLCID',0
		align 2
word_1007FEA	dw 16Ah			; DATA XREF: .text:01007764o
		db 'GetLocalTime',0
		align 2
word_1007FFA	dw 294h			; DATA XREF: .text:01007760o
		db 'QueryPerformanceCounter',0
word_1008014	dw 1D4h			; DATA XREF: .text:0100775Co
		db 'GetTickCount',0
		align 4
word_1008024	dw 13Eh			; DATA XREF: .text:off_1007758o
		db 'GetCurrentThreadId',0
		align 2
word_100803A	dw 1C0h			; DATA XREF: .text:01007784o
		db 'GetSystemTimeAsFileTime',0
word_1008054	dw 34Ah			; DATA XREF: .text:01007788o
		db 'TerminateProcess',0
		align 4
word_1008068	dw 13Bh			; DATA XREF: .text:0100778Co
		db 'GetCurrentProcess',0
word_100807C	dw 35Bh			; DATA XREF: .text:01007838o
		db 'UnhandledExceptionFilter',0
		align 4
word_1008098	dw 336h			; DATA XREF: .text:01007790o
		db 'SetUnhandledExceptionFilter',0
word_10080B6	dw 244h			; DATA XREF: .text:01007794o
		db 'LoadLibraryA',0
		align 2
word_10080C6	dw 176h			; DATA XREF: .text:01007798o
		db 'GetModuleHandleA',0
		align 2
word_10080DA	dw 1AEh			; DATA XREF: .text:0100779Co
		db 'GetStartupInfoA',0
aKernel32_dll	db 'KERNEL32.dll',0     ; DATA XREF: .text:01007688o
		align 2
word_10080FA	dw 8Fh			; DATA XREF: .text:01007734o
		db 'DeleteObject',0
		align 2
word_100810A	dw 3Dh			; DATA XREF: .text:01007730o
		db 'CreateFontIndirectW',0
word_1008120	dw 16Ch			; DATA XREF: .text:0100772Co
		db 'GetDeviceCaps',0
word_1008130	dw 198h			; DATA XREF: .text:01007728o
		db 'GetObjectW',0
		align 2
word_100813E	dw 1A6h			; DATA XREF: .text:01007724o
		db 'GetStockObject',0
		align 10h
word_1008150	dw 0CEh			; DATA XREF: .text:01007720o
		db 'EnumFontsW',0
		align 2
word_100815E	dw 1BCh			; DATA XREF: .text:01007714o
		db 'GetTextFaceW',0
		align 2
word_100816E	dw 20Fh			; DATA XREF: .text:01007750o
		db 'SelectObject',0
		align 2
word_100817E	dw 2Fh			; DATA XREF: .text:0100770Co
		db 'CreateDCW',0
word_100818A	dw 1B6h			; DATA XREF: .text:01007708o
		db 'GetTextExtentPoint32W',0
word_10081A2	dw 250h			; DATA XREF: .text:01007718o
		db 'TextOutW',0
		align 2
word_10081AE	dw 8Ch			; DATA XREF: .text:01007700o
		db 'DeleteDC',0
		align 2
word_10081BA	dw 96h			; DATA XREF: .text:010076FCo
		db 'EndDoc',0
		align 4
word_10081C4	dw 0			; DATA XREF: .text:010076F8o
		db 'AbortDoc',0
		align 10h
word_10081D0	dw 98h			; DATA XREF: .text:off_10076F4o
		db 'EndPage',0
word_10081DA	dw 249h			; DATA XREF: .text:01007704o
		db 'StartPage',0
word_10081E6	dw 247h			; DATA XREF: .text:0100771Co
		db 'StartDocW',0
word_10081F2	dw 211h			; DATA XREF: .text:01007710o
		db 'SetAbortProc',0
		align 2
word_1008202	dw 1BEh			; DATA XREF: .text:01007738o
		db 'GetTextMetricsW',0
word_1008214	dw 217h			; DATA XREF: .text:0100773Co
		db 'SetBkMode',0
word_1008220	dw 1CCh			; DATA XREF: .text:01007740o
		db 'LPtoDP',0
		align 2
word_100822A	dw 243h			; DATA XREF: .text:01007744o
		db 'SetWindowExtEx',0
		align 4
word_100823C	dw 23Fh			; DATA XREF: .text:01007748o
		db 'SetViewportExtEx',0
		align 10h
word_1008250	dw 22Ch			; DATA XREF: .text:0100774Co
		db 'SetMapMode',0
		align 2
aGdi32_dll	db 'GDI32.dll',0        ; DATA XREF: .text:0100769Co
word_1008268	dw 1E9h			; DATA XREF: .text:010078ECo
		db 'MoveWindow',0
		align 2
word_1008276	dw 193h			; DATA XREF: .text:010078F0o
		db 'InvalidateRect',0
		align 4
word_1008288	dw 2D3h			; DATA XREF: .text:010078F4o
		db 'WinHelpW',0
		align 4
word_1008294	dw 110h			; DATA XREF: .text:010078F8o
		db 'GetDlgCtrlID',0
		align 4
word_10082A4	dw 3Ch			; DATA XREF: .text:010078FCo
		db 'ChildWindowFromPoint',0
		align 4
word_10082BC	dw 231h			; DATA XREF: .text:01007900o
		db 'ScreenToClient',0
		align 2
word_10082CE	dw 10Bh			; DATA XREF: .text:01007904o
		db 'GetCursorPos',0
		align 2
word_10082DE	dw 237h			; DATA XREF: .text:01007908o
		db 'SendDlgItemMessageW',0
word_10082F4	dw 240h			; DATA XREF: .text:0100790Co
		db 'SendMessageW',0
		align 4
word_1008304	dw 2Ch			; DATA XREF: .text:01007910o
		db 'CharNextW',0
word_1008310	dw 39h			; DATA XREF: .text:01007914o
		db 'CheckMenuItem',0
word_1008320	dw 42h			; DATA XREF: .text:01007918o
		db 'CloseClipboard',0
		align 2
word_1008332	dw 19Fh			; DATA XREF: .text:0100791Co
		db 'IsClipboardFormatAvailable',0
		align 10h
word_1008350	dw 1F3h			; DATA XREF: .text:01007920o
		db 'OpenClipboard',0
word_1008360	dw 137h			; DATA XREF: .text:01007924o
		db 'GetMenuState',0
		align 10h
word_1008370	dw 0C2h			; DATA XREF: .text:01007928o
		db 'EnableMenuItem',0
		align 2
word_1008382	dw 159h			; DATA XREF: .text:0100792Co
		db 'GetSubMenu',0
		align 10h
word_1008390	dw 12Ch			; DATA XREF: .text:01007930o
		db 'GetMenu',0
word_100839A	dw 1E3h			; DATA XREF: .text:01007934o
		db 'MessageBoxW',0
word_10083A8	dw 281h			; DATA XREF: .text:01007938o
		db 'SetWindowLongW',0
		align 2
word_10083BA	dw 16Fh			; DATA XREF: .text:0100793Co
		db 'GetWindowLongW',0
		align 4
word_10083CC	dw 111h			; DATA XREF: .text:01007940o
		db 'GetDlgItem',0
		align 2
word_10083DA	dw 256h			; DATA XREF: .text:01007944o
		db 'SetFocus',0
		align 2
word_10083E6	dw 254h			; DATA XREF: .text:01007948o
		db 'SetDlgItemTextW',0
word_10083F8	dw 2D9h			; DATA XREF: .text:0100794Co
		db 'wsprintfW',0
word_1008404	dw 114h			; DATA XREF: .text:01007950o
		db 'GetDlgItemTextW',0
word_1008416	dw 0C6h			; DATA XREF: .text:01007954o
		db 'EndDialog',0
word_1008422	dw 145h			; DATA XREF: .text:01007958o
		db 'GetParent',0
word_100842E	dw 2ACh			; DATA XREF: .text:0100795Co
		db 'UnhookWinEvent',0
		align 10h
word_1008440	dw 0A2h			; DATA XREF: .text:01007960o
		db 'DispatchMessageW',0
		align 4
word_1008454	dw 2AAh			; DATA XREF: .text:01007964o
		db 'TranslateMessage',0
		align 4
word_1008468	dw 2A8h			; DATA XREF: .text:01007968o
		db 'TranslateAcceleratorW',0
word_1008480	dw 1A2h			; DATA XREF: .text:0100796Co
		db 'IsDialogMessageW',0
		align 4
word_1008494	dw 200h			; DATA XREF: .text:01007970o
		db 'PostMessageW',0
		align 4
word_10084A4	dw 13Eh			; DATA XREF: .text:01007974o
		db 'GetMessageW',0
word_10084B2	dw 27Eh			; DATA XREF: .text:01007978o
		db 'SetWinEventHook',0
word_10084C4	dw 15Dh			; DATA XREF: .text:010078E8o
		db 'GetSystemMetrics',0
		align 4
word_10084D8	dw 287h			; DATA XREF: .text:010078BCo
		db 'SetWindowTextW',0
		align 2
word_10084EA	dw 1BCh			; DATA XREF: .text:010078B8o
		db 'LoadIconW',0
word_10084F6	dw 116h			; DATA XREF: .text:010078B4o
		db 'GetFocus',0
		align 2
word_1008502	dw 10Eh			; DATA XREF: .text:010078B0o
		db 'GetDesktopWindow',0
		align 2
word_1008516	dw 292h			; DATA XREF: .text:0100787Co
		db 'ShowWindow',0
		align 4
word_1008524	dw 0FFh			; DATA XREF: .text:off_1007854o
		db 'GetClientRect',0
word_1008534	dw 24Dh			; DATA XREF: .text:01007858o
		db 'SetCursor',0
word_1008540	dw 22Ah			; DATA XREF: .text:0100785Co
		db 'ReleaseDC',0
word_100854C	dw 10Ch			; DATA XREF: .text:01007860o
		db 'GetDC',0
word_1008554	dw 9Fh			; DATA XREF: .text:01007864o
		db 'DialogBoxParamW',0
word_1008566	dw 243h			; DATA XREF: .text:01007868o
		db 'SetActiveWindow',0
word_1008578	dw 122h			; DATA XREF: .text:0100786Co
		db 'GetKeyboardLayout',0
word_100858C	dw 8Fh			; DATA XREF: .text:01007870o
		db 'DefWindowProcW',0
		align 2
word_100859E	dw 99h			; DATA XREF: .text:01007874o
		db 'DestroyWindow',0
word_10085AE	dw 1DBh			; DATA XREF: .text:01007878o
		db 'MessageBeep',0
word_10085BC	dw 201h			; DATA XREF: .text:010078C0o
		db 'PostQuitMessage',0
word_10085CE	dw 117h			; DATA XREF: .text:01007880o
		db 'GetForegroundWindow',0
word_10085E4	dw 1A6h			; DATA XREF: .text:01007884o
		db 'IsIconic',0
		align 10h
word_10085F0	dw 173h			; DATA XREF: .text:01007888o
		db 'GetWindowPlacement',0
		align 2
word_1008606	dw 37h			; DATA XREF: .text:0100788Co
		db 'CharUpperW',0
		align 4
word_1008614	dw 1C9h			; DATA XREF: .text:01007890o
		db 'LoadStringW',0
word_1008622	dw 1B4h			; DATA XREF: .text:01007894o
		db 'LoadAcceleratorsW',0
word_1008636	dw 15Ch			; DATA XREF: .text:01007898o
		db 'GetSystemMenu',0
word_1008646	dw 218h			; DATA XREF: .text:0100789Co
		db 'RegisterClassExW',0
		align 2
word_100865A	dw 1BEh			; DATA XREF: .text:010078A0o
		db 'LoadImageW',0
		align 4
word_1008668	dw 1BAh			; DATA XREF: .text:010078A4o
		db 'LoadCursorW',0
word_1008676	dw 282h			; DATA XREF: .text:010078A8o
		db 'SetWindowPlacement',0
		align 4
word_100868C	dw 61h			; DATA XREF: .text:010078ACo
		db 'CreateWindowExW',0
word_100869E	dw 228h			; DATA XREF: .text:010078C4o
		db 'RegisterWindowMessageW',0
		align 4
word_10086B8	dw 2BBh			; DATA XREF: .text:010078C8o
		db 'UpdateWindow',0
		align 4
word_10086C8	dw 26Fh			; DATA XREF: .text:010078CCo
		db 'SetScrollPos',0
		align 4
word_10086D8	dw 29h			; DATA XREF: .text:010078D0o
		db 'CharLowerW',0
		align 2
word_10086E6	dw 1FEh			; DATA XREF: .text:010078D4o
		db 'PeekMessageW',0
		align 2
word_10086F6	dw 0C4h			; DATA XREF: .text:010078D8o
		db 'EnableWindow',0
		align 2
word_1008706	dw 0BEh			; DATA XREF: .text:010078DCo
		db 'DrawTextExW',0
word_1008714	dw 56h			; DATA XREF: .text:010078E0o
		db 'CreateDialogParamW',0
		align 2
word_100872A	dw 17Ah			; DATA XREF: .text:010078E4o
		db 'GetWindowTextW',0
		align 4
aUser32_dll	db 'USER32.dll',0       ; DATA XREF: .text:010076B0o
		align 4
		dd 8D49CA29h, 68C5E592h, 0B2D2F77Bh, 8DD1F7CFh,	0C898BF96h
		dd 18E680E4h, 4E4A68h, 0EB58F800h, 63h,	42E8007Ah, 0D1F74942h
		dd 0E290948Dh, 80B2713Ch, 0CE80E7EDh, 80D1F6E0h, 0C987D5E9h
		dd 0EB45D680h, 13h, 88D3A7Dh, 0D2F7CA39h, 0FDF6E949h, 0
		dd 0D1F7C121h, 0FFDBA7BAh, 0A0F18024h, 0F908D2F6h, 0FFB5C9FEh
		dd 4977D183h, 0E883D219h, 86D28702h, 0CDEBCAh, 9DC70000h
		dd 0F8C61398h, 0D38BF286h, 4B8D088Dh, 8166FC5Dh, 13A0098h
		dd 0EB775B01h, 8Eh, 78F04416h, 13F577h,	5 dup(0)
		dd 200h	dup(?)
_text		ends

; Section 2. (virtual address 00009000)
; Virtual size			: 00001BA8 (   7080.)
; Section size in file		: 00000800 (   2048.)
; Offset to raw	data for section: 00007C00
; Flags	C0000040: Data Readable	Writable
; Alignment	: default
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	para public 'DATA' use32
		assume cs:_data
		;org 1009000h
___xc_a		dd 0
		dd offset ___security_init_cookie
___xc_z		dd 0
___xi_a		dd 0
___xi_z		dd 2 dup(0)
; BYTE iPointSize
_iPointSize	dd 78h			; DATA XREF: NPCommand(x,x,x)+4EEr
					; NPCommand(x,x,x)+5A5w ...
_fUntitled	dd 1			; DATA XREF: CheckSave(x)+31r
					; CheckSave(x)+72r ...
; const	WCHAR szNotepad
_szNotepad:				; DATA XREF: sub_10044D7+5Bo
					; NPInit(x,x,x,x)+129o
		unicode	0, <Notepad>,0
; int g_ftOpenedAs
_g_ftOpenedAs	dd 0FFFFFFFFh		; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+9Ar
					; NpOpenDialogHookProc(x,x,x,x)+66w ...
; LPCWSTR szDiskError
_szDiskError	dd 1			; DATA XREF: ProcessSetupOption(x)+C7r
					; ProcessShellOptions(x,x)+100r ...
; LPCWSTR szFNF
_szFNF		dd 2			; DATA XREF: ProcessSetupOption(x)+F6r
					; ProcessShellOptions(x,x):loc_100440Er ...
; LPCWSTR szSCBC
_szSCBC		dd 3			; DATA XREF: CheckSave(x)+9Br
					; .data:010090F0o
; LPCWSTR szUntitled
_szUntitled	dd 4			; DATA XREF: CheckSave(x)+78r
					; SetTitle(x)+23r ...
; LPCWSTR szNpTitle
_szNpTitle	dd 5			; DATA XREF: SetTitle(x):loc_1002B50r
					; .data:01009100o
; LPCWSTR szCFS
_szCFS		dd 6			; DATA XREF: Search(x)+169r
					; .data:010090FCo
; LPCWSTR szErrSpace
_szErrSpace	dd 7			; DATA XREF: CheckSave(x)+1D6r
					; NPWndProc(x,x,x,x)+19Cr ...
; LPCWSTR szFTL
_szFTL		dd 8			; DATA XREF: LoadFile(x,x)+2BBr
					; LoadFile(x,x)+57Er ...
; LPCWSTR szNN
_szNN		dd 9			; DATA XREF: SignalCommDlgError()+6Ar
					; CheckSave(x)+A7r ...
_szCommDlgInitErr dd 0Ah		; DATA XREF: .data:0100910Co
_szPDIE		dd 0Bh			; DATA XREF: .data:01009110o
; LPCWSTR szCP
_szCP		dd 0Ch			; DATA XREF: PrintIt(x)+7Dr
					; .data:01009114o
_szNVF		dd 0Dh			; DATA XREF: ProcessSetupOption(x):loc_1004281r
					; ProcessShellOptions(x,x):loc_1004400r ...
; LPCWSTR szCREATEERR
_szCREATEERR	dd 0Eh			; DATA XREF: SaveFile(x,x,x)+5Br
					; .data:0100911Co
; LPCWSTR szNoWW
_szNoWW		dd 0Fh			; DATA XREF: NPCommand(x,x,x)+5EEr
					; .data:01009120o
_szMerge	dd 10h			; DATA XREF: InitStrings(x)+8Br
					; .data:01009124o
; LPCWSTR szHelpFile
_szHelpFile	db 11h,	3 dup(0), 12h, 3 dup(0), 13h, 3	dup(0),	2Dh
					; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+127r
					; NpSaveDialogHookProc(x,x,x,x)+155r ...
		align 4
; LPCWSTR szAnsiText
_szAnsiText	dd 14h			; DATA XREF: CreateFilter(x)+11r
					; .data:0100912Co
; LPCWSTR szAllFiles
_szAllFiles	dd 15h			; DATA XREF: CreateFilter(x)+32r
					; .data:01009130o
_szOpenCaption	dd 16h			; DATA XREF: NPCommand(x,x,x)+1B1r
					; .data:01009134o
_szSaveCaption	dd 17h			; DATA XREF: CheckSave(x)+164r
					; NPCommand(x,x,x)+C7r	...
_szCannotQuit	dd 18h			; DATA XREF: NPWndProc(x,x,x,x)+14Cr
					; .data:0100913Co
; LPCWSTR szLoadDrvFail
_szLoadDrvFail	dd 19h			; DATA XREF: GetPrinterDC()+33r
					; GetPrinterDC()+AAr ...
_szACCESSDENY	dd 1Ah			; DATA XREF: ProcessSetupOption(x):loc_1004289r
					; ProcessShellOptions(x,x):loc_1004407r ...
; LPCWSTR szErrUnicode
_szErrUnicode	dd 1Bh			; DATA XREF: SaveFile(x,x,x)+13Er
					; .data:01009148o
; LPCWSTR szFontTooBig
_szFontTooBig	dd 1Ch			; DATA XREF: NpPrintGivenDC(x)+608r
					; .data:01009150o
; wchar_t *szCommDlgErr
_szCommDlgErr	dd 1Dh			; DATA XREF: SignalCommDlgError()+3Er
					; .data:0100914Co
; LPCWSTR szLineError
_szLineError	dd 1Eh			; DATA XREF: GotoDlgProc(x,x,x,x)+D7r
					; .data:01009154o
; LPCWSTR szLineTooLarge
_szLineTooLarge	dd 1Fh			; DATA XREF: GotoDlgProc(x,x,x,x)+DDr
					; .data:01009158o
; LPARAM szFtAnsi
_szFtAnsi	dd 20h			; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+54r
					; NpSaveDialogHookProc(x,x,x,x)+9Fr ...
; LPARAM szFtUnicode
_szFtUnicode	dd 21h			; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+6Dr
					; NpSaveDialogHookProc(x,x,x,x):loc_1001AEBr ...
; LPARAM szFtUnicodeBe
_szFtUnicodeBe	dd 22h			; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+7Cr
					; NpSaveDialogHookProc(x,x,x,x):loc_1001AE3r ...
; LPARAM szFtUtf8
_szFtUtf8	dd 23h			; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+8Br
					; NpSaveDialogHookProc(x,x,x,x)+B3r ...
; wchar_t *szCurrentPage
_szCurrentPage	dd 24h			; DATA XREF: NpPrintGivenDC(x)+498r
					; .data:0100916Co
; wchar_t *szLineCol
_szLineCol	dd 25h			; DATA XREF: UpdateStatusBar(x)+83r
					; SetTitle(x)+C3r ...
_szCompressedFile dd 26h		; DATA XREF: .data:0100917Co
_szEncryptedFile dd 27h			; DATA XREF: .data:01009180o
_szHiddenFile	dd 28h			; DATA XREF: .data:01009184o
_szOfflineFile	dd 29h			; DATA XREF: .data:01009188o
_szReadOnlyFile	dd 2Ah			; DATA XREF: .data:0100918Co
_szSystemFile	dd 2Bh			; DATA XREF: .data:01009190o
_szFile		dd 2Ch			; DATA XREF: .data:01009194o
_rgsz		dd offset _szDiskError	; DATA XREF: SizeStrings(x):loc_1004060r
					; InitStrings(x)+3Ao
		dd offset _szFNF
		dd offset _szSCBC
		dd offset _szUntitled
		dd offset _szErrSpace
		dd offset _szCFS
		dd offset _szNpTitle
		dd offset _szFTL
		dd offset _szNN
		dd offset _szCommDlgInitErr
		dd offset _szPDIE
		dd offset _szCP
		dd offset _szNVF
		dd offset _szCREATEERR
		dd offset _szNoWW
		dd offset _szMerge
		dd offset _szHelpFile
		dd offset _szAnsiText
		dd offset _szAllFiles
		dd offset _szOpenCaption
		dd offset _szSaveCaption
		dd offset _szCannotQuit
		dd offset _szLoadDrvFail
		dd offset _szACCESSDENY
		dd offset _szErrUnicode
		dd offset _szCommDlgErr
		dd offset _szFontTooBig
		dd offset _szLineError
		dd offset _szLineTooLarge
		dd offset _szFtAnsi
		dd offset _szFtUnicode
		dd offset _szFtUnicodeBe
		dd offset _szFtUtf8
		dd offset _szCurrentPage
		dd offset _szHelpFile+4
		dd offset _szHelpFile+8
		dd offset _szLineCol
		dd offset _szCompressedFile
		dd offset _szEncryptedFile
		dd offset _szHiddenFile
		dd offset _szOfflineFile
		dd offset _szReadOnlyFile
		dd offset _szSystemFile
		dd offset _szFile
		dd offset _szHelpFile+0Ch
off_100919C	dd offset szOtherStuff	; DATA XREF: InitStrings(x)+5Fo
_maperror	dd 0FFFFh		; DATA XREF: SignalCommDlgError():loc_1002011r
off_10091A4	dd offset _szErrSpace	; DATA XREF: SignalCommDlgError()+29r
		dd 2, 1009058h,	0Ah, 100905Ch, 5, 100904Ch, 6, 100904Ch
		dd 1004h, 1009098h, 1005h, 100904Ch, 1008h, 100919Ch
_BOM_UTF8	dd 0BFBBEFh		; DATA XREF: SaveFile(x,x,x)+E2o
dword_10091E4	dd 0FEFFh		; DATA XREF: SaveFile(x,x,x)+1C9o
dword_10091E8	dd 0FFFEh, 0		; DATA XREF: SaveFile(x,x,x)+17Fo
; const	WCHAR szFormattedDate
_szFormattedDate dw 59h			; DATA XREF: TranslateString(x):loc_1006228o
					; TranslateString(x)+1BDo ...
		align 4
		dd 81h dup(0)
; const	WCHAR szFormattedTime
_szFormattedTime dw 59h			; DATA XREF: TranslateString(x):loc_1006255o
					; TranslateString(x)+1EAo ...
		align 4
		dd 81h dup(0)
___security_cookie_complement dd 0FFFF44BFh ; DATA XREF: ___security_init_cookie+67w
					; ___report_gsfailure+C6r
___security_cookie dd 0BB40h		; DATA XREF: .text:010018E4o
					; UpdateStatusBar(x)+Br ...
___defaultmatherr dd 1,	5 dup(0)
dword_1009620	dd 0			; DATA XREF: UpdateStatusBar(x)+79r
					; UpdateStatusBar(x)+BDw
dword_1009624	dd 0			; DATA XREF: UpdateStatusBar(x)+71r
					; UpdateStatusBar(x)+C5w
; const	WCHAR FileName
FileName	dw 0			; DATA XREF: FileDragOpen()+26o
					; doDrop(x,x)+20o
		align 4
		dd 75h dup(0)
		dd 0Ch dup(?)
; HWND hwndNP
_hwndNP		dd ?			; DATA XREF: NpResetMenu(x)+Fr
					; SignalCommDlgError()+71r ...
; HWND hwndStatus
_hwndStatus	dd ?			; DATA XREF: UpdateStatusBar(x)+98r
					; SetTitle(x)+D8r ...
; HWND hwndEdit
_hwndEdit	dd ?			; DATA XREF: NPSize(x,x)+9r
					; NPSize(x,x)+33r ...
; HWND hDlgFind
_hDlgFind	dd ?			; DATA XREF: WinMain(x,x,x,x):loc_10029CCr
					; NPCommand(x,x,x):loc_1002F5Cr ...
; BYTE fStatus
_fStatus	dd ?			; DATA XREF: NPSize(x,x)+15r
					; NpResetMenu(x)+16Cr ...
_fLastStatus	dd ?			; DATA XREF: NPCommand(x,x,x)+60Fw
					; NPCommand(x,x,x)+676r
_dwEmSetHandle	dd ?			; DATA XREF: NPWndProc(x,x,x,x):loc_10038E1r
					; NPWndProc(x,x,x,x)+4C1w ...
_fRunBySetup	dd ?			; DATA XREF: NPWndProc(x,x,x,x):loc_1003842r
					; NPWndProc(x,x,x,x):loc_1003883r ...
; WPARAM fWrap
_fWrap		dd ?			; DATA XREF: NpResetMenu(x)+114r
					; NpResetMenu(x)+14Fr ...
_fInSaveAsDlg	dd ?			; DATA XREF: CheckSave(x)+A1w
					; CheckSave(x)+C1w ...
; BYTE fMLE_is_broken
_fMLE_is_broken	dd ?			; DATA XREF: SaveGlobals()+1D3r
					; GetGlobals()+29Aw ...
; WPARAM dwCurrentSelectionStart
_dwCurrentSelectionStart dd ?		; DATA XREF: NPWndProc(x,x,x,x)+1DCr
					; NPWndProc(x,x,x,x)+227o ...
; LPARAM dwCurrentSelectionEnd
_dwCurrentSelectionEnd dd ?		; DATA XREF: NPWndProc(x,x,x,x)+1E3r
					; NPWndProc(x,x,x,x)+222o ...
		align 8
; const	WCHAR String2
String2		dw ?			; DATA XREF: NpOpenDialogHookProc(x,x,x,x)+1CDo
		align 4
		dd 81h dup(?)
; int nHeight
nHeight		dd ?			; DATA XREF: GetGlobals()+28Cw
					; NPInit(x,x,x,x)+106r	...
; int nWidth
nWidth		dd ?			; DATA XREF: GetGlobals()+279w
					; NPInit(x,x,x,x)+111r	...
; int X
X		dd ?			; DATA XREF: GetGlobals()+266w
					; NPInit(x,x,x,x)+11Dr	...
; int Y
Y		dd ?			; DATA XREF: GetGlobals()+253w
					; NPInit(x,x,x,x)+117r	...
; int dword_1009A80
dword_1009A80	dd ?			; DATA XREF: ProcessSetupOption(x):loc_10042D2r
					; ProcessShellOptions(x,x):loc_100442Ar ...
; BYTE Data
Data		dd ?			; DATA XREF: SaveGlobals()+13Er
					; GetGlobals()+1A8w
; LPARAM lParam
lParam		dd ?			; DATA XREF: ClearFmt():loc_1004C6Eo
					; RestoreFmt()+34r
; WPARAM wParam
wParam		dd ?			; DATA XREF: ClearFmt()+2Ao
					; RestoreFmt()+3Ar
; int fCase
_fCase		dd ?			; DATA XREF: ReplaceSel(x)+80r
					; ReplaceSel(x)+A2r ...
_fReverse	dd ?			; DATA XREF: NPWndProc(x,x,x,x)+2C4w
					; NPWndProc(x,x,x,x)+31Dw ...
; HMENU	hMenu
hMenu		dd ?			; DATA XREF: AbortDlgProc(x,x,x,x)+22r
					; AbortDlgProc(x,x,x,x)+53w
; struct HWND__	* (__stdcall *pHtmlHelpA)(struct HWND__	*, char	const *, unsigned int, unsigned	long)
?pHtmlHelpA@@3P6GPAUHWND__@@PAU1@PBDIK@ZA dd ? ; DATA XREF: HtmlHelpA(x,x,x,x):loc_1007332r
					; HtmlHelpA(x,x,x,x)+83w
; struct HWND__	* (__stdcall *pHtmlHelpW)(struct HWND__	*, unsigned short const	*, unsigned int, unsigned long)
?pHtmlHelpW@@3P6GPAUHWND__@@PAU1@PBGIK@ZA dd ?
dword_1009AA4	dd ?			; DATA XREF: HtmlHelpA(x,x,x,x)+26r
					; HtmlHelpA(x,x,x,x):loc_100734Dw
; HMODULE hModule
hModule		dd ?			; DATA XREF: HtmlHelpA(x,x,x,x)+Br
					; HtmlHelpA(x,x,x,x)+4Dw ...
__dowildcard	dd ?
__newmode	dd ?
__commode	dd ?
; int _fmode
__fmode		dd ?
_iPageNum	dd ?			; DATA XREF: TranslateString(x):loc_10062E7r
					; NpPrintGivenDC(x)+3D1w ...
_dxRight	dd ?			; DATA XREF: PrintHeaderFooter(x,x)+9Cr
					; PrintHeaderFooter(x,x)+F2r ...
; int dxLeft
_dxLeft		dd ?			; DATA XREF: PrintHeaderFooter(x,x)+68r
					; PrintHeaderFooter(x,x)+A3r ...
_dyBottom	dd ?			; DATA XREF: PrintHeaderFooter(x,x)+42r
					; NpPrintGivenDC(x)+2A0w ...
_dyTop		dd ?			; DATA XREF: PrintHeaderFooter(x,x)+30r
					; NpPrintGivenDC(x)+27Cw ...
_yPhysOff	dd ?			; DATA XREF: GetResolutions(x)+52w
					; NpPrintGivenDC(x)+272r
_xPhysOff	dd ?			; DATA XREF: GetResolutions(x)+4Aw
					; NpPrintGivenDC(x)+22Br
; int yPhysRes
_yPhysRes	dd ?			; DATA XREF: GetResolutions(x)+40w
					; NpPrintGivenDC(x)+E2r ...
; int xPhysRes
_xPhysRes	dd ?			; DATA XREF: GetResolutions(x)+36w
					; NpPrintGivenDC(x)+E8r ...
_yPixInch	dd ?			; DATA XREF: GetResolutions(x)+2Cw
					; NpPrintGivenDC(x)+A0r
_yPrintRes	dd ?			; DATA XREF: GetResolutions(x)+22w
					; PrintHeaderFooter(x,x):loc_100668Er ...
_xPrintRes	dd ?			; DATA XREF: GetResolutions(x)+18w
					; PrintHeaderFooter(x,x)+97r ...
		align 10h
; struct _SYSTEMTIME PrintTime
_PrintTime	_SYSTEMTIME <?>		; DATA XREF: NpPrintGivenDC(x)+5Do
; wchar_t chBuff
_chBuff		dw ?			; DATA XREF: TranslateString(x)+85w
					; TranslateString(x)+147w ...
		align 4
		dd 81h dup(?)
; const	WCHAR word_1009D08
word_1009D08	dw ?			; DATA XREF: PrintHeaderFooter(x,x):loc_10066CEr
					; PrintHeaderFooter(x,x)+84o
		align 4
		dd 81h dup(?)
; const	WCHAR word_1009F10
word_1009F10	dw ?			; DATA XREF: PrintHeaderFooter(x,x):loc_1006722r
					; PrintHeaderFooter(x,x)+D9o
		align 4
		dd 83h dup(?)
; struct tagPOINT rtMargin
_rtMargin	tagPOINT <?>		; DATA XREF: NpPrintGivenDC(x)+114o
					; NpPrintGivenDC(x)+215r ...
dword_100A128	dd ?			; DATA XREF: NpPrintGivenDC(x)+256r
dword_100A12C	dd ?			; DATA XREF: NpPrintGivenDC(x)+296r
_yPrintChar	dd ?			; DATA XREF: PrintHeaderFooter(x,x)+3Cr
					; NpPrintGivenDC(x)+236w ...
_fAbort		dd ?			; DATA XREF: AbortProc(x,x):loc_1005DEFr
					; AbortProc(x,x)+56r ...
; HWND hAbortDlgWnd
_hAbortDlgWnd	dd ?			; DATA XREF: AbortProc(x,x)+20r
					; DestroyAbortWnd()+Er	...
_tabSize	dd ?			; DATA XREF: NpPrintGivenDC(x)+226w
					; NpPrintGivenDC(x)+4DAr
; WCHAR	szPrinterName
_szPrinterName	dw ?			; DATA XREF: ProcessShellOptions(x,x)+A9w
					; ProcessShellOptions(x,x):loc_10043B7w ...
		align 4
		dd 7Fh dup(?)
; const	WCHAR chPageTextTemp
_chPageTextTemp	dw ?			; DATA XREF: NPCommand(x,x,x)+2BBo
					; PageSetupHookProc(x,x,x,x)+103o
		align 4
		dd 13h dup(?)
; const	WCHAR word_100A390
word_100A390	dw ?			; DATA XREF: NPCommand(x,x,x)+2C7o
					; PageSetupHookProc(x,x,x,x)+119o
		align 4
		dd 13h dup(?)
; WCHAR	chPageText
_chPageText	dw ?			; DATA XREF: NPCommand(x,x,x)+2C0o
					; SaveGlobals()+163o ...
		align 4
		dd 13h dup(?)
; WCHAR	String1
String1		dw ?			; DATA XREF: NPCommand(x,x,x)+2CCo
					; SaveGlobals()+175o ...
		align 4
		dd 13h dup(?)
; HANDLE fp
_fp		dd ?			; DATA XREF: NPCommand(x,x,x)+206r
					; NPCommand(x,x,x)+22Fw ...
_wHlpMsg	dd ?			; DATA XREF: NPInit(x,x,x,x)+47w
_wFRMsg		dd ?			; DATA XREF: NPWndProc(x,x,x,x):loc_10036CAr
					; NPInit(x,x,x,x)+33w
		dd 5 dup(?)
; struct tagPSDW g_PageSetupDlg
_g_PageSetupDlg	tagPSDW	<?>		; DATA XREF: NPCommand(x,x,x)+27Bo
					; NPInit(x,x,x,x)+DCw ...
		align 10h
; struct tagFINDREPLACEW FR
_FR		tagFINDREPLACEW	<?>	; DATA XREF: NPCommand(x,x,x):loc_1002F71o
					; NPCommand(x,x,x)+450o ...
_g_ftSaveAs	dd ?			; DATA XREF: NpSaveDialogHookProc(x,x,x,x)+42w
					; NpSaveDialogHookProc(x,x,x,x)+A5w ...
		dd 5 dup(?)
; WCHAR	szSaveFilterSpec
_szSaveFilterSpec dd 28h dup(?)		; DATA XREF: CheckSave(x)+180o
					; NPCommand(x,x,x)+EFo	...
; WCHAR	szOpenFilterSpec
_szOpenFilterSpec dd 28h dup(?)		; DATA XREF: NPCommand(x,x,x)+1C0o
					; NPInit(x,x,x,x):loc_1004A9Bo
; struct tagOFNW OFN
_OFN		tagOFNW	<?>		; DATA XREF: CheckSave(x)+112o
					; NPCommand(x,x,x)+12Ao ...
		dd 3 dup(?)
; HACCEL hAccel
_hAccel		dd ?			; DATA XREF: WinMain(x,x,x,x)+B2r
					; ProcessSetupOption(x)+5Fw ...
; HMENU	hSysMenuSetup
_hSysMenuSetup	dd ?			; DATA XREF: NPWndProc(x,x,x,x)+43Cr
					; ProcessSetupOption(x)+47w
_dyStatus	dd ?			; DATA XREF: NPSize(x,x)+21r
					; NPInit(x,x,x,x)+26Dw
		dd 7 dup(?)
_szReplace	dd 40h dup(?)		; DATA XREF: NPCommand(x,x,x)+3F9o
; const	WCHAR szSearch
_szSearch	dw ?			; DATA XREF: NPCommand(x,x,x)+40Co
					; NPCommand(x,x,x):loc_1002FB6r ...
		align 4
		dd 3Fh dup(?)
; const	WCHAR szFileName
_szFileName	dw ?			; DATA XREF: CheckSave(x)+7Do
					; CheckSave(x)+14Do ...
		align 4
		dd 87h dup(?)
; LOGFONTW FontStruct
_FontStruct	LOGFONTW <?>		; DATA XREF: NPCommand(x,x,x)+4CBo
					; NPCommand(x,x,x)+4FEw ...
; HGDIOBJ hFont
_hFont		dd ?			; DATA XREF: NPCommand(x,x,x)+57Cr
					; NPCommand(x,x,x)+593w ...
; HINSTANCE hInstanceNP
_hInstanceNP	dd ?			; DATA XREF: NPCommand(x,x,x)+3B1r
					; NPCommand(x,x,x)+7BCr ...
; HCURSOR hWaitCursor
_hWaitCursor	dd ?			; DATA XREF: NPCommand(x,x,x)+561r
					; NPWndProc(x,x,x,x)+2D1r ...
; HCURSOR hStdCursor
_hStdCursor	dd ?			; DATA XREF: NPCommand(x,x,x):loc_1003131r
					; NPWndProc(x,x,x,x)+305r ...
; HLOCAL hEdit
_hEdit		dd ?			; DATA XREF: WinMain(x,x,x,x)+EEr
					; NPInit(x,x,x,x)+3B0w	...
_chMerge	dw ?			; DATA XREF: MergeStrings(x,x,x)+26r
					; InitStrings(x)+93w
		align 4
_lGotoLine	dd ?			; DATA XREF: GotoDlgProc(x,x,x,x)+B0w
					; GotoDlgProc(x,x,x,x)+C6r ...
___@@_PchSym_@00@UckhkUhsvooUlhhsvooUzxxvhlibUmlgvkzwUlyqUrDIGUkivxlnkOlyq@notepad dd ?
___onexitend	dd ?
___onexitbegin	dd ?
__adjust_fdiv	dd 117h	dup(?)
_data		ends


		end _WinMainCRTStartup
