;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	F12E514AEA35CD28BA6C080E707550F9
; Input	CRC32 :	4A9CA85A

; File Name   :	c:\Users\farhadi\Desktop\dll4\sporder.dll
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	67340000
; Section 1. (virtual address 00001000)
; Virtual size			: 00000D45 (   3397.)
; Section size in file		: 00000E00 (   3584.)
; Offset to raw	data for section: 00000600
; Flags	60000020: Text Executable Readable
; Alignment	: default
;
; Imports from ADVAPI32.dll
;

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Externs
; _idata
; LSTATUS __stdcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY	phkResult)
		extrn RegOpenKeyExA:dword ; CODE XREF: WSCWriteProviderOrder+AEp
					; WSCWriteProviderOrder+171p ...
; LSTATUS __stdcall RegQueryValueExA(HKEY hKey,	LPCSTR lpValueName, LPDWORD lpReserved,	LPDWORD	lpType,	LPBYTE lpData, LPDWORD lpcbData)
		extrn RegQueryValueExA:dword ; CODE XREF: WSCWriteProviderOrder+DBp
					; WSCWriteProviderOrder+253p ...
; LSTATUS __stdcall RegCloseKey(HKEY hKey)
		extrn RegCloseKey:dword	; CODE XREF: WSCWriteProviderOrder+E6p
					; WSCWriteProviderOrder+26Cp ...
; LSTATUS __stdcall RegEnumKeyExA(HKEY hKey, DWORD dwIndex, LPSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPSTR lpClass,	LPDWORD	lpcchClass, PFILETIME lpftLastWriteTime)
		extrn RegEnumKeyExA:dword ; CODE XREF: WSCWriteProviderOrder+1BFp
					; WSCWriteNameSpaceOrder+1B8p
					; DATA XREF: ...
; LSTATUS __stdcall RegSetValueExA(HKEY	hKey, LPCSTR lpValueName, DWORD	Reserved, DWORD	dwType,	const BYTE *lpData, DWORD cbData)
		extrn RegSetValueExA:dword ; CODE XREF:	WSCWriteProviderOrder+398p
					; sub_67341611+29p ...

;
; Imports from KERNEL32.dll
;
; HANDLE __stdcall OpenMutexA(DWORD dwDesiredAccess, BOOL bInheritHandle, LPCSTR lpName)
		extrn OpenMutexA:dword	; CODE XREF: WSCWriteProviderOrder+78p
					; WSCWriteNameSpaceOrder+78p
					; DATA XREF: ...
; HANDLE __stdcall CreateMutexA(LPSECURITY_ATTRIBUTES lpMutexAttributes, BOOL bInitialOwner, LPCSTR lpName)
		extrn CreateMutexA:dword ; CODE	XREF: WSCWriteProviderOrder+6Bp
					; WSCWriteNameSpaceOrder+6Bp
					; DATA XREF: ...
; int __stdcall	lstrcmpA(LPCSTR	lpString1, LPCSTR lpString2)
		extrn lstrcmpA:dword	; CODE XREF: WSCWriteProviderOrder+104p
					; WSCWriteNameSpaceOrder+104p
					; DATA XREF: ...
; LPSTR	__stdcall lstrcpyA(LPSTR lpString1, LPCSTR lpString2)
		extrn lstrcpyA:dword	; CODE XREF: WSCWriteProviderOrder+120p
					; WSCWriteProviderOrder+1E6p ...
; int __stdcall	lstrlenA(LPCSTR	lpString)
		extrn lstrlenA:dword	; CODE XREF: sub_67341611+Cp
					; sub_67341611+53p
					; DATA XREF: ...
; DWORD	__stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
		extrn WaitForSingleObject:dword	; CODE XREF: WSCWriteProviderOrder+83p
					; WSCWriteNameSpaceOrder+83p
					; DATA XREF: ...
; LPSTR	__stdcall lstrcatA(LPSTR lpString1, LPCSTR lpString2)
		extrn lstrcatA:dword	; CODE XREF: WSCWriteProviderOrder+135p
					; WSCWriteProviderOrder+143p ...
; BOOL __stdcall ReleaseMutex(HANDLE hMutex)
		extrn ReleaseMutex:dword ; CODE	XREF: WSCWriteProviderOrder+3BFp
					; WSCWriteNameSpaceOrder+3E5p
					; DATA XREF: ...
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; CODE XREF: WSCWriteProviderOrder+3C8p
					; WSCWriteNameSpaceOrder+3EEp
					; DATA XREF: ...
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn GetProcAddress:dword ; CODE XREF:	WSCWriteProviderOrder+29p
					; WSCWriteNameSpaceOrder+29p
					; DATA XREF: ...
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn FreeLibrary:dword	; CODE XREF: WSCWriteProviderOrder+41p
					; WSCWriteNameSpaceOrder+41p
					; DATA XREF: ...
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn LoadLibraryA:dword ; CODE	XREF: WSCWriteProviderOrder+15p
					; WSCWriteNameSpaceOrder+15p
					; DATA XREF: ...


; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	para public 'CODE' use32
		assume cs:_text
		;org 6734104Ch
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
		dd 2 dup(0)
		dd 37AB765Eh, 0
		dd 4, 110h, 0
		dd 2000h, 0
		dd 37AB765Eh, 0
		dd 3, 50h, 0
		dd 2110h, 0
		dd 37AB765Eh, 0
		dd 6, 2	dup(0)
		dd 2160h, 0
		dd 37AB765Eh, 0
		dd 2, 1Ch, 0
		db 90h
		db 0FEh, 9Eh, 0FFh
; char aPackedcatalogi[]
aPackedcatalogi	db 'PackedCatalogItem',0 ; DATA XREF: WSCWriteProviderOrder+24Bo
					; WSCWriteProviderOrder+390o
		align 4
; char asc_673410D4[]
asc_673410D4	db '\',0                ; DATA XREF: WSCWriteProviderOrder+128o
					; WSCWriteNameSpaceOrder+128o
		align 4
; char ProcName[]
ProcName	db 'WSCWriteProviderOrder',0 ; DATA XREF: WSCWriteProviderOrder+23o
		align 10h
; char LibFileName[]
LibFileName	db 'WS2_32.DLL',0       ; DATA XREF: WSCWriteProviderOrder+10o
					; WSCWriteNameSpaceOrder+10o
		align 4
; char aWscwritename_0[]
aWscwritename_0	db 'WSCWriteNameSpaceOrder',0 ; DATA XREF: WSCWriteNameSpaceOrder+23o
		align 10h
		assume fs:nothing, gs:nothing


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	WSCWriteProviderOrder(int, LPCSTR lpSubKey)
		public WSCWriteProviderOrder
WSCWriteProviderOrder proc near		; DATA XREF: .text:off_67341CF8o

var_2384	= dword	ptr -2384h
var_13E4	= byte ptr -13E4h
String2		= byte ptr -444h
Name		= byte ptr -340h
String1		= byte ptr -23Ch
SubKey		= byte ptr -138h
ftLastWriteTime	= _FILETIME ptr	-34h
cchName		= dword	ptr -2Ch
Type		= dword	ptr -28h
hObject		= dword	ptr -24h
phkResult	= dword	ptr -20h
var_1C		= dword	ptr -1Ch
lpData		= dword	ptr -18h
cbData		= dword	ptr -14h
dwIndex		= dword	ptr -10h
lpString1	= dword	ptr -0Ch
hKey		= dword	ptr -8
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
lpSubKey	= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		mov	eax, 2384h
		call	__alloca_probe
		push	ebx
		push	esi
		push	edi
		push	offset LibFileName ; "WS2_32.DLL"
		call	ds:LoadLibraryA
		mov	ebx, eax
		xor	edi, edi
		cmp	ebx, edi
		jz	short loc_67341175
		push	offset ProcName	; "WSCWriteProviderOrder"
		push	ebx		; hModule
		call	ds:GetProcAddress
		mov	esi, eax
		cmp	esi, edi
		jz	short loc_67341166
		push	[ebp+lpSubKey]
		push	[ebp+arg_0]
		call	esi
		mov	[ebp+var_4], eax

loc_67341166:				; CODE XREF: WSCWriteProviderOrder+33j
		push	ebx		; hLibModule
		call	ds:FreeLibrary
		cmp	esi, edi
		jnz	loc_673414F4

loc_67341175:				; CODE XREF: WSCWriteProviderOrder+21j
		cmp	[ebp+lpSubKey],	3E8h
		mov	[ebp+var_4], edi
		jbe	short loc_67341189
		push	8
		pop	eax
		jmp	loc_673414F7
; ---------------------------------------------------------------------------

loc_67341189:				; CODE XREF: WSCWriteProviderOrder+59j
		mov	esi, offset Name ; "sporder.dll"
		push	esi		; lpName
		push	edi		; bInitialOwner
		push	edi		; lpMutexAttributes
		call	ds:CreateMutexA
		push	esi		; lpName
		push	edi		; bInheritHandle
		push	100000h		; dwDesiredAccess
		call	ds:OpenMutexA
		push	edi		; dwMilliseconds
		push	eax		; hHandle
		mov	[ebp+hObject], eax
		call	ds:WaitForSingleObject
		cmp	eax, 102h
		jnz	short loc_673411C2
		mov	[ebp+var_4], 2AFAh
		jmp	loc_673414E2
; ---------------------------------------------------------------------------

loc_673411C2:				; CODE XREF: WSCWriteProviderOrder+8Ej
		lea	eax, [ebp+hKey]
		mov	esi, offset String2 ; "SYSTEM\\CurrentControlSet\\Services\\WinSo"...
		push	eax		; phkResult
		push	1		; samDesired
		push	edi		; ulOptions
		push	esi		; lpSubKey
		push	80000002h	; hKey
		call	ds:RegOpenKeyExA
		cmp	eax, edi
		jnz	loc_673414DF
		lea	eax, [ebp+cbData]
		mov	[ebp+cbData], 104h
		push	eax		; lpcbData
		lea	eax, [ebp+String2]
		push	eax		; lpData
		lea	eax, [ebp+Type]
		push	eax		; lpType
		push	edi		; lpReserved
		push	offset ValueName ; "Current_Protocol_Catalog"
		push	[ebp+hKey]	; hKey
		call	ds:RegQueryValueExA
		push	[ebp+hKey]	; hKey
		mov	ebx, eax
		call	ds:RegCloseKey
		cmp	ebx, edi
		jz	short loc_6734121E
		mov	[ebp+var_4], ebx
		jmp	loc_673414E2
; ---------------------------------------------------------------------------

loc_6734121E:				; CODE XREF: WSCWriteProviderOrder+EEj
		lea	eax, [ebp+String2]
		push	eax		; lpString2
		push	offset String1	; "Protocol_Catalog9"
		call	ds:lstrcmpA
		test	eax, eax
		jnz	loc_673413BA
		mov	ebx, ds:lstrcpyA
		lea	eax, [ebp+SubKey]
		push	esi		; lpString2
		push	eax		; lpString1
		call	ebx ; lstrcpyA
		mov	esi, ds:lstrcatA
		mov	edi, offset asc_673410D4 ; "\\"
		lea	eax, [ebp+SubKey]
		push	edi		; lpString2
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+SubKey]
		push	offset String1	; "Protocol_Catalog9"
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+SubKey]
		push	edi		; lpString2
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+SubKey]
		push	offset aCatalog_entrie ; "Catalog_Entries"
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+hKey]
		push	eax		; phkResult
		push	9		; samDesired
		lea	eax, [ebp+SubKey]
		push	0		; ulOptions
		push	eax		; lpSubKey
		push	80000002h	; hKey
		call	ds:RegOpenKeyExA
		test	eax, eax
		jnz	loc_673414DF
		and	[ebp+dwIndex], eax
		mov	[ebp+var_1C], offset cbData
		mov	[ebp+lpData], offset dword_67381900
		mov	[ebp+lpString1], offset	SubKey

loc_673412BD:				; CODE XREF: WSCWriteProviderOrder+28Ej
		lea	eax, [ebp+ftLastWriteTime]
		and	[ebp+Name], 0
		push	eax		; lpftLastWriteTime
		xor	eax, eax
		push	eax		; lpcchClass
		push	eax		; lpClass
		push	eax		; lpReserved
		lea	eax, [ebp+cchName]
		push	eax		; lpcchName
		lea	eax, [ebp+Name]
		push	eax		; lpName
		mov	[ebp+cchName], 104h
		push	[ebp+dwIndex]	; dwIndex
		push	[ebp+hKey]	; hKey
		call	ds:RegEnumKeyExA
		cmp	eax, 103h
		jz	loc_673413C6
		test	eax, eax
		jnz	loc_673414DF
		lea	eax, [ebp+SubKey]
		push	eax		; lpString2
		lea	eax, [ebp+String1]
		push	eax		; lpString1
		call	ebx ; lstrcpyA
		lea	eax, [ebp+String1]
		push	edi		; lpString2
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+Name]
		push	eax		; lpString2
		lea	eax, [ebp+String1]
		push	eax		; lpString1
		call	esi ; lstrcatA
		lea	eax, [ebp+String1]
		push	eax		; lpString2
		push	[ebp+lpString1]	; lpString1
		call	ebx ; lstrcpyA
		lea	eax, [ebp+phkResult]
		push	eax		; phkResult
		push	9		; samDesired
		lea	eax, [ebp+String1]
		push	0		; ulOptions
		push	eax		; lpSubKey
		push	80000002h	; hKey
		call	ds:RegOpenKeyExA
		test	eax, eax
		jnz	loc_673414DF
		lea	eax, [ebp+cbData]
		mov	[ebp+cbData], 378h
		push	eax		; lpcbData
		lea	eax, [ebp+Type]
		push	[ebp+lpData]	; lpData
		mov	[ebp+Type], 3
		push	eax		; lpType
		push	0		; lpReserved
		push	offset aPackedcatalogi ; "PackedCatalogItem"
		push	[ebp+phkResult]	; hKey
		call	ds:RegQueryValueExA
		mov	edx, [ebp+var_1C]
		mov	ecx, [ebp+cbData]
		test	eax, eax
		mov	[edx], ecx
		jnz	loc_673414DF
		push	[ebp+phkResult]	; hKey
		call	ds:RegCloseKey
		add	[ebp+lpString1], 104h
		inc	[ebp+dwIndex]
		add	[ebp+lpData], 378h
		add	[ebp+var_1C], 4
		cmp	[ebp+lpString1], offset	dword_67381900
		jl	loc_673412BD

loc_673413BA:				; CODE XREF: WSCWriteProviderOrder+10Cj
					; WSCWriteProviderOrder+2AFj ...
		mov	[ebp+var_4], 2726h
		jmp	loc_673414E2
; ---------------------------------------------------------------------------

loc_673413C6:				; CODE XREF: WSCWriteProviderOrder+1CAj
		push	[ebp+hKey]	; hKey
		call	ds:RegCloseKey
		mov	ebx, [ebp+lpSubKey]
		cmp	[ebp+dwIndex], ebx
		jnz	short loc_673413BA
		mov	edx, ebx
		xor	eax, eax
		shl	edx, 2
		mov	ecx, edx
		lea	edi, [ebp+var_13E4]
		mov	esi, ecx
		shr	ecx, 2
		rep stosd
		mov	ecx, esi
		and	ecx, 3
		rep stosb
		mov	ecx, edx
		xor	eax, eax
		lea	edi, [ebp+var_2384]
		shr	ecx, 2
		rep stosd
		mov	ecx, edx
		and	ecx, 3
		rep stosb
		xor	edi, edi
		test	ebx, ebx
		jbe	short loc_67341450
		mov	[ebp+lpSubKey],	offset dword_67381A28

loc_67341417:				; CODE XREF: WSCWriteProviderOrder+328j
		mov	eax, [ebp+lpSubKey]
		mov	esi, [ebp+arg_0]
		xor	edx, edx
		mov	ecx, [eax]
		lea	eax, [ebp+var_13E4]
		sub	esi, eax

loc_67341429:				; CODE XREF: WSCWriteProviderOrder+31Cj
		lea	eax, [ebp+edx*4+var_13E4]
		cmp	ecx, [esi+eax]
		jnz	short loc_6734143F
		or	dword ptr [eax], 0FFFFFFFFh
		mov	[ebp+edx*4+var_2384], edi

loc_6734143F:				; CODE XREF: WSCWriteProviderOrder+30Dj
		inc	edx
		cmp	edx, ebx
		jb	short loc_67341429
		add	[ebp+lpSubKey],	378h
		inc	edi
		cmp	edi, ebx
		jb	short loc_67341417

loc_67341450:				; CODE XREF: WSCWriteProviderOrder+2E8j
		xor	ecx, ecx
		test	ebx, ebx
		jbe	short loc_6734146D
		lea	eax, [ebp+var_13E4]

loc_6734145C:				; CODE XREF: WSCWriteProviderOrder+345j
		cmp	dword ptr [eax], 0FFFFFFFFh
		jnz	loc_673413BA
		inc	ecx
		add	eax, 4
		cmp	ecx, ebx
		jb	short loc_6734145C

loc_6734146D:				; CODE XREF: WSCWriteProviderOrder+32Ej
		xor	edi, edi
		test	ebx, ebx
		jbe	short loc_673414E2
		mov	[ebp+lpSubKey],	offset SubKey

loc_6734147A:				; CODE XREF: WSCWriteProviderOrder+3B5j
		mov	esi, [ebp+edi*4+var_2384]
		cmp	esi, edi
		jz	short loc_673414D1
		lea	eax, [ebp+hKey]
		push	eax		; phkResult
		push	2		; samDesired
		push	0		; ulOptions
		push	[ebp+lpSubKey]	; lpSubKey
		push	80000002h	; hKey
		call	ds:RegOpenKeyExA
		test	eax, eax
		jnz	short loc_673414DF
		imul	esi, 378h
		push	cbData[edi*4]	; cbData
		add	esi, offset dword_67381900
		push	esi		; lpData
		push	3		; dwType
		push	eax		; Reserved
		push	offset aPackedcatalogi ; "PackedCatalogItem"
		push	[ebp+hKey]	; hKey
		call	ds:RegSetValueExA
		test	eax, eax
		jnz	short loc_673414DF
		push	[ebp+hKey]	; hKey
		call	ds:RegCloseKey

loc_673414D1:				; CODE XREF: WSCWriteProviderOrder+35Dj
		add	[ebp+lpSubKey],	104h
		inc	edi
		cmp	edi, ebx
		jb	short loc_6734147A
		jmp	short loc_673414E2
; ---------------------------------------------------------------------------

loc_673414DF:				; CODE XREF: WSCWriteProviderOrder+B6j
					; WSCWriteProviderOrder+179j ...
		mov	[ebp+var_4], eax

loc_673414E2:				; CODE XREF: WSCWriteProviderOrder+97j
					; WSCWriteProviderOrder+F3j ...
		push	[ebp+hObject]	; hMutex
		call	ds:ReleaseMutex
		push	[ebp+hObject]	; hObject
		call	ds:CloseHandle

loc_673414F4:				; CODE XREF: WSCWriteProviderOrder+49j
		mov	eax, [ebp+var_4]

loc_673414F7:				; CODE XREF: WSCWriteProviderOrder+5Ej
		pop	edi
		pop	esi
		pop	ebx
		leave
		retn	8
WSCWriteProviderOrder endp