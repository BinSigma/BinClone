//
// +-------------------------------------------------------------------------+
// |   This file has been generated by The Interactive Disassembler (IDA)    |
// |	    Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	     |
// |			  License info:	48-B231-7414-99			     |
// |			NCFTA Canada/Concordia University		     |
// +-------------------------------------------------------------------------+
//
// Input MD5   : 1B3029C4A67B28FEEAF47BEBCE9BE382
// Input CRC32 : F445191D

// File	Name   : c:\Users\farhadi\Desktop\Sample\samples\1b3029c4a67b28feeaf47bebce9be382
// Format      : Microsoft.Net assembly

// Processor	   : cli

.assembly Stup
{
  .hash	algorithm 0x00008004
  .ver 8:5:0:0
}
.module	extern embedded.netmodule
.assembly extern mscorlib
{
  .publickeytoken = (
   B7 7A 5C 56 19 34 E0	89)
  .hash	      =	(
   15 3B 95 BD 20 6C 05	9A 6E BE E7 C0 88 9E 7B	0C
   64 E8 E8 1B)
  .ver 2:0:0:0
}
.assembly extern Microsoft.VisualC
{
  .publickeytoken = (
   B0 3F 5F 7F 11 D5 0A	3A)
  .hash	      =	(
   02 EF C7 50 8D D1 75	7C 08 11 30 9A DA 13 32	41
   59 73 A8 0F)
  .ver 8:0:0:0
}
.assembly extern System
{
  .publickeytoken = (
   B7 7A 5C 56 19 34 E0	89)
  .hash	      =	(
   02 0E 48 78 1C 00 35	09 80 41 11 85 0C 97 06	D5
   E5 25 A9 43)
  .ver 2:0:0:0
}
.assembly extern System.Data
{
  .publickeytoken = (
   B7 7A 5C 56 19 34 E0	89)
  .hash	      =	(
   D3 DA 32 5C F3 1C ED	A5 F6 FB 6A 92 B8 18 19	55
   EC 6A 87 52)
  .ver 2:0:0:0
}
.assembly extern System.Xml
{
  .publickeytoken = (
   B7 7A 5C 56 19 34 E0	89)
  .hash	      =	(
   BF 3C E3 CA 79 EC F6	D6 8B 6B F3 8D 5F 03 8C	01
   56 EE 43 7F)
  .ver 2:0:0:0
}
.assembly extern PvLogiciels.dotNetProtector.Runtime
{
  .publickeytoken = (
   6C 9A 52 C9 A8 32 F7	9B)
  .hash	      =	(
   6F 52 62 94 C0 99 18	26 88 C9 46 2C F7 46 4A	A0
   68 D8 D1 66)
  .ver 5:5:0:0
}
.assembly extern mscorlib
{
  .publickeytoken = (
   B7 7A 5C 56 19 34 E0	89)
  .ver 1:0:0:5000
}
.file embedded.netmodule
  .hash	      =	(
   3D 7C 90 BC B4 51 11	66 92 F4 07 8B DF DE AE	95
   1C BA 79 C1)
.module	EmbeddedRuntime.exe // GUID {4B47A1CB-CB7F-48AE-B796-614CD24341D7}


// Segment type: Pure code
  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ æ // RVA =	0008B360
					// DATA	XREF: ?™+13r ?™+23r ...

  .field assembly static int32 ∫	// DATA	XREF: Åº+1w Åê+7r

  .field assembly static hasfieldrva void(()) †	// RVA = 0008B33C

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ ? // RVA =	0008B364
					// DATA	XREF: sub_280+12r

  .field assembly static valuetype ?º.™	ÅÁ // DATA XREF: ≠+1w Å˚+Dw ...

  .field assembly static hasfieldrva void(()) ?£ // RVA	= 0008B350

  .field assembly static bool ??	// DATA	XREF: Å•+1w Å©+Aw ...

  .field assembly static hasfieldrva void(()) ÅÎ // RVA	= 0008B340

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ ÅÃ	// RVA = 0008B334
					// DATA	XREF: Å˚+18r

  .field assembly static valuetype ?º.™	Å« // DATA XREF: £+1w ?§+42w ...

  .field assembly static hasfieldrva void(()) ÅØ // RVA	= 0008B348

  .field assembly static int32 Å?	// DATA	XREF: Å”+1w Å©+C7w ...

  .field assembly static hasfieldrva void(()) Å? // RVA	= 0008B338

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ Û // RVA =	0008B358
					// DATA	XREF: Å˚+1Dr

  .field assembly static valuetype ?º.™	Ì // DATA XREF:	Åè+1w sub_280+Dw ...

  .field assembly static hasfieldrva void(()) ?± // RVA	= 0008B344

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ ¥ // RVA =	0008B368
					// DATA	XREF: sub_280+17r

  .field assembly static valuetype ?º.™	® // DATA XREF:	¶+1w ?è+Dw ...

  .field assembly static hasfieldrva void(()) è	// RVA = 0008B34C

  .field assembly static hasfieldrva bool ÅÕ //	RVA = 000A1923 // DATA XREF: ??+7r
					// ?è+2Ew ...

  .field assembly static hasfieldrva bool ?? //	RVA = 000A1920 // DATA XREF: Å˜r
					// Å©+17w ...

  .field assembly static hasfieldrva bool ?? //	RVA = 000A1921 // DATA XREF: ??+15r
					// ?§+12w ...

  .field assembly static hasfieldrva int32 ÅÛ // RVA = 000A191C	// DATA	XREF: Åê+14r
					// ˛r ...

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) unsigned	int32 Å· // RVA	= 0008B390

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) unsigned	int32 Å— // RVA	= 0008B394

  .field assembly static hasfieldrva valuetype ?º.™ Å¬ // RVA =	000A1004 // DATA XREF: Å‘r
					// Å‘+2Dw ...

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) unsigned	int32 ?µ // RVA	= 0008B38C

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) unsigned	int32 Å† // RVA	= 0008B398

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) unsigned	int32 Å? // RVA	= 0008B39C

  .field assembly static hasfieldrva valuetype ?º.™ Å? // RVA =	000A1000 // DATA XREF: ?™r
					// ?™+2Dw ...

  .field assembly static hasfieldrva bool Ú // RVA = 000A1922 // DATA XREF: ?§+83w
					// Å∞+Br ...

  .field assembly static hasfieldrva modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ¯.¬ € // RVA =	0008B35C
					// DATA	XREF: ?™+8r ?™+Er ...

  .field public	static hasfieldrva int32** ‘ //	RVA = 0008B3A0 // DATA XREF: Å‚r

  .field public	static hasfieldrva int32** ¿ //	RVA = 0008B3A4 // DATA XREF: Å?:loc_52Cr

  .field assembly static hasfieldrva cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32(()) ? // RVA =	0008B328

  .field assembly static unsigned int32	? // DATA XREF:	sub_A90+2Bw ˚+1r

  .field assembly static valuetype Ë.??	? // DATA XREF:	sub_7D0+6r sub_7D0+Dr	...

  .field assembly static hasfieldrva void(()) ?∑ // RVA	= 0008B354

  .field assembly static void(())* ??	// DATA	XREF: sub_A90+1Aw sub_A90+1Fr	...

  .field assembly static hasfieldrva unsigned int32 ?? // RVA =	000A1A20
					// DATA	XREF: sub_A20+2Dw sub_A70+1r

  .field assembly static hasfieldrva void(())* ?ç // RVA = 000A1A1C // DATA XREF: sub_9B0+Fr
					// sub_9B0+16r	...

  .field assembly static hasfieldrva void(())* ?? // RVA = 000A1A18 // DATA XREF: sub_9B0r
					// sub_9B0+8r ...

  .field assembly static void(())* Å¸	// DATA	XREF: sub_A90+24w Õ+Fr ...

  .field assembly static hasfieldrva int32 ÅÙ // RVA = 000A1AA0	// DATA	XREF: start+44r

  .field assembly static hasfieldrva int32 ÅÒ // RVA = 000A1AF8	// DATA	XREF: start+38r

  .field assembly static hasfieldrva int32 ÅÌ // RVA = 000A1124	// DATA	XREF: start+27r

  .field assembly static hasfieldrva int32 ÅÊ // RVA = 000A1130	// DATA	XREF: ?År

  .field assembly static hasfieldrva int32 Å‡ // RVA = 000A1BC8	// DATA	XREF: start+16r

  .field assembly static hasfieldrva int32 Å? // RVA = 000A1BDC	// DATA	XREF: start+Br

  .field assembly static hasfieldrva int32 Å€ // RVA = 000A2064

  .field public	static hasfieldrva valuetype ¯.ß Åƒ // RVA = 0008B320 // DATA XREF: Å‘+3Fr
					// Å‘+4Fr ...

  .field public	static hasfieldrva modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 È // RVA	= 000A113C
					// DATA	XREF: ?+2r ê+15r

  .field public	static hasfieldrva valuetype ¯.ß ‚ // RVA = 0008B304
					// DATA	XREF: Å‘:loc_174r Å‘+3Ar ...

  .field public	static hasfieldrva valuetype ¯.? › // RVA = 0008B324 //	DATA XREF: Å‘+8r
					// Å‘+Er ...

  .field public	static hasfieldrva modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑ // RVA = 000A21B0
					// DATA	XREF: ??+1Er ?§+27r ...

  .field public	static hasfieldrva valuetype ¯.? Å≤ // RVA = 0008B330 // DATA XREF: Å‘+13r
					// Å‘+23r ...

  .field public	static hasfieldrva modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	void* ÅÆ // RVA	= 000A21B4
					// DATA	XREF: Å©+45r Å©+99r

  .field public	static hasfieldrva modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™ // RVA = 000A1138
					// DATA	XREF: œ+2r √+2r ...

  .field public	static hasfieldrva cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())* Å§ // RVA = 000A21A8

  .field public	static hasfieldrva cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())* Å° // RVA = 000A21AC


  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool œ()
  {
    .maxstack 2
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.m1
    bne.un.s loc_4D
    ldc.i4.0
    br.s loc_4E

loc_4D:					// CODE	XREF: œ+8j
    ldc.i4.1

loc_4E:					// CODE	XREF: œ+Bj
    conv.u1
    ret
  }
  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool √()
  {
    .maxstack 2
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.1
    ceq
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ∞()
  {
    .maxstack 2
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.0
    ceq
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?()
  {
    .maxstack 2
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 È
    ldc.i4.m1
    bne.un.s loc_7D
    ldc.i4.0
    br.s loc_7E

loc_7D:					// CODE	XREF: ?+8j
    ldc.i4.1

loc_7E:					// CODE	XREF: ?+Bj
    conv.u1
    ret
  }
  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ê()
					// CODE	XREF: ?§+17p
  {
    .maxstack 2
    .locals (int32 V0)
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.m1
    bne.un.s loc_8D
    ldc.i4.0
    br.s loc_8E

loc_8D:					// CODE	XREF: ê+8j
    ldc.i4.1

loc_8E:					// CODE	XREF: ê+Bj
    conv.u1
    brtrue.s loc_93
    ldc.i4.1
    ret

loc_93:					// CODE	XREF: ê+Fj
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 È
    ldc.i4.m1
    bne.un.s loc_A0
    ldc.i4.0
    br.s loc_A1

loc_A0:					// CODE	XREF: ê+1Bj
    ldc.i4.1

loc_A1:					// CODE	XREF: ê+1Ej
    conv.u1
    brfalse.s loc_A6
    ldc.i4.1
    ret

loc_A6:					// CODE	XREF: ê+22j
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.1
    ceq
    conv.u1
    brtrue.s loc_C4
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	unsigned int32 Å™
    ldc.i4.0
    ceq
    conv.u1
    brtrue.s loc_C4
    ldc.i4.1
    stloc.0
    br.s loc_C6

loc_C4:					// CODE	XREF: ê+31j ê+3Ej
    ldc.i4.0
    stloc.0

loc_C6:					// CODE	XREF: ê+42j
    ldloc.0
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvStdcall) modopt([mscorlib]System.Runtime.CompilerServices.IsLong) int32 Å(void* )
  {
    .maxstack 1
    ldc.i4 0x7FFFFFFF
    box	[mscorlib]System.Int32
    call void [mscorlib]System.GC::KeepAlive(object)
    ldc.i4.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?™()
					// CODE	XREF: ??p
  {
    .maxstack 2
    .locals (void** V0)
    ldsfld valuetype ?º.™ Å?
    ldc.i4.2
    bne.un.s loc_12C
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ €
    stloc.0
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ €
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ æ
    bge.un.s loc_124

loc_10A:				// CODE	XREF: ?™+28j
    ldloc.0
    ldind.i4
    brtrue.s loc_11C
    ldloc.0
    ldc.i4.4
    add
    stloc.0
    ldloc.0
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ æ
    blt.un.s loc_10A
    br.s loc_124

loc_11C:				// CODE	XREF: ?™+1Cj
    ldc.i4.m1
    stsfld valuetype ?º.™ Å?
    ldc.i4.1
    ret

loc_124:				// CODE	XREF: ?™+18j ?™+2Aj
    ldc.i4.0
    stsfld valuetype ?º.™ Å?
    ldc.i4.0
    ret

loc_12C:				// CODE	XREF: ?™+6j
    ldsfld valuetype ?º.™ Å?
    ldc.i4.m1
    ceq
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å‘()
					// CODE	XREF: ??:loc_1CEp
  {
    .maxstack 2
    .locals (void** V0,
	     void** V1)
    ldsfld valuetype ?º.™ Å¬
    ldc.i4.2
    bne.un.s loc_1A8
    ldsflda valuetype ¯.? ›
    stloc.1
    ldsflda valuetype ¯.? ›
    ldsflda valuetype ¯.? Å≤
    bge.un.s loc_174

loc_15A:				// CODE	XREF: Å‘+28j
    ldloc.1
    ldind.i4
    brtrue.s loc_16C
    ldloc.1
    ldc.i4.4
    add
    stloc.1
    ldloc.1
    ldsflda valuetype ¯.? Å≤
    blt.un.s loc_15A
    br.s loc_174

loc_16C:				// CODE	XREF: Å‘+1Cj
    ldc.i4.m1
    stsfld valuetype ?º.™ Å¬
    ldc.i4.1
    ret

loc_174:				// CODE	XREF: Å‘+18j Å‘+2Aj
    ldsflda valuetype ¯.ß ‚
    stloc.0
    ldsflda valuetype ¯.ß ‚
    ldsflda valuetype ¯.ß Åƒ
    bge.un.s loc_1A0

loc_186:				// CODE	XREF: Å‘+54j
    ldloc.0
    ldind.i4
    brtrue.s loc_198
    ldloc.0
    ldc.i4.4
    add
    stloc.0
    ldloc.0
    ldsflda valuetype ¯.ß Åƒ
    blt.un.s loc_186
    br.s loc_1A0

loc_198:				// CODE	XREF: Å‘+48j
    ldc.i4.m1
    stsfld valuetype ?º.™ Å¬
    ldc.i4.1
    ret

loc_1A0:				// CODE	XREF: Å‘+44j Å‘+56j
    ldc.i4.0
    stsfld valuetype ?º.™ Å¬
    ldc.i4.0
    ret

loc_1A8:				// CODE	XREF: Å‘+6j
    ldsfld valuetype ?º.™ Å¬
    ldc.i4.m1
    ceq
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ??()
					// CODE	XREF: Å©+7Fp
  {
    .maxstack 1
    .locals (int32 V0)
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?™()
    brfalse.s loc_1CE
    ldsfld bool	ÅÕ
    brfalse.s loc_1E5

loc_1CE:				// CODE	XREF: ??+5j
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å‘()
    brfalse.s loc_1E9
    ldsfld bool	??
    brtrue.s loc_1E9
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    brtrue.s loc_1E9

loc_1E5:				// CODE	XREF: ??+Cj
    ldc.i4.1
    stloc.0
    br.s loc_1EB

loc_1E9:				// CODE	XREF: ??+13j ??+1Aj ...
    ldc.i4.0
    stloc.0

loc_1EB:				// CODE	XREF: ??+27j
    ldloc.0
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å˜()
  {
    .maxstack 1
    ldsfld bool	??
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å‚()
					// CODE	XREF: ?∏+Cp
  {
    .maxstack 2
    ldsfld int32** ‘
    ldc.i4.0
    call T0x600005F
    ret
  }

  .method assembly static void Å”()
  {
    .maxstack 1
    ldc.i4.0
    stsfld int32 Å?
    ret
  }

  .method assembly static void Åº()
  {
    .maxstack 1
    ldc.i4.0
    stsfld int32 ∫
    ret
  }

  .method assembly static void Å•()
  {
    .maxstack 1
    ldc.i4.0
    stsfld bool	??
    ret
  }

  .method assembly static void Åè()
  {
    .maxstack 1
    ldc.i4.0
    stsfld valuetype ?º.™ Ì
    ret
  }

  .method assembly static void £()
  {
    .maxstack 1
    ldc.i4.0
    stsfld valuetype ?º.™ Å«
    ret
  }

  .method assembly static void ¶()
  {
    .maxstack 1
    ldc.i4.0
    stsfld valuetype ?º.™ ®
    ret
  }

  .method assembly static void ≠()
  {
    .maxstack 1
    ldc.i4.0
    stsfld valuetype ?º.™ ÅÁ
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
					// CODE	XREF: Å©+A8p
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load during vtable initialization.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    ldc.i4.1
    stsfld valuetype ?º.™ Ì
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ ?
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ ¥
    call void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* , modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* )
    ldc.i4.2
    stsfld valuetype ?º.™ Ì
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?∏(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Å©+87p
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load while attempting to initialize the default appdomain.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å‚()
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?§(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Å©+B5p
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load during native initialization.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å∏()
    ldc.i4.1
    stsfld bool	??
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ê()
    brtrue.s loc_2F5
    ldc.i4.s 0x21
    call T0x6000057

loc_2F5:				// CODE	XREF: ?§+1Cj
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    ldc.i4.1
    bne.un.s loc_308
    ldc.i4.s 0x21
    call T0x6000057
    br.s loc_35E

loc_308:				// CODE	XREF: ?§+2Dj
    volatile.
    ldsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    brtrue.s loc_35E
    ldc.i4.1
    stsfld valuetype ?º.™ Å«
    ldc.i4.1
    volatile.
    stsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    ldsflda valuetype ¯.? ›
    ldsflda valuetype ¯.? Å≤
    call int32 ??(cdecl	modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl)	int32(())* , cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32(())* )
    brfalse.s loc_33B
    ldarg.0
    call string	?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype ?º.Œ*)
    call T0x600005B

loc_33B:				// CODE	XREF: ?§+5Ej
    ldsflda valuetype ¯.ß ‚
    ldsflda valuetype ¯.ß Åƒ
    call void ?(cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())*	, cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())* )
    ldc.i4.2
    volatile.
    stsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    ldc.i4.1
    stsfld bool	Ú
    ldc.i4.2
    stsfld valuetype ?º.™ Å«

loc_35E:				// CODE	XREF: ?§+36j ?§+3Fj
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?è(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Å©+BBp
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load during process initialization.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    ldc.i4.1
    stsfld valuetype ?º.™ ®
    call int32 Å?()
    pop
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ €
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ æ
    call void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* , modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* )
    ldc.i4.2
    stsfld valuetype ?º.™ ®
    ldc.i4.1
    stsfld bool	ÅÕ
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Å˚(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Å©+C1p
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load during appdomain initialization.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    ldc.i4.1
    stsfld valuetype ?º.™ ÅÁ
    call int32 Å?()
    pop
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ ÅÃ
    ldsflda modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	¯.¬ Û
    call void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* , modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* )
    ldc.i4.2
    stsfld valuetype ?º.™ ÅÁ
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ÅÂ(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Å©+CDp
  {
    .maxstack 2
    ldarg.0
    ldstr "The C++ module failed to load during registration for the unload events.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    ldnull
    ldftn void Åê(object , class [mscorlib]System.EventArgs )
    newobj instance void [mscorlib]System.EventHandler::.ctor(object, native int)
    call T0x600005E
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Å©(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: Ó+29p
  {
    .maxstack 4
    .locals (int32 V0,
	     void* V1,
	     int32 V2,
	     void* V3,
	     native int	V4,
	     native int	V5,
	     native int	V6)
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance bool [mscorlib]System.AppDomain::IsDefaultAppDomain()
    stsfld bool	??
    ldsfld bool	??
    brfalse.s loc_40C
    ldc.i4.1
    stsfld bool	??

loc_40C:				// CODE	XREF: Å©+14j
    call T0x600005C
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Åø()
    stloc.3
    ldc.i4.0
    stloc.2
    ldc.i4.0
    stloc.0
    call void [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::PrepareConstrainedRegions()

loc_420:				// CODE	XREF: Å©:loc_466j
  .try {
    ldloc.0
    brtrue.s loc_468
  .try {
    leave.s loc_459
  }
  finally  {
    ldc.i4.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(int32)
    stloc.s 6
    ldloc.3
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.s 5
    ldsflda modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile) void* ÅÆ
    ldloc.s 5
    ldloc.s 6
    call native	int [mscorlib]System.Threading.Interlocked::CompareExchange(native int&, native	int, native int)
    call void* [mscorlib]System.IntPtr::op_Explicit(native int)
    stloc.1
    ldloc.1
    brtrue.s loc_450
    ldc.i4.1
    stloc.0
    br.s loc_458

loc_450:				// CODE	XREF: Å©+5Aj
    ldloc.1
    ldloc.3
    bne.un.s loc_458
    ldc.i4.1
    stloc.2
    ldc.i4.1
    stloc.0

loc_458:				// CODE	XREF: Å©+5Ej Å©+62j
    endfinally
  }

loc_459:				// CODE	XREF: Å©+33j
    ldloc.0
    brtrue.s loc_466
    ldc.i4 0x3E8
    call T0x6000059

loc_466:				// CODE	XREF: Å©+6Aj
    br.s loc_420

loc_468:				// CODE	XREF: Å©+31j
    ldsfld bool	??
    brtrue.s loc_47C
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ??()
    brfalse.s loc_47C
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?∏(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)

loc_47C:				// CODE	XREF: Å©+7Dj Å©+84j
    leave.s loc_497
  }
  finally  {
    ldloc.2
    brtrue.s loc_496
    ldc.i4.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(int32)
    stloc.s 4
    ldsflda modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile) void* ÅÆ
    ldloc.s 4
    call native	int [mscorlib]System.Threading.Interlocked::Exchange(native int&, native int)
    pop

loc_496:				// CODE	XREF: Å©+8Fj
    endfinally
  }

loc_497:				// CODE	XREF: Å©:loc_47Cj
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
    ldsfld bool	??
    brfalse.s loc_4B0
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?§(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ?è(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)

loc_4B0:				// CODE	XREF: Å©+B2j
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Å˚(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
    ldc.i4.1
    stsfld int32 Å?
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ÅÂ(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å¡()
					// CODE	XREF: ˛+Fp
  {
    .maxstack 0
    call void Õ()
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvStdcall) modopt([mscorlib]System.Runtime.CompilerServices.IsLong) int32 Å∞(void* )
					// CODE	XREF: Å?+14p
  {
    .maxstack 1
    call void Å?()
    ldc.i4.0
    stsfld bool	ÅÕ
    ldsfld bool	Ú
    brfalse.s loc_505
    call T0x6000060
    ldc.i4.0
    volatile.
    stsfld modreq([mscorlib]System.Runtime.CompilerServices.IsVolatile)	valuetype ?º.? Å∑
    ldc.i4.0
    stsfld bool	Ú

loc_505:				// CODE	XREF: Å∞+10j
    ldc.i4.0
    stsfld bool	??
    ldc.i4.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å?()
					// CODE	XREF: Åê+29p ˛+17p
  {
    .maxstack 2
    ldsfld bool	??
    brfalse.s loc_537
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance bool [mscorlib]System.AppDomain::IsDefaultAppDomain()
    brfalse.s loc_52C
    ldc.i4.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvStdcall) modopt([mscorlib]System.Runtime.CompilerServices.IsLong) int32 Å∞(void* )
    pop
    br.s loc_537

loc_52C:				// CODE	XREF: Å?+11j
    ldsfld int32** ¿
    ldc.i4.0
    call T0x600005F

loc_537:				// CODE	XREF: Å?+5j Å?+1Aj
    ret
  }

  .method assembly static void Åê(object , class [mscorlib]System.EventArgs )
					// DATA	XREF: ÅÂ+Dr
  {
    .maxstack 2
    ldsfld int32 Å?
    brfalse.s loc_56E
    ldsflda int32 ∫
    ldc.i4.1
    call int32 [mscorlib]System.Threading.Interlocked::Exchange(int32&,	int32)
    brtrue.s loc_56E
    ldsflda int32 ÅÛ
    call int32 [mscorlib]System.Threading.Interlocked::Decrement(int32&)
    ldc.i4.0
    ceq
    call void Õ()
    conv.u1
    brfalse.s loc_56E
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å?()

loc_56E:				// CODE	XREF: Åê+5j Åê+12j ...
    ret
  }

  .method assembly static void ˛(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’* , class [mscorlib]System.Exception)
					// CODE	XREF: Ó+36p Ó+4Fp
  {
    .maxstack 4
    .locals (class [mscorlib]System.Exception V0,
	     bool V1,
	     object V2)
  .try {
    ldsflda int32 ÅÛ
    call int32 [mscorlib]System.Threading.Interlocked::Decrement(int32&)
    ldc.i4.0
    ceq
    conv.u1
    stloc.1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å¡()
    ldloc.1
    brfalse.s loc_58C
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å?()

loc_58C:				// CODE	XREF: ˛+15j
    leave.s loc_5A2
  }
  catch	[mscorlib]System.Exception {
    stloc.0
    ldarg.1
    ldloc.0
    call T0x600005D
    leave.s loc_5A2
  }
  catch	[mscorlib]System.Object	{
    stloc.2
    ldarg.1
    ldnull
    call T0x600005D
    leave.s loc_5A2
  }

loc_5A2:				// CODE	XREF: ˛:loc_58Cj ˛+26j
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Ó(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
					// CODE	XREF: .cctor+Ap
  {
    .maxstack 4
    .locals (bool V0,
	     class [mscorlib]System.Exception V1,
	     object V2)
    ldc.i4.0
    stloc.0
    call void [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::PrepareConstrainedRegions()
  .try {
    ldarg.0
    ldstr "The C++ module failed to load.\n"
    call modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
    pop
    call void [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::PrepareConstrainedRegions()
  .try {
    leave.s loc_5D8
  }
  finally  {
    ldsflda int32 ÅÛ
    call int32 [mscorlib]System.Threading.Interlocked::Increment(int32&)
    pop
    ldc.i4.1
    stloc.0
    endfinally
  }

loc_5D8:				// CODE	XREF: Ó+18j
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Å©(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
    leave.s loc_612
  }
  catch	[mscorlib]System.Exception {
    stloc.1
    ldloc.0
    brfalse.s loc_5EB
    ldarg.0
    ldloc.1
    call void ˛(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’* , class [mscorlib]System.Exception)

loc_5EB:				// CODE	XREF: Ó+32j
    ldarg.0
    call string	?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype ?º.Œ*)
    ldloc.1
    call T0x600005A
    leave.s loc_612
  }
  catch	[mscorlib]System.Object	{
    stloc.2
    ldloc.0
    brfalse.s loc_604
    ldarg.0
    ldnull
    call void ˛(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’* , class [mscorlib]System.Exception)

loc_604:				// CODE	XREF: Ó+4Bj
    ldarg.0
    call string	?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype ?º.Œ*)
    ldnull
    call T0x600005A
    leave.s loc_612
  }

loc_612:				// CODE	XREF: Ó+2Ej Ó+47j
    ret
  }

  .method assembly static specialname rtspecialname void .cctor()
  {
    .maxstack 2
    .locals (valuetype Ë.’ V0)
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) valuetype Ë.’* ◊(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
    pop
  .try {
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void Ó(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
    leave.s loc_63F
  }
  fault	 {
    ldftn modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void  (modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
    ldloca.s 0
    call void Å¶(void((void*)) , void*	)
    endfinally
  }

loc_63F:				// CODE	XREF: .cctor+Fj
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ±(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ*)
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) valuetype Ë.’* ◊(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.’*)
					// CODE	XREF: .cctor+2p
  {
    .maxstack 1
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) valuetype ?º.Œ* º(modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ*)
    pop
    ldarg.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void  (modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.’*)
					// DATA	XREF: .cctor+11r
  {
    .maxstack 1
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ±(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ*)
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) valuetype ?º.Œ* º(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ*)
					// CODE	XREF: ◊+1p
  {
    .maxstack 2
    .locals (native int	V0)
    ldnull
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object)
    call native	int [mscorlib]System.Runtime.InteropServices.GCHandle::op_Explicit(valuetype [mscorlib]System.Runtime.InteropServices.GCHandle)
    stloc.0
    ldarg.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stind.i4
    ldarg.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void ±(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype ?º.Œ*)
					// CODE	XREF: .cctor+21p  +1p
  {
    .maxstack 2
    .locals (native int	V0,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V1)
    ldloca.s 0
    ldarg.0
    ldind.i4
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.0
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::op_Explicit(native int)
    stloc.1
    ldloca.s 1
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldarg.0
    ldc.i4.0
    stind.i4
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.IsImplicitlyDereferenced) valuetype ?º.Œ* §(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ* , string)
					// CODE	XREF: sub_280+6p ?∏+6p ...
  {
    .maxstack 2
    .locals (native int	V0,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V1)
    ldloca.s 0
    ldarg.0
    ldind.i4
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.0
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::op_Explicit(native int)
    stloc.1
    ldloca.s 1
    ldarg.1
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::set_Target(object)
    ldarg.0
    ret
  }

  .method assembly static string ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype ?º.Œ*)
					// CODE	XREF: ?§+61p Ó+3Cp ...
  {
    .maxstack 2
    .locals (native int	V0,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V1)
    ldloca.s 0
    ldarg.0
    ldind.i4
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.0
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::op_Explicit(native int)
    stloc.1
    ldloca.s 1
    call instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
    ret
  }

  .method assembly static int32	??(string[] )
  {
    .entrypoint
    .maxstack 5
    .locals (int32 V0,
	     char** V1,
	     char** V2,
	     int32 V3,
	     valuetype ?º.?∫ V4)
  .try {
    ldc.i4.1
    call T0x6000062
    call T0x6000067
    ldsfld int32 Å?
    stind.i4
    call T0x6000065
    ldsfld int32 Å‡
    stind.i4
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å˛()
    pop
    call void ?Å()
    ldsfld int32 ÅÌ
    ldc.i4.m1
    bne.un.s loc_726
    ldc.i4.m1
    call T0x6000063
    pop

loc_726:				// CODE	XREF: start+2Dj
    ldloca.s 4
    ldsfld int32 ÅÒ
    stind.i4
    ldloca.s 3
    ldloca.s 2
    ldloca.s 1
    ldsfld int32 ÅÙ
    ldloca.s 4
    call T0x6000068
    ldc.i4.0
    bge.s loc_749
    ldc.i4.8
    call T0x6000057

loc_749:				// CODE	XREF: start+51j
    call void ?()
    ldarg.0
    call int32 Å (string[] )
    stloc.0
    leave.s loc_772
  }
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x6000066
    endfilter
  filter 0x67 {
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    stloc.0
    leave.s loc_772
  }

loc_772:				// CODE	XREF: start+65j
    ldloc.0
    ret
  }

  .method assembly static void ?()	// CODE	XREF: start:loc_749p
  {
    .maxstack 2
    .locals (valuetype ?º.?ß* V0,
	     valuetype ?º.??* V1)
    ldc.i4.0
    call T0x6000064
    stloc.1
    ldloc.1
    ldind.u2
    ldc.i4 0x5A4D
    bne.un.s loc_7C9
    ldloc.1
    ldc.i4.s 0x3C
    add
    unaligned. 2
    ldind.i4
    ldloc.1
    add
    stloc.0
    ldloc.0
    ldind.i4
    ldc.i4 0x4550
    bne.un.s loc_7C9
    ldloc.0
    ldc.i4.s 0x18
    add
    ldind.u2
    ldc.i4 0x10B
    bne.un.s loc_7C9
    ldloc.0
    ldc.i4.s 0x18
    add
    ldc.i4.s 0x44
    add
    ldind.u2
    ldc.i4.3
    beq.s loc_7C3
    ldc.i4.2
    call T0x6000062
    br.s loc_7C9

loc_7C3:				// CODE	XREF: sub_780+39j
    ldc.i4.1
    call T0x6000062

loc_7C9:				// CODE	XREF: sub_780+Ej sub_780+22j ...
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ??()
					// CODE	XREF: Å±+7p
  {
    .maxstack 2
    .locals (object V0)
    newobj instance void [mscorlib]System.Object::.ctor()
    stloc.0
    ldsflda valuetype Ë.?? ?
    ldc.i4.0
    stind.i4
    ldsflda valuetype Ë.?? ?
    ldloc.0
    call void ¨(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??* , object)
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?¨()
					// CODE	XREF: Å¿+2p Åπ+2p ...
  {
    .maxstack 2
    ldsflda valuetype Ë.?? ?
    call object	Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	Ë.??*)
    ldnull
    bne.un.s loc_800
    ldc.i4.0
    br.s loc_801

loc_800:				// CODE	XREF: ?¨+Bj
    ldc.i4.1

loc_801:				// CODE	XREF: ?¨+Ej
    conv.u1
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?†()
  {
    .maxstack 1
    ldsflda valuetype Ë.?? ?
    call object	Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	Ë.??*)
    call void [mscorlib]System.Threading.Monitor::Enter(object)
    ret
  }
  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ??()
  {
    .maxstack 1
    ldsflda valuetype Ë.?? ?
    call object	Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	Ë.??*)
    call void [mscorlib]System.Threading.Monitor::Exit(object)
    ret
  }
  .method assembly static void ??()
  {
    .maxstack 1
    ldftn void Åﬁ()
    call int32 ˚(void(()) )
    pop
    ret
  }

  .method assembly static void Åﬁ()	// DATA	XREF: sub_830r
  {
    .maxstack 1
    ldsflda valuetype Ë.?? ?
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void —(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å¿()
					// CODE	XREF: Å®:loc_8B8p
  {
    .maxstack 1
    .locals (bool V0)
    ldc.i4.0
    stloc.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?¨()
    brfalse.s loc_86A
    ldsflda valuetype Ë.?? ?
    call object	Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	Ë.??*)
    call void [mscorlib]System.Threading.Monitor::Enter(object)
    ldc.i4.1
    stloc.0

loc_86A:				// CODE	XREF: Å¿+7j
    ldloc.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Åπ()
					// CODE	XREF: Å®+E7p
  {
    .maxstack 1
    .locals (bool V0)
    ldc.i4.0
    stloc.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?¨()
    brfalse.s loc_88A
    ldsflda valuetype Ë.?? ?
    call object	Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype	Ë.??*)
    call void [mscorlib]System.Threading.Monitor::Exit(object)
    ldc.i4.1
    stloc.0

loc_88A:				// CODE	XREF: Åπ+7j
    ldloc.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å±()
					// CODE	XREF: sub_A20+1p sub_A90p
  {
    .maxstack 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?¨()
    brtrue.s loc_89C
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ??()

loc_89C:				// CODE	XREF: Å±+5j
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool ?¨()
    ret
  }

  .method assembly static int32	Å®(void(()) , unsigned	int32* , void(())** ,	void(())** )
					// CODE	XREF: sub_A70+10p ˚+10p
  {
    .maxstack 4
    .locals (unsigned int32 V0,
	     unsigned int32 V1,
	     int32 V2,
	     unsigned int32 V3,
	     unsigned int32 V4,
	     void(()) V5,
	     native int	V6,
	     native int	V7,
	     native int	V8,
	     native int	V9,
	     native int	V10,
	     native int	V11)
    ldc.i4.0
    stloc.s 5
    ldarg.0
    brtrue.s loc_8B8
    ldc.i4.m1
    ret

loc_8B8:				// CODE	XREF: Å®+4j
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å¿()
    ldc.i4.1
    bne.un loc_9A2
  .try {
    ldarg.1
    ldind.i4
    ldc.i4.1
    sub
    ldarg.2
    ldind.i4
    ldarg.3
    ldind.i4
    sub
    ldc.i4.2
    shr.un
    bge.un loc_981
  .try {
    ldarg.1
    ldind.i4
    ldc.i4.4
    mul
    stloc.1
    ldloc.1
    ldc.i4 0x800
    bge.un.s loc_8E5
    ldloc.1
    stloc.s 4
    br.s loc_8EC

loc_8E5:				// CODE	XREF: Å®+2Ej
    ldc.i4 0x800
    stloc.s 4

loc_8EC:				// CODE	XREF: Å®+33j
    ldloca.s 9
    ldloc.1
    ldloc.s 4
    add
    call instance void [mscorlib]System.IntPtr::.ctor(int32)
    ldloca.s 8
    ldarg.3
    ldind.i4
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.s 8
    ldloc.s 9
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::ReAllocHGlobal(native int, native	int)
    stloc.s 0xB
    ldarg.2
    dup
    ldind.i4
    ldloca.s 0xB
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.3
    ldind.i4
    sub
    add
    stind.i4
    ldarg.3
    ldloca.s 0xB
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stind.i4
    ldarg.1
    ldind.i4
    stloc.0
    ldc.i4 0x200
    ldloc.0
    bge.un.s loc_936
    ldc.i4 0x200
    stloc.3
    br.s loc_938

loc_936:				// CODE	XREF: Å®+7Cj
    ldloc.0
    stloc.3

loc_938:				// CODE	XREF: Å®+84j
    ldarg.1
    ldloc.0
    ldloc.3
    add
    stind.i4
    leave.s loc_981
  }
  catch	[mscorlib]System.OutOfMemoryException {
    pop
    ldloca.s 7
    ldarg.1
    ldind.i4
    ldc.i4.4
    mul
    ldc.i4.8
    add
    call instance void [mscorlib]System.IntPtr::.ctor(int32)
    ldloca.s 6
    ldarg.3
    ldind.i4
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.s 6
    ldloc.s 7
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::ReAllocHGlobal(native int, native	int)
    stloc.s 0xA
    ldarg.2
    dup
    ldind.i4
    ldloca.s 0xA
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.3
    ldind.i4
    sub
    add
    stind.i4
    ldarg.3
    ldloca.s 0xA
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stind.i4
    ldarg.1
    dup
    ldind.i4
    ldc.i4.4
    add
    stind.i4
    leave.s loc_981
  }

loc_981:				// CODE	XREF: Å®+1Ej Å®+8Dj
    ldarg.2
    ldind.i4
    ldarg.0
    stind.i4
    ldarg.2
    dup
    ldind.i4
    ldc.i4.4
    add
    stind.i4
    ldarg.0
    stloc.s 5
    leave.s loc_995
  }
  catch	[mscorlib]System.OutOfMemoryException {
    pop
    leave.s loc_993
  }

loc_993:
    leave.s loc_99E

loc_995:				// CODE	XREF: Å®+DEj
    leave.s loc_99E
  }
  finally  {
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Åπ()
    pop
    endfinally
  }

loc_99E:				// CODE	XREF: Å®:loc_993j Å®:loc_995j
    ldloc.s 5
    brtrue.s loc_9A6

loc_9A2:				// CODE	XREF: Å®+Ej
    ldc.i4.m1
    stloc.2
    br.s loc_9A8

loc_9A6:				// CODE	XREF: Å®+F0j
    ldc.i4.0
    stloc.2

loc_9A8:				// CODE	XREF: Å®+F4j
    ldloc.2
    ret
  }

  .method assembly static void Å?()	// CODE	XREF: Å∞p
  {
    .maxstack 2
    .locals (native int	V0)
    ldsfld void(())* ??
    ldc.i4.m1
    beq.s loc_A1B
    ldsfld void(())* ??
    brfalse.s loc_A1B
    ldsfld void(())* ?ç
    brfalse.s loc_A1B
    ldsfld void(())* ?ç
    ldc.i4.4
    sub
    stsfld void(())* ?ç
    ldsfld void(())* ?ç
    ldsfld void(())* ??
    blt.un.s loc_A09

loc_9DE:				// CODE	XREF: sub_9B0+57j
    ldsfld void(())* ?ç
    ldind.i4
    brfalse.s loc_9F1
    ldsfld void(())* ?ç
    ldind.i4
    calli T0x1100001E

loc_9F1:				// CODE	XREF: sub_9B0+34j
    ldsfld void(())* ?ç
    ldc.i4.4
    sub
    stsfld void(())* ?ç
    ldsfld void(())* ?ç
    ldsfld void(())* ??
    bge.un.s loc_9DE

loc_A09:				// CODE	XREF: sub_9B0+2Cj
    ldloca.s 0
    ldsfld void(())* ??
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)

loc_A1B:				// CODE	XREF: sub_9B0+6j sub_9B0+Dj ...
    ret
  }

  .method assembly static int32	Å?()	// CODE	XREF: ?è+12p
  {
    .maxstack 3
    .locals (native int	V0)
    ldc.i4.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å±()
    ldc.i4.1
    bne.un.s loc_A53
    pop
    ldc.i4 0x80
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stsfld void(())* ??
    ldsfld void(())* ??
    stsfld void(())* ?ç
    ldc.i4.s 0x20
    stsfld unsigned int32 ??
    ldc.i4.1

loc_A53:				// CODE	XREF: sub_A20+7j
    ret
  }

  .method assembly static int32(()) Å?(int32(()) )
  {
    .maxstack 2
    ldarg.0
    call int32 Å?(void(()) )
    ldc.i4.m1
    beq.s loc_A6C
    ldarg.0
    br.s loc_A6D

loc_A6C:				// CODE	XREF: sub_A60+7j
    ldc.i4.0

loc_A6D:				// CODE	XREF: sub_A60+Aj
    ret
  }

  .method assembly static int32	Å?(void(()) ) // CODE XREF: sub_A60+1p
  {
    .maxstack 4
    ldarg.0
    ldsflda unsigned int32 ??
    ldsflda void(())* ?ç
    ldsflda void(())* ??
    call int32 Å®(void(()) , unsigned int32* , void(())** , void(())** )
    ret
  }

  .method assembly static int32	Å?()	// CODE	XREF: Å˚+12p
  {
    .maxstack 2
    .locals (native int	V0)
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) bool Å±()
    ldc.i4.1
    bne.un.s loc_AC0
    ldc.i4 0x80
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::AllocHGlobal(int32)
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stsfld void(())* ??
    ldsfld void(())* ??
    stsfld void(())* Å¸
    ldc.i4.s 0x20
    stsfld unsigned int32 ?

loc_AC0:				// CODE	XREF: sub_A90+6j
    ldc.i4.1
    ret
  }

  .method assembly static void Õ()	// CODE	XREF: Å¡p Åê+21p
  {
    .maxstack 2
    .locals (native int	V0)
    ldsfld void(())* ??
    ldc.i4.m1
    beq.s loc_B28
    ldsfld void(())* ??
    brfalse.s loc_B28
    ldsfld void(())* Å¸
    brfalse.s loc_B28

loc_AE6:				// CODE	XREF: Õ:loc_B11j
  .try {
    ldsfld void(())* Å¸
    ldc.i4.4
    sub
    stsfld void(())* Å¸
    ldsfld void(())* Å¸
    ldsfld void(())* ??
    blt.un.s loc_B13
    ldsfld void(())* Å¸
    ldind.i4
    brfalse.s loc_B11
    ldsfld void(())* Å¸
    ldind.i4
    calli T0x1100001E

loc_B11:				// CODE	XREF: Õ+34j
    br.s loc_AE6

loc_B13:				// CODE	XREF: Õ+2Cj
    leave.s loc_B28
  }
  finally  {
    ldloca.s 0
    ldsfld void(())* ??
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)
    endfinally
  }

loc_B28:				// CODE	XREF: Õ+6j Õ+Dj ...
    ret
  }

  .method assembly static int32(()) Å?(int32(()) )
  {
    .maxstack 2
    ldarg.0
    call int32 ˚(void(()) )
    ldc.i4.m1
    beq.s loc_B3C
    ldarg.0
    br.s loc_B3D

loc_B3C:				// CODE	XREF: sub_B30+7j
    ldc.i4.0

loc_B3D:				// CODE	XREF: sub_B30+Aj
    ret
  }

  .method assembly static int32	˚(void(()) ) // CODE XREF: sub_830+6p
					// sub_B30+1p
  {
    .maxstack 4
    ldarg.0
    ldsflda unsigned int32 ?
    ldsflda void(())* Å¸
    ldsflda void(())* ??
    call int32 Å®(void(()) , unsigned int32* , void(())** , void(())** )
    ret
  }

  .method assembly static void ˆ(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??* ,	object)
  {
    .maxstack 2
    ldarg.0
    ldc.i4.0
    stind.i4
    ldarg.0
    ldarg.1
    call void ¨(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??* , object)
    ret
  }

  .method assembly static object Â(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
					// CODE	XREF: ?¨+5p ?†+5p ...
  {
    .maxstack 1
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType V0)
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType ¡(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
    stloc.0
    ldloc.0
    brfalse.s loc_B86
    ldloc.0
    unbox [mscorlib]System.Runtime.InteropServices.GCHandle
    call instance object [mscorlib]System.Runtime.InteropServices.GCHandle::get_Target()
    ret

loc_B86:				// CODE	XREF: Â+8j
    ldnull
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvThiscall) void —(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst)	valuetype Ë.??*)
					// CODE	XREF: Åﬁ+5p
  {
    .maxstack 2
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType V0)
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType ¡(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
    stloc.0
    ldloc.0
    brfalse.s loc_BA8
    ldloc.0
    unbox [mscorlib]System.Runtime.InteropServices.GCHandle
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldarg.0
    ldc.i4.0
    stind.i4

loc_BA8:				// CODE	XREF: —+8j
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType ¡(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
					// CODE	XREF: Â+1p —+1p ...
  {
    .maxstack 2
    .locals (unsigned int32 V0,
	     native int	V1)
    ldarg.0
    ldind.i4
    stloc.0
    ldloc.0
    brfalse.s loc_BCA
    ldloca.s 1
    ldloc.0
    call instance void [mscorlib]System.IntPtr::.ctor(void*)
    ldloc.1
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::FromIntPtr(native int)
    box	[mscorlib]System.Runtime.InteropServices.GCHandle
    ret

loc_BCA:				// CODE	XREF: ¡+4j
    ldnull
    ret
  }

  .method assembly static void ¨(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??* ,	object)
					// CODE	XREF: sub_7D0+13p ˆ+5p
  {
    .maxstack 2
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType V0,
	     native int	V1)
    ldarg.0
    call modopt([mscorlib]System.Runtime.CompilerServices.IsBoxed) modopt([mscorlib]System.Runtime.InteropServices.GCHandle) class [mscorlib]System.ValueType ¡(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) valuetype Ë.??*)
    stloc.0
    ldloc.0
    brtrue.s loc_C02
    ldarg.1
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object)
    box	[mscorlib]System.Runtime.InteropServices.GCHandle
    stloc.0
    ldloc.0
    unbox [mscorlib]System.Runtime.InteropServices.GCHandle
    ldobj [mscorlib]System.Runtime.InteropServices.GCHandle
    call native	int [mscorlib]System.Runtime.InteropServices.GCHandle::ToIntPtr(valuetype [mscorlib]System.Runtime.InteropServices.GCHandle)
    stloc.1
    ldarg.0
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stind.i4
    br.s loc_C0E

loc_C02:				// CODE	XREF: ¨+8j
    ldloc.0
    unbox [mscorlib]System.Runtime.InteropServices.GCHandle
    ldarg.1
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::set_Target(object)

loc_C0E:				// CODE	XREF: ¨+30j
    ret
  }

  .method assembly static int32	??(cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32(())* , cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32(())*	)
					// CODE	XREF: ?§+59p
  {
    .maxstack 2
    .locals (int32 V0,
	     unsigned int32 V1)
    ldc.i4.0
    stloc.0
    ldarg.0
    ldarg.1
    bge.un.s loc_C2F

loc_C16:				// CODE	XREF: sub_C10+1Dj
    ldloc.0
    brtrue.s loc_C2F
    ldarg.0
    ldind.i4
    stloc.1
    ldloc.1
    brfalse.s loc_C26
    ldloc.1
    calli T0x1100002E
    stloc.0

loc_C26:				// CODE	XREF: sub_C10+Dj
    ldarg.0
    ldc.i4.4
    add
    starg.s 0
    ldarg.0
    ldarg.1
    blt.un.s loc_C16

loc_C2F:				// CODE	XREF: sub_C10+4j sub_C10+7j
    ldloc.0
    ret
  }

  .method assembly static void ?(cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())* , cdecl modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void(())* )
					// CODE	XREF: ?§+75p
  {
    .maxstack 2
    .locals (unsigned int32 V0)
    ldarg.0
    ldarg.1
    bge.un.s loc_C59

loc_C44:				// CODE	XREF: sub_C40+17j
    ldarg.0
    ldind.i4
    stloc.0
    ldloc.0
    brfalse.s loc_C50
    ldloc.0
    calli T0x1100002C

loc_C50:				// CODE	XREF: sub_C40+8j
    ldarg.0
    ldc.i4.4
    add
    starg.s 0
    ldarg.0
    ldarg.1
    blt.un.s loc_C44

loc_C59:				// CODE	XREF: sub_C40+2j
    ret
  }

  .method assembly static valuetype [mscorlib]System.ModuleHandle ??() // CODE XREF: sub_CA0p
  {
    .maxstack 1
    ldtoken Ë.?ê
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    callvirt instance class [mscorlib]System.Reflection.Module [mscorlib]System.Type::get_Module()
    call instance valuetype [mscorlib]System.ModuleHandle [mscorlib]System.Reflection.Module::get_ModuleHandle()
    ret
  }

  .method assembly static void ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())*	, modopt([mscorlib]System.Runtime.CompilerServices.IsConst) modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(())* )
					// CODE	XREF: sub_280+1Cp ?è+22p ...
  {
    .maxstack 2
    .locals (unsigned int32 V0)
    ldarg.0
    ldarg.1
    bge.un.s loc_C9F

loc_C84:				// CODE	XREF: sub_C80+1Dj
    ldarg.0
    ldind.i4
    stloc.0
    ldloc.0
    brfalse.s loc_C96
    ldloc.0
    call modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(()) ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(()) )
    calli T0x1100002D
    pop

loc_C96:				// CODE	XREF: sub_C80+8j
    ldarg.0
    ldc.i4.4
    add
    starg.s 0
    ldarg.0
    ldarg.1
    blt.un.s loc_C84

loc_C9F:				// CODE	XREF: sub_C80+2j
    ret
  }
  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(()) ?(modopt([mscorlib]System.Runtime.CompilerServices.IsConst) void*(()) )
					// CODE	XREF: sub_C80+Bp
  {
    .maxstack 2
    .locals (native int	V0,
	     valuetype [mscorlib]System.RuntimeMethodHandle V1,
	     valuetype [mscorlib]System.ModuleHandle V2)
    call valuetype [mscorlib]System.ModuleHandle ??()
    stloc.2
    ldloca.s 2
    ldarg.0
    call instance valuetype [mscorlib]System.RuntimeMethodHandle [mscorlib]System.ModuleHandle::ResolveMethodHandle(int32)
    stloc.1
    ldloca.s 1
    call instance native int [mscorlib]System.RuntimeMethodHandle::GetFunctionPointer()
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ret
  }

  .method assembly static void Å¶(void((void*))	, void* ) // CODE XREF: .cctor+19p
  {
    .maxstack 2
  .try {
    ldarg.1
    ldarg.0
    calli T0x11000037
    leave.s loc_CD9
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x6000069
    endfilter
  filter 9 {
    pop
    leave.s loc_CD9
  }

loc_CD9:				// CODE	XREF: Å¶+7j
    ret
  }

  .method assembly static void ??(void((void*))	, void* )
  {
    .maxstack 2
  .try {
    ldarg.1
    ldarg.0
    calli T0x11000037
    leave.s loc_CF9
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x6000069
    endfilter
  filter 9 {
    pop
    leave.s loc_CF9
  }

loc_CF9:				// CODE	XREF: sub_CE0+7j
    ret
  }

  .method assembly static void ??(void((void*, unsigned	int32, int32, void((void*)))) , void* , unsigned int32 , int32 , void((void*)) )
  {
    .maxstack 5
  .try {
    ldarg.1
    ldarg.2
    ldarg.3
    ldarg.s 4
    ldarg.0
    calli T0x11000036
    leave.s loc_D1D
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x6000069
    endfilter
  filter 0xD {
    pop
    leave.s loc_D1D
  }

loc_D1D:				// CODE	XREF: sub_D00+Bj
    ret
  }

  .method assembly static void ?Å()	// CODE	XREF: start+22p
  {
    .maxstack 1
    ldsfld int32 ÅÊ
    brtrue.s loc_D32
    ldftn modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32	Å˙(valuetype ?º.ÅÓ* )
    call T0x600006A

loc_D32:				// CODE	XREF: ?Å+5j
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32	Å˛()
					// CODE	XREF: start+1Cp
  {
    .maxstack 1
    ldc.i4.0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32	Å˙(valuetype ?º.ÅÓ* )
					// DATA	XREF: ?Å+7r
  {
    .maxstack 1
    ldc.i4.0
    ret
  }

  .method assembly static class	[mscorlib]System.Reflection.Assembly Åı(string )
					// CODE	XREF: Í+6p
  {
    .maxstack 3
    .locals (unsigned int8[] V0,
	     string V1,
	     unsigned int8* V2,
	     bool V3,
	     int32 V4,
	     native int	V5,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V6)
    ldarg.0
    ldstr "\\"
    ldstr ""
    call instance string [mscorlib]System.String::Replace(string, string)
    stloc.1
    ldloc.1
    ldstr "PvLogiciels.dotNetProtector.Runtime"
    call instance bool [mscorlib]System.String::StartsWith(string)
    brtrue.s loc_D80
    ldnull
    ret

loc_D80:				// CODE	XREF: Åı+1Cj
    ldloc.1
    ldc.i4.s 0x2C
    call instance int32	[mscorlib]System.String::IndexOf(char)
    stloc.s 4
    ldloc.s 4
    ldc.i4.0
    blt.s loc_D9E
    ldloc.1
    ldc.i4.0
    ldloc.s 4
    call instance string [mscorlib]System.String::Substring(int32, int32)
    call instance string [mscorlib]System.String::Trim()
    stloc.1

loc_D9E:				// CODE	XREF: Åı+2Dj
    ldloc.1
    ldstr "PvLogiciels.dotNetProtector.Runtime"
    call bool [mscorlib]System.String::op_Equality(string, string)
    stloc.3
    ldloc.3
    brfalse.s loc_DBA
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?()
    newarr [mscorlib]System.Byte
    stloc.0
    br.s loc_DC5

loc_DBA:				// CODE	XREF: Åı+4Bj
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 •()
    newarr [mscorlib]System.Byte
    stloc.0

loc_DC5:				// CODE	XREF: Åı+58j
    ldloc.0
    brfalse.s loc_E05
    ldloc.0
    ldlen
    brfalse.s loc_E05
    ldloc.0
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 6
    ldloc.0
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.s 5
    ldloca.s 5
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    stloc.2
    ldloc.3
    brfalse.s loc_DF1
    ldloc.2
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ´(unsigned int8*)
    br.s loc_DF7

loc_DF1:				// CODE	XREF: Åı+87j
    ldloc.2
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void µ(unsigned int8*)

loc_DF7:				// CODE	XREF: Åı+8Fj
    ldloca.s 6
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldloc.0
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[])
    ret

loc_E05:				// CODE	XREF: Åı+66j Åı+6Aj
    ldnull
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void*	ÅÔ(unsigned int8* , int32 )
  {
    .maxstack 4
    .locals (class [mscorlib]System.Reflection.Module V0,
	     unsigned int8[] V1,
	     native int	V2)
    ldarg.1
    newarr [mscorlib]System.Byte
    stloc.1
    ldarg.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloc.1
    ldc.i4.0
    ldarg.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetExecutingAssembly()
    ldstr "embedded.netmodule"
    ldloc.1
    callvirt instance class [mscorlib]System.Reflection.Module [mscorlib]System.Reflection.Assembly::LoadModule(string,	unsigned int8[])
    stloc.0
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldstr "PvLogiciels.dotNetProtector.embedded.netmodule"
    ldloc.0
    callvirt instance void [mscorlib]System.AppDomain::SetData(string, object)
    ldloc.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void*	Å„(unsigned int8* , int32 )
  {
    .maxstack 4
    .locals (unsigned int8[] V0,
	     native int	V1)
    ldarg.1
    newarr [mscorlib]System.Byte
    stloc.0
    ldarg.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloc.0
    ldc.i4.0
    ldarg.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.0
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[])
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ret
  }
  .method assembly static int32	Å‹(string[] ) noinlining   // CODE XREF: Å◊+21p
					// Å◊+3Ap ...
  {
    .maxstack 1
    ldarg.0
    call int32 [.module	embedded.netmodule]<dotNetProtector>::Main(string[])
    brtrue.s loc_E9E
    call int32 [mscorlib]System.Environment::get_ExitCode()
    ret

loc_E9E:				// CODE	XREF: Å‹+6j
    ldc.i4.0
    ret
  }
  .method assembly static int32	Å◊(string[] ) // CODE XREF: ÅÀ+30p
  {
    .maxstack 3
    .locals (int32 V0,
	     object V1,
	     object[] V2,
	     class [mscorlib]System.Reflection.MethodInfo V3,
	     class [mscorlib]System.Type V4,
	     class [mscorlib]System.Reflection.Module V5)
    ldc.i4.0
    call void [mscorlib]System.Environment::set_ExitCode(int32)
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldstr "PvLogiciels.dotNetProtector.embedded.netmodule"
    callvirt instance object [mscorlib]System.AppDomain::GetData(string)
    castclass [mscorlib]System.Reflection.Module
    stloc.s 5
    ldloc.s 5
    brtrue.s loc_EC7
    ldarg.0
    call int32 Å‹(string[] )
    ret

loc_EC7:				// CODE	XREF: Å◊+1Ej
    ldloc.s 5
    ldstr "<dotNetProtector>"
    callvirt instance class [mscorlib]System.Type [mscorlib]System.Reflection.Module::GetType(string)
    stloc.s 4
    ldloc.s 4
    brtrue.s loc_EE0
    ldarg.0
    call int32 Å‹(string[] )
    ret

loc_EE0:				// CODE	XREF: Å◊+37j
    ldloc.s 4
    ldstr "Main"
    ldc.i4.s 0x38
    callvirt instance class [mscorlib]System.Reflection.MethodInfo [mscorlib]System.Type::GetMethod(string, valuetype [mscorlib]System.Reflection.BindingFlags)
    stloc.3
    ldloc.3
    brtrue.s loc_EF9
    ldarg.0
    call int32 Å‹(string[] )
    ret

loc_EF9:				// CODE	XREF: Å◊+50j
    ldc.i4.1
    newarr [mscorlib]System.Object
    stloc.2
    ldloc.2
    ldc.i4.0
    ldarg.0
    stelem.ref
    ldloc.3
    ldnull
    ldloc.2
    callvirt instance object [mscorlib]System.Reflection.MethodBase::Invoke(object, object[])
    stloc.1
    ldloc.1
    brtrue.s loc_F14
    ldc.i4.0
    stloc.0
    br.s loc_F1C

loc_F14:				// CODE	XREF: Å◊+6Ej
    ldloc.1
    unbox [mscorlib]System.Int32
    ldind.i4
    stloc.0

loc_F1C:				// CODE	XREF: Å◊+72j
    ldloc.0
    ldloc.0
    brtrue.s loc_F26
    pop
    call int32 [mscorlib]System.Environment::get_ExitCode()

loc_F26:				// CODE	XREF: Å◊+7Ej
    ret
  }

  .method assembly static class	[mscorlib]System.Reflection.Assembly Å’(object , class	[mscorlib]System.ResolveEventArgs )
					// DATA	XREF: Å +Br
  {
    .maxstack 3
    .locals (int32 V0,
	     class [mscorlib]System.Reflection.Assembly[] V1,
	     class [mscorlib]System.Reflection.Assembly	V2,
	     string V3)
    ldarg.1
    call instance string [mscorlib]System.ResolveEventArgs::get_Name()
    ldstr "\\"
    ldstr ""
    call instance string [mscorlib]System.String::Replace(string, string)
    stloc.3
    ldloc.3
    ldstr "PvLogiciels.dotNetProtector.Runtime"
    call instance bool [mscorlib]System.String::StartsWith(string)
    brtrue.s loc_F55
    ldnull
    ret

loc_F55:				// CODE	XREF: Å’+21j
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    callvirt instance class [mscorlib]System.Reflection.Assembly[] [mscorlib]System.AppDomain::GetAssemblies()
    stloc.1
    ldc.i4.0
    stloc.0
    ldc.i4.0
    ldloc.1
    ldlen
    bge.s loc_F86

loc_F67:				// CODE	XREF: Å’+50j
    ldloc.1
    ldloc.0
    ldelem.ref
    stloc.2
    ldloc.2
    callvirt instance string [mscorlib]System.Reflection.Assembly::get_FullName()
    ldloc.3
    call bool [mscorlib]System.String::op_Equality(string, string)
    brtrue.s loc_F84
    ldloc.0
    ldc.i4.1
    add
    stloc.0
    ldloc.0
    ldloc.1
    ldlen
    blt.s loc_F67
    br.s loc_F86

loc_F84:				// CODE	XREF: Å’+47j
    ldloc.2
    ret

loc_F86:				// CODE	XREF: Å’+35j Å’+52j
    ldnull
    ret
  }

  .method assembly static class	[mscorlib]System.Reflection.Module ÅŒ(object ,	class [mscorlib]System.ResolveEventArgs	)
					// DATA	XREF: ÅÀ+1Fr
  {
    .maxstack 2
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldstr "PvLogiciels.dotNetProtector.embedded.netmodule"
    callvirt instance object [mscorlib]System.AppDomain::GetData(string)
    castclass [mscorlib]System.Reflection.Module
    ret
  }

  .method assembly static int32	ÅÀ(string[] ) noinlining   // CODE XREF: Å +1Cp
  {
    .maxstack 3
    ldtoken PvLogiciels.dotNetProtector.RuntimeInterop
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    ldsfld native int [mscorlib]System.IntPtr::Zero
    ldc.i4 0
    call void [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime::ExeInit(class [mscorlib]System.Type, native int, int32)
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetExecutingAssembly()
    ldnull
    ldftn class	[mscorlib]System.Reflection.Module ÅŒ(object ,	class [mscorlib]System.ResolveEventArgs	)
    newobj instance void [mscorlib]System.Reflection.ModuleResolveEventHandler::.ctor(object, native int)
    callvirt instance void [mscorlib]System.Reflection.Assembly::add_ModuleResolve(class [mscorlib]System.Reflection.ModuleResolveEventHandler)
    ldarg.0
    call int32 Å◊(string[] )
    ret
  }

  .method assembly static int32	Å (string[] ) // CODE XREF: start+5Fp
  {
    .maxstack 3
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ∏()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldnull
    ldftn class	[mscorlib]System.Reflection.Assembly Å’(object , class	[mscorlib]System.ResolveEventArgs )
    newobj instance void [mscorlib]System.ResolveEventHandler::.ctor(object, native int)
    callvirt instance void [mscorlib]System.AppDomain::add_AssemblyResolve(class [mscorlib]System.ResolveEventHandler)
    ldarg.0
    call int32 ÅÀ(string[] )
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å…()
  {
    .maxstack 0
    ret
  }

  .method assembly static modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32	Å∆()
  {
    .maxstack 1
    ldc.i4.0
    ret
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Åø() native	unmanaged
					// CODE	XREF: Å©+21p
  {
    .maxstack 8
  }

    ret					// CODE	XREF: ?§+20p ?§+31p ...
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void Å∏()	native unmanaged
					// CODE	XREF: ?§+Cp
  {
    .maxstack 8
  }

    ret					// CODE	XREF: Å©+71p
  }

    ret					// CODE	XREF: Ó+42p Ó+5Bp
  }

    ret					// CODE	XREF: ?§+66p
  }

    ret					// CODE	XREF: Å©:loc_40Cp
  }

    ret					// CODE	XREF: ˛+21p ˛+2Bp
  }

    ret					// CODE	XREF: ÅÂ+18p
  }

    ret					// CODE	XREF: Å‚+6p Å?+22p
  }

    ret					// CODE	XREF: Å∞+12p
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Ï()	native unmanaged
  {
    .maxstack 8
  }

    ret					// CODE	XREF: start+1p	sub_780+3Cp ...
  }

    ret					// CODE	XREF: start+30p
  }

    ret					// CODE	XREF: sub_780+1p
  }

    ret					// CODE	XREF: start+11p
  }

    ret					// CODE	XREF: start+72p
  }

    ret					// CODE	XREF: start+6p
  }

    ret					// CODE	XREF: start+4Bp
  }

    ret					// CODE	XREF: Å¶+Fp sub_CE0+Fp ...
  }

    ret					// CODE	XREF: ?Å+Dp
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ∏() native unmanaged
					// CODE	XREF: Å p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void µ(unsigned int8*) native unmanaged
					// CODE	XREF: Åı+92p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ´(unsigned int8*) native unmanaged
					// CODE	XREF: Åı+8Ap
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 •()	native unmanaged
					// CODE	XREF: Åı:loc_DBAp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?()	native unmanaged
					// CODE	XREF: Åı+4Dp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(int32, void*, void*, void*) native	unmanaged
					// CODE	XREF: EncodeTrace+49p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(void*) native unmanaged
					// CODE	XREF: FreeNativeLibrary+7p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ??(unsigned	int8*, void**) native unmanaged
					// CODE	XREF: LoadNativeLibrary+2Cp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(void*) native unmanaged
					// CODE	XREF: EndUsbDetect+7p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Å¯() native	unmanaged
					// CODE	XREF: StartUsbDetectp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int32 ?(unsigned	int8*) native unmanaged
					// CODE	XREF: GetProductID+15p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?π(unsigned	int8*, int32*) native unmanaged
					// CODE	XREF: MinutesLeft+17p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?Ø(unsigned	int8*, int32*) native unmanaged
					// CODE	XREF: DaysLeft+17p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?´(unsigned	int8*, int32*) native unmanaged
					// CODE	XREF: IsDemo+17p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅŸ(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*) native unmanaged
					// CODE	XREF: LicenseKeyChecksumIsOk+1Ep
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?°(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*) native unmanaged
					// CODE	XREF: ConfigStringChecksumIsOk+1Ep
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ??(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*) native unmanaged
					// CODE	XREF: ProductKeyChecksumIsOk+1Ep
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ??(unsigned	int8*) native unmanaged
					// CODE	XREF: GetEmbLockAssemblyServices+1Bp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ≤(void*) native unmanaged
					// CODE	XREF: ResolveAssembly+8Bp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≠(unsigned	int8*, void*, void*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**, unsigned int8) native unmanaged
					// CODE	XREF: GenerateUsbLicense+26p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≠(unsigned	int8*, void*, void*, int32, int32, int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**, unsigned int8) native	unmanaged
					// CODE	XREF: sub_2910+2Cp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å(unsigned	int8*, void*, void*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: GenerateLicense+25p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å(unsigned	int8*, void*, void*, int32, int32, int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_2870+2Bp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned	int8*, unsigned	int32, unsigned	int16, unsigned	int64, unsigned	int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: GetUsbConfig+1Dp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned	int8*, unsigned	int32, unsigned	int16, unsigned	int64, unsigned	int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_2730+24p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned	int8*, unsigned	int32, unsigned	int16, unsigned	int64, unsigned	int64, unsigned	int8*, unsigned	int16, unsigned	int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_2780+6Cp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åµ(unsigned	int8*, unsigned	int32*,	unsigned int8**) native	unmanaged
					// CODE	XREF: GetConfigForDemo+1Ap
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åÿ(unsigned	int8*, unsigned	int8*) native unmanaged
					// CODE	XREF: GetThumbPrint+17p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned	int8*, unsigned	int32, unsigned	int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: GetConfig+19p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned	int8*, unsigned	int32, unsigned	int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_2560+20p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned	int8*, unsigned	int32, unsigned	int16, unsigned	int8*, unsigned	int16, unsigned	int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_25A0+68p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 «(unsigned int8*, void*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: EncodeActivationRequest+1Ep
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≈(unsigned	int8*, void*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int8**) native unmanaged
					// CODE	XREF: DecodeActivationString+25p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅΩ(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int32*, unsigned	int64*)	native unmanaged
					// CODE	XREF: GetProductkeyData+20p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅΩ(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int32*) native unmanaged
					// CODE	XREF: GetLicenseId+1Ep
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å∂(unsigned	int8*, void*, unsigned int32, unsigned int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: GenProductKey+21p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å∂(unsigned	int8*, void*, unsigned int32, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: sub_23D0+1Fp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ¢(unsigned int8*, unsigned int64, unsigned int64, int32*) native unmanaged
					// CODE	XREF: HardwareScore+19p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å´(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32) native unmanaged
					// CODE	XREF: IsLicensed+2Dp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åß(unsigned	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int64, int32*) native unmanaged
					// CODE	XREF: SameSoftware+1Fp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ‡(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**) native unmanaged
					// CODE	XREF: DesignLicenseKey+3Ap
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åù() native	unmanaged
					// CODE	XREF: InitModule+A0p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int64 ”() native	unmanaged
					// CODE	XREF: GetBiosHashp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int64 À()	native unmanaged
					// CODE	XREF: GetMacAddressp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int64 Åç() native unmanaged
					// CODE	XREF: GetComputerHashp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ø() native unmanaged
					// CODE	XREF: AppDomain_ProcessExit+Ap
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å?(unsigned	int8*, void*, int32*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32) native unmanaged
					// CODE	XREF: “+45p InitModule+61p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å?(unsigned	int8*, void*, int32, int32) native unmanaged
					// CODE	XREF: sub_1F20+DDp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* π(void*) native unmanaged
					// CODE	XREF: sub_1F20+13p
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ¸() native unmanaged
					// CODE	XREF: sub_1BD0:loc_1CAEp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ˜(unsigned int8*) native unmanaged
					// CODE	XREF: sub_1B90+Bp
					// GetEmbLockAssemblyName+1Bp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Ò(unsigned int8*) native unmanaged
					// CODE	XREF: ˙+Bp
					// GetEmbLockAssembly+1Bp
  {
    .maxstack 8
  }

  .method public static	hassecurity pinvokeimpl(/* No map */) modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?(int32) native unmanaged
					// CODE	XREF: Å˝+35p sub_1BD0+E5p ...
  {
    .maxstack 8
  }

    ret					// CODE	XREF: sub_1BD0+D6p +D0p ...
  }

    ret					// CODE	XREF: sub_1BD0p +7p ...
  }

    ret					// CODE	XREF: sub_1BD0+C1p +BAp ...
  }

    ret					// CODE	XREF: sub_1BD0+B3p +ACp ...
  }

    ret					// CODE	XREF: sub_1BD0+A3p +9Bp ...
  }

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?∂ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?≠ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?© extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?¶ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?¢ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	?? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å˘ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	ÅÚ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	ÅÏ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å‰ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å› extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å÷ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Åœ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å» extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å√ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å∫ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å¥ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å¨ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å¢ extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	Å? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit $	extends	[mscorlib]System.ValueType
{
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit Ù	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit Á	extends	[mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit Î	extends	[mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ﬂ	extends	[mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ⁄	extends	[mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ’	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit Œ	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit »	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ∑	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ≈	extends	[mscorlib]System.ValueType
{
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit ¬	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit Æ	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ©	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ∂	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ≥	extends	[mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit Ø	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class nested public auto sealed ansi beforefieldinit ™	extends	[mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit ß	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit °	extends	[mscorlib]System.ValueType
{
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit ?	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private auto sealed ansi	beforefieldinit	? extends [mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ?	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class nested public auto sealed ansi beforefieldinit ™	extends	[mscorlib]System.Enum
{
  .field public	specialname rtspecialname int32	value__
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ç	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?	extends	[mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?≤ extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?∫ extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?≥ extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?? extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?® extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?ß extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?• extends [mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ?ù extends [mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ?? extends [mscorlib]System.ValueType
{
}
}

.namespace Ë
{
.class private sequential sealed ansi beforefieldinit ?ê extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?? extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?? extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ?? extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit Å$ extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class nested assembly sequential sealed ansi beforefieldinit Åˆ extends [mscorlib]System.ValueType
{
}
}

.namespace ?º
{
.class private sequential sealed ansi beforefieldinit ÅÓ extends [mscorlib]System.ValueType
{
}
}

.namespace ÅÈ				// DATA	XREF: sub_19E0+1w +24w ...
{
.class private auto ansi beforefieldinit ÅÍ extends [mscorlib]System.Object
{
  .field assembly static class [mscorlib]System.Reflection.Assembly Å?


  .method private static hidebysig specialname rtspecialname void .cctor()
  {
    .maxstack 1
    ldnull
    stsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
    ret
  }

  .method public hidebysig specialname rtspecialname instance void .ctor()
  {
    .maxstack 1
    ldarg.0
    call instance void [mscorlib]System.Object::.ctor()
    ret
  }
}
}

.namespace ÅÈ				// DATA	XREF: sub_1A10+1Aw ù+1r ...
{
.class private auto serializable ansi beforefieldinit Åﬂ extends [mscorlib]System.Object
{
  .field private native	int ÅÅ

  .field private int32 ?		// DATA	XREF: sub_1A10+8w Å˝+30r

  .field private notserialized class [mscorlib]System.AppDomain	˝ // DATA XREF:	sub_1A10+Fw
					// Å˝+1r ...


  .method public hidebysig specialname rtspecialname instance void .ctor(class [mscorlib]System.AppDomain domain, int32	domainId)
					// CODE	XREF: InitRuntime+38p
  {
    .maxstack 2
    ldarg.0
    call instance void [mscorlib]System.Object::.ctor()
    ldarg.0
    ldarg.2
    stfld int32	ÅÈ.Åﬂ::?
    ldarg.0
    ldarg.1
    stfld class	[mscorlib]System.AppDomain ÅÈ.Åﬂ::˝
    ldarg.0
    ldsfld native int [mscorlib]System.IntPtr::Zero
    stfld native int ÅÈ.Åﬂ::ÅÅ
    ret
  }
  .method public hidebysig instance void Å˝() // DATA XREF: ù+2Er
  {
    .maxstack 4
    .locals (int32 V0,
	     string V1)
    ldarg.0
    ldfld class	[mscorlib]System.AppDomain ÅÈ.Åﬂ::˝
    brfalse.s loc_1A6C
  .try {
    ldc.i4.0
    stloc.0

loc_1A3A:				// CODE	XREF: Å˝+2Bj
    ldloc.0
    ldc.i4.s 0xA
    bge.s loc_1A5D
  .try {
    ldarg.0
    ldfld class	[mscorlib]System.AppDomain ÅÈ.Åﬂ::˝
    callvirt instance string [mscorlib]System.AppDomain::get_FriendlyName()
    stloc.1
    ldc.i4.s 0x32
    call void [mscorlib]System.Threading.Thread::Sleep(int32)
    leave.s loc_1A57
  }
  catch	[mscorlib]System.AppDomainUnloadedException {
    pop
    leave.s loc_1A5D
  }

loc_1A57:				// CODE	XREF: Å˝+22j
    ldloc.0
    ldc.i4.1
    add
    stloc.0
    br.s loc_1A3A

loc_1A5D:				// CODE	XREF: Å˝+Dj Å˝+25j
    leave.s loc_1A6C
  }
  finally  {
    ldarg.0
    ldfld int32	ÅÈ.Åﬂ::?
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?(int32)
    pop
    endfinally
  }

loc_1A6C:				// CODE	XREF: Å˝+6j Å˝:loc_1A5Dj
    ret
  }

  .method public static	hidebysig class	[mscorlib]System.AppDomain Å?()
					// CODE	XREF: sub_1AF0p
  {
    .maxstack 3
    .locals (class [mscorlib]System.Reflection.MethodInfo V0)
    ldtoken [mscorlib]System.AppDomain
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    ldstr "GetDefaultDomain"
    ldc.i4.s 0x28
    callvirt instance class [mscorlib]System.Reflection.MethodInfo [mscorlib]System.Type::GetMethod(string, valuetype [mscorlib]System.Reflection.BindingFlags)
    stloc.0
    ldloc.0
    brtrue.s loc_1A8C
    ldnull
    ret

loc_1A8C:				// CODE	XREF: sub_1A70+18j
    ldloc.0
    ldnull
    ldnull
    callvirt instance object [mscorlib]System.Reflection.MethodBase::Invoke(object, object[])
    isinst [mscorlib]System.AppDomain
    ret
  }

  .method public hidebysig instance void ù() //	DATA XREF: sub_1AF0+Ar
  {
    .maxstack 2
    ldarg.0
    ldflda native int ÅÈ.Åﬂ::ÅÅ
    ldobj [mscorlib]System.IntPtr
    call object	[mscorlib]System.Runtime.InteropServices.Marshal::GetObjectForIUnknown(native int)
    pop
    ldarg.0
    ldflda native int ÅÈ.Åﬂ::ÅÅ
    ldobj [mscorlib]System.IntPtr
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::Release(native	int)
    pop
    ldarg.0
    ldsfld native int [mscorlib]System.IntPtr::Zero
    stfld native int ÅÈ.Åﬂ::ÅÅ
    ldarg.0
    ldftn instance void	ÅÈ.Åﬂ::Å˝()
    newobj instance void [mscorlib]System.Threading.ThreadStart::.ctor(object, native int)
    newobj instance void [mscorlib]System.Threading.Thread::.ctor(class	[mscorlib]System.Threading.ThreadStart)
    call instance void [mscorlib]System.Threading.Thread::Start()
    ret
  }

  .method public hidebysig instance void ?(object , class [mscorlib]System.EventArgs )
					// DATA	XREF: InitRuntime+44r
  {
    .maxstack 2
    .locals (class [mscorlib]System.AppDomain V0,
	     native int	V1,
	     class [mscorlib]System.CrossAppDomainDelegate V2)
    call class [mscorlib]System.AppDomain ÅÈ.Åﬂ::Å?()
    stloc.0
    ldloc.0
    brfalse.s loc_1B27
    ldarg.0
    ldftn instance void	ÅÈ.Åﬂ::ù()
    newobj instance void [mscorlib]System.CrossAppDomainDelegate::.ctor(object,	native int)
    stloc.2
    ldarg.0
    ldfld class	[mscorlib]System.AppDomain ÅÈ.Åﬂ::˝
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetIUnknownForObject(object)
    stloc.1
    ldarg.0
    ldloc.1
    stfld native int ÅÈ.Åﬂ::ÅÅ
    ldarg.0
    ldnull
    stfld class	[mscorlib]System.AppDomain ÅÈ.Åﬂ::˝
    ldloc.0
    ldloc.2
    callvirt instance void [mscorlib]System.AppDomain::DoCallBack(class	[mscorlib]System.CrossAppDomainDelegate)

loc_1B27:				// CODE	XREF: sub_1AF0+7j
    ret
  }
}
}

.namespace ÅÈ				// DATA	XREF: ˙+1r sub_1B90+1r ...
{
.class private auto serializable ansi beforefieldinit Å⁄ extends [mscorlib]System.Object
{
  .field private native	int ?∞

  .field private native	int ‰		// DATA	XREF: sub_1BD0+42w +182r

  .field private int32 ·		// DATA	XREF: sub_1BD0+31w +E4r

  .field private class [mscorlib]System.Reflection.Assembly ﬁ // DATA XREF: sub_1BD0+22w
					// +1Fr


  .method private hidebysig instance class [mscorlib]System.Reflection.Assembly	˙()
					// CODE	XREF: +FBp
  {
    .maxstack 4
    .locals (unsigned int8* V0,
	     unsigned int8[] V1,
	     int32 V2,
	     native int	V3)
    ldarg.0
    ldflda native int ÅÈ.Å⁄::?∞
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Ò(unsigned int8*)
    stloc.0
    ldloc.0
    brtrue.s loc_1B56
    ldnull
    ret

loc_1B56:				// CODE	XREF: ˙+12j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.3
    ldloc.3
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::ReadInt32(native int)
    stloc.2
    ldloc.0
    ldc.i4.4
    add
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloc.2
    newarr [mscorlib]System.Byte
    stloc.1
    ldloc.1
    ldc.i4.0
    ldloc.2
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.1
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[])
    ldloc.3
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ret
  }

  .method private hidebysig instance class [mscorlib]System.Reflection.Assembly	?()
					// CODE	XREF: +10Dp
  {
    .maxstack 4
    .locals (class [mscorlib]System.Reflection.Assembly	V0,
	     native int	V1,
	     unsigned int8* V2,
	     string V3)
    ldarg.0
    ldflda native int ÅÈ.Å⁄::?∞
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ˜(unsigned int8*)
    stloc.2
    ldloc.2
    brtrue.s loc_1BA6
    ldnull
    ret

loc_1BA6:				// CODE	XREF: sub_1B90+12j
    ldloc.2
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.1
    ldloc.1
    call string	[mscorlib]System.Runtime.InteropServices.Marshal::PtrToStringAnsi(native int)
    stloc.3
    ldloc.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldnull
    stloc.0
  .try {
    ldloc.3
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(string)
    stloc.0
    leave.s loc_1BC8
  }
  catch	[mscorlib]System.Exception {
    pop
    leave.s loc_1BC8
  }

loc_1BC8:				// CODE	XREF: sub_1B90+33j
    ldloc.0
    ret
  }

  .method public static	hidebysig int32	Å◊(class [mscorlib]System.Reflection.Assembly , int32 )
					// CODE	XREF: ExecuteEmbLockAssembly+7p
  {
    .maxstack 4
    .locals (class ÅÈ.Å⁄ V0,
	     unsigned int32 V1,
	     class [mscorlib]System.AppDomain V2,
	     int32 V3,
	     class [mscorlib]System.CrossAppDomainDelegate V4,
	     int32 V5,
	     native int	V6,
	     int32 V7,
	     native int	V8,
	     unsigned int32 V9,
	     valuetype [mscorlib]System.Guid V10)
    call T0x60000A1
    localloc
    stloc.3
    ldarg.0
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 8
    ldc.i4.0
    stloc.s 7
    newobj instance void ÅÈ.Å⁄::.ctor()
    stloc.0
    ldloc.0
    ldarg.0
    stfld class	[mscorlib]System.Reflection.Assembly ÅÈ.Å⁄::ﬁ
    ldloc.0
    ldloc.s 8
    stfld native int ÅÈ.Å⁄::?∞
    ldloc.0
    ldarg.1
    stfld int32	ÅÈ.Å⁄::·
    ldloca.s 7
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.s 6
    ldloc.0
    ldloc.s 6
    stfld native int ÅÈ.Å⁄::‰
    call valuetype [mscorlib]System.Guid [mscorlib]System.Guid::NewGuid()
    stloc.s 0xA
    ldloca.s 0xA
    call instance string [mscorlib]System.Guid::ToString()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::CreateDomain(string)
    stloc.2
    ldloc.2
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    stloc.s 5
    ldloc.2
    ldnull
    ldftn class	[mscorlib]System.Reflection.Assembly ÅÈ.Å⁄::Í(object ,	class [mscorlib]System.ResolveEventArgs	)
    newobj instance void [mscorlib]System.ResolveEventHandler::.ctor(object, native int)
    callvirt instance void [mscorlib]System.AppDomain::add_AssemblyResolve(class [mscorlib]System.ResolveEventHandler)
    ldloc.0
    ldftn instance void	ÅÈ.Å⁄::()
    newobj instance void [mscorlib]System.CrossAppDomainDelegate::.ctor(object,	native int)
    stloc.s 4
    ldloc.2
    ldloc.s 4
    callvirt instance void [mscorlib]System.AppDomain::DoCallBack(class	[mscorlib]System.CrossAppDomainDelegate)
  .try {
    ldloc.2
    call void [mscorlib]System.AppDomain::Unload(class [mscorlib]System.AppDomain)
    leave.s loc_1CAE
  }
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    stloc.s 9
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldc.i4.0
    ldc.i4.0
    ldc.i4.0
    call T0x60000A4
    endfilter
  filter 0x93 {
    pop
    ldc.i4.0
    stloc.1
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldloc.3
    call T0x60000A3
    pop
  .try {
    leave.s loc_1CAE
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x60000A2
    stloc.1
    ldloc.1
    endfilter
  filter 0xBB {
    pop
    leave.s loc_1C9D
  }

loc_1C9D:
    ldloc.1
    brfalse.s loc_1CA2
    rethrow

loc_1CA2:				// CODE	XREF: sub_1BD0+CEj
    leave.s loc_1CAC
  }
  finally  {
    ldloc.3
    ldloc.1
    call T0x60000A0
    endfinally
  }

loc_1CAC:				// CODE	XREF: sub_1BD0:loc_1CA2j
    leave.s loc_1CAE
  }

loc_1CAE:				// CODE	XREF: sub_1BD0+91j
					// sub_1BD0+B9j
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ¸()
    ldloc.s 5
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?(int32)
    pop
    ldloc.s 7
    ret
  }

  .method public hidebysig instance void () //	DATA XREF: sub_1BD0+76r
  {
    .maxstack 5
    .locals (unsigned int32 V0,
	     class [mscorlib]System.Reflection.FieldInfo V1,
	     class [mscorlib]System.AppDomainManager V2,
	     class [mscorlib]System.Reflection.Assembly	V3,
	     int32 V4,
	     string[] V5,
	     object[] V6,
	     class [mscorlib]System.Reflection.MethodInfo V7,
	     class [mscorlib]System.Reflection.Assembly	V8,
	     class [mscorlib]System.AppDomain V9,
	     object V10,
	     int32 V11,
	     string[] V12,
	     int32 V13,
	     unsigned int32 V14)
    ldnull
    stloc.1
    ldnull
    stloc.s 9
    ldnull
    stloc.2
    call T0x60000A1
    localloc
    stloc.s 4
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetEntryAssembly()
    stloc.s 8
    ldloc.s 8
    brtrue loc_1D9A
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly ÅÈ.Å⁄::ﬁ
    stsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
  .try {
    ldnull
    stloc.1
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    stloc.s 9
    ldloc.s 9
    call instance class	[mscorlib]System.AppDomainManager [mscorlib]System.AppDomain::get_DomainManager()
    stloc.2
    ldloc.2
    brtrue.s loc_1D26
    newobj instance void [mscorlib]System.AppDomainManager::.ctor()
    stloc.2
    ldtoken [mscorlib]System.AppDomain
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    ldstr "_domainManager"
    ldc.i4.s 0x24
    callvirt instance class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Type::GetField(string, valuetype [mscorlib]System.Reflection.BindingFlags)
    stloc.1
    ldloc.1
    brfalse.s loc_1D26
    ldloc.1
    ldloc.s 9
    ldloc.2
    callvirt instance void [mscorlib]System.Reflection.FieldInfo::SetValue(object, object)

loc_1D26:				// CODE	XREF: +3Bj +5Bj
    ldtoken [mscorlib]System.AppDomainManager
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    ldstr "m_entryAssembly"
    ldc.i4.s 0x24
    callvirt instance class [mscorlib]System.Reflection.FieldInfo [mscorlib]System.Type::GetField(string, valuetype [mscorlib]System.Reflection.BindingFlags)
    stloc.1
    ldloc.1
    brfalse.s loc_1D49
    ldloc.1
    ldloc.2
    ldloc.s 8
    callvirt instance void [mscorlib]System.Reflection.FieldInfo::SetValue(object, object)

loc_1D49:				// CODE	XREF: +7Ej
    leave.s loc_1D98
  }
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    stloc.s 0xE
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldc.i4.0
    ldc.i4.0
    ldc.i4.0
    call T0x60000A4
    endfilter
  filter 0x8B {
    pop
    ldc.i4.0
    stloc.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldloc.s 4
    call T0x60000A3
    pop
  .try {
    leave.s loc_1DA1
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x60000A2
    stloc.0
    ldloc.0
    endfilter
  filter 0xB4 {
    pop
    leave.s loc_1D86
  }

loc_1D86:
    ldloc.0
    brfalse.s loc_1D8B
    rethrow

loc_1D8B:				// CODE	XREF: +C7j
    leave.s loc_1D96
  }
  finally  {
    ldloc.s 4
    ldloc.0
    call T0x60000A0
    endfinally
  }

loc_1D96:				// CODE	XREF: :loc_1D8Bj
    leave.s loc_1D98
  }

loc_1D98:				// CODE	XREF: :loc_1D49j
    br.s loc_1DA1

loc_1D9A:				// CODE	XREF: +19j
    ldloc.s 8
    stsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?

loc_1DA1:				// CODE	XREF: +B2j :loc_1D98j
    ldnull
    stloc.3
    ldarg.0
    ldfld int32	ÅÈ.Å⁄::·
    ldc.i4 0x30000000
    and
    stloc.s 0xD
    ldloc.s 0xD
    ldc.i4 0x30000000
    bne.un.s loc_1DC3
    ldarg.0
    call instance class	[mscorlib]System.Reflection.Assembly ÅÈ.Å⁄::˙()
    stloc.3
    br.s loc_1DD3

loc_1DC3:				// CODE	XREF: +F8j
    ldloc.s 0xD
    ldc.i4 0x20000000
    bne.un.s loc_1DD3
    ldarg.0
    call instance class	[mscorlib]System.Reflection.Assembly ÅÈ.Å⁄::?()
    stloc.3

loc_1DD3:				// CODE	XREF: +101j +10Aj
    ldloc.3
    brfalse loc_1EA7
    ldloc.3
    callvirt instance class [mscorlib]System.Reflection.MethodInfo [mscorlib]System.Reflection.Assembly::get_EntryPoint()
    stloc.s 7
    ldloc.s 7
    brfalse loc_1EA7
    ldc.i4.0
    newarr [mscorlib]System.Object
    stloc.s 6
    ldloc.s 7
    callvirt instance class [mscorlib]System.Reflection.ParameterInfo[]	[mscorlib]System.Reflection.MethodBase::GetParameters()
    ldlen
    brfalse.s loc_1E31
    call string[] [mscorlib]System.Environment::GetCommandLineArgs()
    stloc.s 0xC
    ldloc.s 0xC
    ldlen
    ldc.i4.1
    sub
    newarr [mscorlib]System.String
    stloc.s 5
    ldloc.s 5
    ldlen
    stloc.s 0xB
    ldloc.s 0xB
    brfalse.s loc_1E23
    ldloc.s 0xC
    ldc.i4.1
    ldloc.s 5
    ldc.i4.0
    ldloc.s 0xB
    call void [mscorlib]System.Array::Copy(class [mscorlib]System.Array, int32,	class [mscorlib]System.Array, int32, int32)

loc_1E23:				// CODE	XREF: +154j
    ldc.i4.1
    newarr [mscorlib]System.Object
    stloc.s 6
    ldloc.s 6
    ldc.i4.0
    ldloc.s 5
    stelem.ref

loc_1E31:				// CODE	XREF: +138j
    ldloc.s 7
    ldnull
    ldloc.s 6
    callvirt instance object [mscorlib]System.Reflection.MethodBase::Invoke(object, object[])
    stloc.s 0xA
    ldloc.s 0xA
    brfalse.s loc_1EA7
  .try {
    ldarg.0
    ldflda native int ÅÈ.Å⁄::‰
    ldobj [mscorlib]System.IntPtr
    ldloc.s 0xA
    call int32 [mscorlib]System.Convert::ToInt32(object)
    call void [mscorlib]System.Runtime.InteropServices.Marshal::WriteInt32(native int, int32)
    leave.s loc_1EA7
  }
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    stloc.s 0xE
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldc.i4.0
    ldc.i4.0
    ldc.i4.0
    call T0x60000A4
    endfilter
  filter 0x19A {
    pop
    ldc.i4.0
    stloc.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldloc.s 4
    call T0x60000A3
    pop
  .try {
    leave.s loc_1EA7
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x60000A2
    stloc.0
    ldloc.0
    endfilter
  filter 0x1C3 {
    pop
    leave.s loc_1E95
  }

loc_1E95:
    ldloc.0
    brfalse.s loc_1E9A
    rethrow

loc_1E9A:				// CODE	XREF: +1D6j
    leave.s loc_1EA5
  }
  finally  {
    ldloc.s 4
    ldloc.0
    call T0x60000A0
    endfinally
  }

loc_1EA5:				// CODE	XREF: :loc_1E9Aj
    leave.s loc_1EA7
  }

loc_1EA7:				// CODE	XREF: +114j +123j ...
    ret
  }

  .method public static	hidebysig class	[mscorlib]System.Reflection.Assembly Í(object , class [mscorlib]System.ResolveEventArgs )
					// DATA	XREF: sub_1BD0+65r
  {
    .maxstack 1
    ldarg.1
    call instance string [mscorlib]System.ResolveEventArgs::get_Name()
    call class [mscorlib]System.Reflection.Assembly Åı(string )
    ret
  }

  .method public hidebysig specialname rtspecialname instance void .ctor()
					// CODE	XREF: sub_1BD0+1Ap
  {
    .maxstack 1
    ldarg.0
    call instance void [mscorlib]System.Object::.ctor()
    ret
  }
}
}

.namespace PvLogiciels.dotNetProtector	// DATA	XREF: sub_1F00+Dw
					// InitModule+B0w ...
{
.class public auto ansi	beforefieldinit	RuntimeInterop extends [mscorlib]System.Object implements PvLogiciels.dotNetProtector.IRuntime
{
  .field assembly class	[mscorlib]System.Reflection.Assembly[] ı

  .field assembly class	[mscorlib]System.Reflection.Assembly Åæ	// DATA	XREF: InitModule+85w
					// ResolveAssembly+E6r

  .field assembly string ?¥		// DATA	XREF: InitModule+9Bw
					// ResolveAssembly+D9r


  .method private static hidebysig unsigned int8* ÿ(class [mscorlib]System.Reflection.Assembly )
  {
    .maxstack 2
    .locals (native int	V0)
    ldarg.0
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ret
  }

  .method assembly hidebysig specialname rtspecialname instance	void .ctor()
					// CODE	XREF: InitRuntimep
  {
    .maxstack 2
    ldarg.0
    call instance void [mscorlib]System.Object::.ctor()
    ldarg.0
    ldc.i4.0
    newarr [mscorlib]System.Reflection.Assembly
    stfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    ret
  }

  .method assembly hidebysig instance class [mscorlib]System.Reflection.Assembly Å„(native int )
					// CODE	XREF: ResolveAssembly+B0p
  {
    .maxstack 4
    .locals (class [mscorlib]System.Reflection.Assembly	V0,
	     unsigned int8[] V1,
	     unsigned int8* V2,
	     int32 V3,
	     int32 V4,
	     int32 V5,
	     native int	V6,
	     unsigned int8[] V7,
	     native int	V8,
	     int32 V9,
	     native int	V10,
	     native int	V11,
	     valuetype [mscorlib]System.RuntimeTypeHandle V12)
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    stloc.s 9
    ldarga.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* π(void*)
    stloc.2
    ldloc.2
    brtrue.s loc_1F3E
    ldnull
    ret

loc_1F3E:				// CODE	XREF: sub_1F20+1Aj
    ldloc.2
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.s 6
    ldloc.s 6
    starg.s 1
    ldloc.s 6
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::ReadInt32(native int)
    stloc.s 5
    ldarg.1
    ldc.i4.4
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::ReadInt32(native int, int32)
    stloc.s 4
    ldarg.1
    ldc.i4.8
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::ReadInt32(native int, int32)
    stloc.3
    ldloc.2
    ldc.i4.s 0xC
    add
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloc.2
    ldloc.s 4
    add
    ldc.i4.s 0xC
    add
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.s 8
    ldloc.s 4
    newarr [mscorlib]System.Byte
    stloc.1
    ldloc.1
    ldc.i4.0
    ldloc.s 4
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.3
    brfalse.s loc_1FAC
    ldloc.3
    newarr [mscorlib]System.Byte
    stloc.s 7
    ldloc.s 8
    ldloc.1
    ldc.i4.0
    ldloc.3
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.1
    ldloc.s 7
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[],	unsigned int8[])
    stloc.0
    br.s loc_1FB3

loc_1FAC:				// CODE	XREF: sub_1F20+6Dj
    ldloc.1
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[])
    stloc.0

loc_1FB3:				// CODE	XREF: sub_1F20+8Aj
    ldarg.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldloc.0
    brfalse.s loc_2003
    ldloc.s 5
    ldc.i4.0
    blt.s loc_2003
    ldloc.0
    callvirt instance class [mscorlib]System.Type[] [mscorlib]System.Reflection.Assembly::GetTypes()
    dup
    ldlen
    ldc.i4.1
    sub
    ldelem.ref
    callvirt instance valuetype	[mscorlib]System.RuntimeTypeHandle [mscorlib]System.Type::get_TypeHandle()
    stloc.s 0xC
    ldloca.s 0xC
    call instance native int [mscorlib]System.RuntimeTypeHandle::get_Value()
    stloc.s 0xB
    ldloc.0
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 0xA
    ldloca.s 0xA
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0xB
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloc.s 5
    ldloc.s 9
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å?(unsigned int8*, void*, int32,	int32)
    pop

loc_2003:				// CODE	XREF: sub_1F20+9Aj
					// sub_1F20+9Fj
    ldloc.0
    ret
  }

  .method assembly static hidebysig void “(class [mscorlib]System.Reflection.Assembly )
  {
    .maxstack 5
    .locals (native int	V0,
	     string V1,
	     native int	V2)
    ldarg.0
    call string	[PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime::GetAssemblyString(class [mscorlib]System.Reflection.Assembly)
    stloc.1
    ldsfld native int [mscorlib]System.IntPtr::Zero
    stloc.0
    ldloc.1
    ldnull
    call bool [mscorlib]System.String::op_Inequality(string, string)
    brfalse.s loc_202D
    ldloc.1
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::StringToCoTaskMemAnsi(string)
    stloc.0

loc_202D:				// CODE	XREF: “+14j
    ldarg.0
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldc.i4.0
    ldc.i4.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å?(unsigned int8*, void*, int32*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*,	int32)
    pop
    ldloc.0
    ldsfld native int [mscorlib]System.IntPtr::Zero
    call bool [mscorlib]System.IntPtr::op_Inequality(native int, native	int)
    brfalse.s loc_206E
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)

loc_206E:				// CODE	XREF: “+56j
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Reflection.Assembly GetEntryAssembly()
  {
    .maxstack 2
    .locals (class [mscorlib]System.Reflection.Assembly	V0)
    ldsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
    brfalse.s loc_207D
    ldsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
    ret

loc_207D:				// CODE	XREF: GetEntryAssembly+5j
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetEntryAssembly()
    stloc.0
    ldloc.0
    brfalse.s loc_208E
    ldloc.0
    stsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
    ldloc.0
    ret

loc_208E:				// CODE	XREF: GetEntryAssembly+14j
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::GetExecutingAssembly()
    stloc.0
    ldloc.0
    callvirt instance string [mscorlib]System.Reflection.Assembly::get_FullName()
    ldstr "PvLogiciels.dotNetProtector.Runtime"
    call instance bool [mscorlib]System.String::StartsWith(string)
    brtrue.s loc_20AE
    ldloc.0
    stsfld class [mscorlib]System.Reflection.Assembly ÅÈ.ÅÍ::Å?
    ldloc.0
    ret

loc_20AE:				// CODE	XREF: GetEntryAssembly+34j
    ldnull
    ret
  }
  .method public static	hidebysig class	[PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.IRuntime InitRuntime()
  {
    .maxstack 4
    .locals (class ÅÈ.Åﬂ V0)
    newobj instance void PvLogiciels.dotNetProtector.RuntimeInterop::.ctor()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance bool [mscorlib]System.AppDomain::IsDefaultAppDomain()
    brfalse.s loc_20D9
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldnull
    ldftn void PvLogiciels.dotNetProtector.RuntimeInterop::AppDomain_ProcessExit(object	sender,	class [mscorlib]System.EventArgs e)
    newobj instance void [mscorlib]System.EventHandler::.ctor(object, native int)
    callvirt instance void [mscorlib]System.AppDomain::add_ProcessExit(class [mscorlib]System.EventHandler)
    br.s loc_2104

loc_20D9:				// CODE	XREF: InitRuntime+Fj
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    newobj instance void ÅÈ.Åﬂ::.ctor(class [mscorlib]System.AppDomain domain, int32 domainId)
    stloc.0
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    ldloc.0
    ldftn instance void	ÅÈ.Åﬂ::?(object	, class [mscorlib]System.EventArgs )
    newobj instance void [mscorlib]System.EventHandler::.ctor(object, native int)
    callvirt instance void [mscorlib]System.AppDomain::add_DomainUnload(class [mscorlib]System.EventHandler)

loc_2104:				// CODE	XREF: InitRuntime+27j
    ret
  }

  .method public static	hidebysig void AppDomain_ProcessExit(object sender, class [mscorlib]System.EventArgs e)
					// DATA	XREF: InitRuntime+17r
  {
    .maxstack 0
    call void [mscorlib]System.GC::Collect()
    call void [mscorlib]System.GC::WaitForPendingFinalizers()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ø()
    ret
  }
  .method public hidebysig virtual newslot instance void NGenInitRuntime()
  {
    .maxstack 0
    ret
  }

  .method public hidebysig virtual newslot instance unsigned int64 GetComputerHash()
  {
    .maxstack 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int64	Åç()
    ret
  }

  .method public hidebysig virtual newslot instance int64 GetMacAddress()
  {
    .maxstack 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int64 À()
    ret
  }

  .method public hidebysig virtual newslot instance unsigned int64 GetBiosHash()
  {
    .maxstack 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int64	”()
    ret
  }

  .method public hidebysig virtual newslot instance int32 UnloadDomain()
  {
    .maxstack 1
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?(int32)
    ret
  }
  .method public hidebysig virtual newslot instance int32 InitModule(class [mscorlib]System.Type pReserved1, native int	pReserved2, string Reserved3)
  {
    .maxstack 5
    .locals (int32 V0,
	     int32 V1,
	     native int	V2,
	     int32 V3,
	     native int	V4,
	     native int	V5,
	     valuetype [mscorlib]System.RuntimeTypeHandle V6)
    ldsfld native int [mscorlib]System.IntPtr::Zero
    stloc.2
    ldarg.3
    ldnull
    call bool [mscorlib]System.String::op_Inequality(string, string)
    brfalse.s loc_2186
    ldarg.3
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::StringToCoTaskMemAnsi(string)
    stloc.2

loc_2186:				// CODE	XREF: InitModule+Dj
    ldarg.1
    callvirt instance valuetype	[mscorlib]System.RuntimeTypeHandle [mscorlib]System.Type::get_TypeHandle()
    stloc.s 6
    ldloca.s 6
    call instance native int [mscorlib]System.RuntimeTypeHandle::get_Value()
    stloc.s 5
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 4
    ldloca.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 5
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call class [mscorlib]System.AppDomain [mscorlib]System.AppDomain::get_CurrentDomain()
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å?(unsigned int8*, void*, int32*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*,	int32)
    stloc.3
    ldloc.2
    ldsfld native int [mscorlib]System.IntPtr::Zero
    call bool [mscorlib]System.IntPtr::op_Inequality(native int, native	int)
    brfalse.s loc_21EA
    ldloc.2
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)

loc_21EA:				// CODE	XREF: InitModule+72j
    ldloc.3
    ldc.i4.2
    bne.un.s loc_223C
    ldarg.0
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    stfld class	[mscorlib]System.Reflection.Assembly PvLogiciels.dotNetProtector.RuntimeInterop::Åæ
    ldarg.0
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.AssemblyName [mscorlib]System.Reflection.Assembly::GetName()
    call instance string [mscorlib]System.Reflection.AssemblyName::get_Name()
    stfld string PvLogiciels.dotNetProtector.RuntimeInterop::?¥
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åù()
    stloc.1
    ldloc.1
    brfalse.s loc_223C
    ldarg.0
    ldloc.1
    newarr [mscorlib]System.Reflection.Assembly
    stfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    ldc.i4.0
    stloc.0
    ldc.i4.0
    ldloc.1
    bge.s loc_223C

loc_222B:				// CODE	XREF: InitModule+CAj
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    ldloc.0
    ldnull
    stelem.ref
    ldloc.0
    ldc.i4.1
    add
    stloc.0
    ldloc.0
    ldloc.1
    blt.s loc_222B

loc_223C:				// CODE	XREF: InitModule+7Cj
					// InitModule+A7j ...
    ldloc.3
    ret
  }

  .method public hidebysig virtual newslot instance string DesignLicenseKey(class [mscorlib]System.Type	pReserved1, string pReserved2)
  {
    .maxstack 3
    .locals (native int	V0,
	     native int	V1,
	     native int	V2,
	     native int	V3)
    call int32 [mscorlib]System.IntPtr::get_Size()
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::AllocCoTaskMem(int32)
    stloc.2
    ldarg.2
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::StringToCoTaskMemAnsi(string)
    stloc.1
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.3
    ldloca.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ‡(unsigned int8*,	modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte)	int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    ldloc.2
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::ReadIntPtr(native	int)
    stloc.0
    ldnull
    ldloc.0
    ldsfld native int [mscorlib]System.IntPtr::Zero
    call bool [mscorlib]System.IntPtr::op_Inequality(native int, native	int)
    brfalse.s loc_22A1
    pop
    ldloc.0
    call string	[mscorlib]System.Runtime.InteropServices.Marshal::PtrToStringAnsi(native int)
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeHGlobal(native int)

loc_22A1:				// CODE	XREF: DesignLicenseKey+52j
    ldloc.2
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldloc.1
    ldsfld native int [mscorlib]System.IntPtr::Zero
    call bool [mscorlib]System.IntPtr::op_Inequality(native int, native	int)
    brfalse.s loc_22BA
    ldloc.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)

loc_22BA:				// CODE	XREF: DesignLicenseKey+72j
    ret
  }

  .method public hidebysig virtual newslot instance bool SameSoftware(class [mscorlib]System.Reflection.Assembly, native int pReserved,	unsigned int64 pSoft)
  {
    .maxstack 4
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.3
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åß(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int64, int32*)
    brtrue.s loc_22F6
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_22F6:				// CODE	XREF: SameSoftware+24j
    ldloc.0
    ldc.i4.0
    bne.un.s loc_22FD
    ldc.i4.0
    br.s loc_22FE

loc_22FD:				// CODE	XREF: SameSoftware+38j
    ldc.i4.1

loc_22FE:				// CODE	XREF: SameSoftware+3Bj
    conv.u1
    ret
  }
  .method public hidebysig virtual newslot instance bool IsLicensed(class [mscorlib]System.Reflection.Assembly,	string pReserved, bool licenseKey)
  {
    .maxstack 3
    .locals (native int	V0,
	     int32 V1,
	     native int	V2)
    ldarg.2
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::StringToCoTaskMemAnsi(string)
    stloc.0
    ldarg.3
    ldc.i4.0
    bne.un.s loc_230E
    ldc.i4.0
    br.s loc_230F

loc_230E:				// CODE	XREF: IsLicensed+9j
    ldc.i4.1

loc_230F:				// CODE	XREF: IsLicensed+Cj
    stloc.1
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloc.1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å´(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32)
    ldloc.0
    ldsfld native int [mscorlib]System.IntPtr::Zero
    call bool [mscorlib]System.IntPtr::op_Inequality(native int, native	int)
    brfalse.s loc_2345
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)

loc_2345:				// CODE	XREF: IsLicensed+3Dj
    ldc.i4.0
    bne.un.s loc_234B
    ldc.i4.0
    br.s loc_234C

loc_234B:				// CODE	XREF: IsLicensed+46j
    ldc.i4.1

loc_234C:				// CODE	XREF: IsLicensed+49j
    conv.u1
    ret
  }

  .method public hidebysig virtual newslot instance int32 HardwareScore(class [mscorlib]System.Reflection.Assembly pReserved, unsigned int64 HwConfig1,	unsigned int64 HwConfig2)
  {
    .maxstack 4
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ¢(unsigned int8*, unsigned int64, unsigned int64, int32*)
    brtrue.s loc_2380
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2380:				// CODE	XREF: HardwareScore+1Ej
    ldloc.0
    ret
  }

  .method public hidebysig virtual newslot instance native int GenProductKey(class [mscorlib]System.Reflection.Assembly	pReserved, native int pKeys, unsigned int32 LicenseID, unsigned	int64 data)
  {
    .maxstack 5
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.3
    ldarg.s 4
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å∂(unsigned int8*, void*, unsigned int32, unsigned int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_23C8
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_23C8:				// CODE	XREF: GenProductKey+26j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GenProductKey(class [mscorlib]System.Reflection.Assembly	pReserved, native int pKeys, unsigned int32 LicenseID)
  {
    .maxstack 4
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.3
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å∂(unsigned int8*, void*, unsigned int32, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_2406
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2406:				// CODE	XREF: sub_23D0+24j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance unsigned int32 GetLicenseId(class [mscorlib]System.Reflection.Assembly pReserved, native int pProductKey)
  {
    .maxstack 3
    .locals (unsigned int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅΩ(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int32*)
    brtrue.s loc_2445
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2445:				// CODE	XREF: GetLicenseId+23j
    ldloc.0
    ret
  }

  .method public hidebysig virtual newslot instance unsigned int64 GetProductkeyData(class [mscorlib]System.Reflection.Assembly	pReserved, native int pProductKey)
  {
    .maxstack 4
    .locals (unsigned int64 V0,
	     unsigned int32 V1,
	     native int	V2)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 1
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅΩ(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, unsigned int32*, unsigned int64*)
    brtrue.s loc_2487
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2487:				// CODE	XREF: GetProductkeyData+25j
    ldloc.0
    ret
  }

  .method public hidebysig virtual newslot instance native int DecodeActivationString(class [mscorlib]System.Reflection.Assembly pReserved, native int pKeys, native int pActivationString)
  {
    .maxstack 4
    .locals (unsigned int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≈(unsigned int8*, void*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*,	unsigned int8**)
    brtrue.s loc_24CC
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_24CC:				// CODE	XREF: DecodeActivationString+2Aj
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int EncodeActivationRequest(class [mscorlib]System.Reflection.Assembly pReserved, native int	preq)
  {
    .maxstack 3
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 «(unsigned int8*, void*,	modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte)	int8**)
    brtrue.s loc_2515
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2515:				// CODE	XREF: EncodeActivationRequest+23j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GetConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned	int32 LicenseID, unsigned int16	ActivationDuration)
  {
    .maxstack 4
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned int8*, unsigned int32, unsigned int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_2550
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2550:				// CODE	XREF: GetConfig+1Ej
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GetConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned	int32 LicenseID, unsigned int16	ActivationDuration, native int pAssemblyFile)
  {
    .maxstack 5
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldarga.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned int8*, unsigned int32, unsigned int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_2597
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2597:				// CODE	XREF: sub_2560+25j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GetConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned	int32 LicenseID, unsigned int16	ActivationDuration, class [mscorlib]System.Reflection.AssemblyName Name)
  {
    .maxstack 7
    .locals (unsigned int8[] V0,
	     modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V1,
	     native int	V2,
	     native int	V3,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V4)
    ldarg.s 4
    call instance string [mscorlib]System.Reflection.AssemblyName::get_Name()
    pop
    call class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    ldstr ""
    call string	[mscorlib]System.String::Concat(object)
    callvirt instance unsigned int8[] [mscorlib]System.Text.Encoding::GetBytes(string)
    stloc.0
    ldloc.0
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 4
    ldloc.0
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.3
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldloca.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.s 4
    call instance class	[mscorlib]System.Version [mscorlib]System.Reflection.AssemblyName::get_Version()
    call instance int32	[mscorlib]System.Version::get_Major()
    conv.u2
    ldarg.s 4
    call instance class	[mscorlib]System.Version [mscorlib]System.Reflection.AssemblyName::get_Version()
    call instance int32	[mscorlib]System.Version::get_Minor()
    conv.u2
    ldloca.s 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å“(unsigned int8*, unsigned int32, unsigned int16, unsigned int8*, unsigned int16, unsigned int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    ldloca.s 4
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    brtrue.s loc_2626
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2626:				// CODE	XREF: sub_25A0+74j
    ldloc.1
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance string GetThumbPrint(class [mscorlib]System.Reflection.Assembly pReserved)
  {
    .maxstack 4
    .locals (int32 V0,
	     class [mscorlib]System.Text.StringBuilder V1,
	     valuetype ¯.Å– V2,
	     native int	V3)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.3
    ldloca.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 2
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åÿ(unsigned int8*, unsigned int8*)
    brtrue.s loc_265E
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_265E:				// CODE	XREF: GetThumbPrint+1Cj
    newobj instance void [mscorlib]System.Text.StringBuilder::.ctor()
    stloc.1
    ldc.i4.0
    stloc.0

loc_2666:				// CODE	XREF: GetThumbPrint+60j
    ldloc.1
    ldstr "{0:x}"
    ldloc.0
    ldloca.s 2
    add
    ldind.u1
    box	[mscorlib]System.Byte
    call string	[mscorlib]System.String::Format(string,	object)
    ldc.i4.2
    ldc.i4.s 0x30
    call instance string [mscorlib]System.String::PadLeft(int32, char)
    call instance class	[mscorlib]System.Text.StringBuilder [mscorlib]System.Text.StringBuilder::Append(string)
    pop
    ldloc.0
    ldc.i4.1
    add
    stloc.0
    ldloc.0
    ldc.i4.s 0x14
    blt.s loc_2666
    ldloc.1
    callvirt instance string [mscorlib]System.Text.StringBuilder::ToString()
    ret
  }

  .method public hidebysig virtual newslot instance unsigned int8[] GetConfigForDemo(class [mscorlib]System.Reflection.Assembly	pReserved)
  {
    .maxstack 4
    .locals (native int	V0,
	     unsigned int8[] V1,
	     unsigned int32 V2,
	     unsigned int8* V3,
	     native int	V4)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 4
    ldloca.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 2
    ldloca.s 3
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Åµ(unsigned int8*, unsigned int32*, unsigned int8**)
    brtrue.s loc_26D1
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_26D1:				// CODE	XREF: GetConfigForDemo+1Fj
    ldloc.2
    newarr [mscorlib]System.Byte
    stloc.1
    ldloc.3
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.0
    ldloc.0
    ldloc.1
    ldc.i4.0
    ldloc.2
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.0
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldloc.1
    ret
  }
  .method public hidebysig virtual newslot instance native int GetUsbConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned int32 LicenseID, unsigned int16 ActivationDuration, unsigned	int64 UsbHash, unsigned	int64 UsbIdentity)
  {
    .maxstack 6
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldarg.s 4
    ldarg.s 5
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned int8*, unsigned int32, unsigned int16, unsigned int64, unsigned int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_2724
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2724:				// CODE	XREF: GetUsbConfig+22j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GetUsbConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned int32 LicenseID, unsigned int16 ActivationDuration, unsigned	int64 UsbHash, unsigned	int64 UsbIdentity, native int pAssemblyFile)
  {
    .maxstack 7
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldarg.s 4
    ldarg.s 5
    ldarga.s 6
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned int8*, unsigned int32, unsigned int16, unsigned int64, unsigned int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_276B
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_276B:				// CODE	XREF: sub_2730+29j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GetUsbConfig(class [mscorlib]System.Reflection.Assembly pReserved, unsigned int32 LicenseID, unsigned int16 ActivationDuration, unsigned	int64 UsbHash, unsigned	int64 UsbIdentity, class [mscorlib]System.Reflection.AssemblyName Name)
  {
    .maxstack 9
    .locals (unsigned int8[] V0,
	     modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V1,
	     native int	V2,
	     native int	V3,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V4)
    ldarg.s 6
    call instance string [mscorlib]System.Reflection.AssemblyName::get_Name()
    pop
    call class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    ldstr ""
    call string	[mscorlib]System.String::Concat(object)
    callvirt instance unsigned int8[] [mscorlib]System.Text.Encoding::GetBytes(string)
    stloc.0
    ldloc.0
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 4
    ldloc.0
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.3
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.2
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.2
    ldarg.3
    ldarg.s 4
    ldarg.s 5
    ldloca.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.s 6
    call instance class	[mscorlib]System.Version [mscorlib]System.Reflection.AssemblyName::get_Version()
    call instance int32	[mscorlib]System.Version::get_Major()
    conv.u2
    ldarg.s 6
    call instance class	[mscorlib]System.Version [mscorlib]System.Reflection.AssemblyName::get_Version()
    call instance int32	[mscorlib]System.Version::get_Minor()
    conv.u2
    ldloca.s 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅË(unsigned int8*, unsigned int32, unsigned int16, unsigned int64, unsigned int64, unsigned int8*, unsigned int16, unsigned int16, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    ldloca.s 4
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    brtrue.s loc_280A
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_280A:				// CODE	XREF: sub_2780+78j
    ldloc.1
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GenerateLicense(class [mscorlib]System.Reflection.Assembly pReserved, native int	pKeys, native int preq)
  {
    .maxstack 4
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å(unsigned int8*, void*, void*,	modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte)	int8**)
    brtrue.s loc_285C
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_285C:				// CODE	XREF: GenerateLicense+2Aj
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GenerateLicense(class [mscorlib]System.Reflection.Assembly pReserved, native int	pKeys, native int preq,	int32 tolerance, bool [hasfieldmarshal]	ignoreMinor, int64 RuntimeLicensesLimit)
  {
    .maxstack 7
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.s 4
    ldarg.s 5
    ldarg.s 6
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å(unsigned int8*, void*, void*,	int32, int32, int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**)
    brtrue.s loc_28B2
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_28B2:				// CODE	XREF: sub_2870+30j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GenerateUsbLicense(class	[mscorlib]System.Reflection.Assembly pReserved,	native int pKeys, native int preq)
  {
    .maxstack 5
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    ldc.i4.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≠(unsigned int8*, void*, void*,	modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte)	int8**,	unsigned int8)
    brtrue.s loc_28FD
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_28FD:				// CODE	XREF: GenerateUsbLicense+2Bj
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int GenerateUsbLicense(class	[mscorlib]System.Reflection.Assembly pReserved,	native int pKeys, native int preq, int32 tolerance, bool [hasfieldmarshal] ignoreMinor,	int64 RuntimeLicensesLimit)
  {
    .maxstack 8
    .locals (modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8* V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 3
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarg.s 4
    ldarg.s 5
    ldarg.s 6
    ldloca.s 0
    ldc.i4.0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 Å≠(unsigned int8*, void*, void*,	int32, int32, int64, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8**, unsigned int8)
    brtrue.s loc_2953
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2953:				// CODE	XREF: sub_2910+31j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Reflection.Assembly ResolveAssembly(string Name)
  {
    .maxstack 4
    .locals (int32 V0,
	     unsigned int32 V1,
	     class [mscorlib]System.Reflection.Assembly[] V2,
	     unsigned int8[] V3,
	     int32 V4,
	     native int	V5,
	     class [mscorlib]System.Reflection.Assembly	V6,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V7,
	     unsigned int32 V8,
	     class [mscorlib]System.Reflection.AssemblyName V9)
    call T0x60000A1
    localloc
    stloc.s 4
  .try {
    ldarg.1
    newobj instance void [mscorlib]System.Reflection.AssemblyName::.ctor(string)
    stloc.s 9
    leave.s loc_29C6
  }
    pop
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionCode()
    stloc.s 8
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldc.i4.0
    ldc.i4.0
    ldc.i4.0
    call T0x60000A4
    endfilter
  filter 0x13 {
    pop
    ldc.i4.0
    stloc.1
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    ldloc.s 4
    call T0x60000A3
    pop
  .try {
    ldnull
    stloc.s 6
    leave loc_2A4E
  }
    pop
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetExceptionPointers()
    call T0x60000A2
    stloc.1
    ldloc.1
    endfilter
  filter 0x42 {
    pop
    leave.s loc_29B4
  }

loc_29B4:
    ldloc.1
    brfalse.s loc_29B9
    rethrow

loc_29B9:				// CODE	XREF: ResolveAssembly+55j
    leave.s loc_29C4
  }
  finally  {
    ldloc.s 4
    ldloc.1
    call T0x60000A0
    endfinally
  }

loc_29C4:				// CODE	XREF: ResolveAssembly:loc_29B9j
    leave.s loc_29C6
  }

loc_29C6:				// CODE	XREF: ResolveAssembly+11j
    call class [mscorlib]System.Text.Encoding [mscorlib]System.Text.Encoding::get_UTF8()
    ldarg.1
    callvirt instance unsigned int8[] [mscorlib]System.Text.Encoding::GetBytes(string)
    stloc.3
    ldloc.3
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 7
    ldloc.3
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.s 5
    ldloca.s 5
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ≤(void*)
    stloc.0
    ldloc.0
    ldc.i4.0
    blt.s loc_2A26
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    stloc.2
    ldloc.0
    ldloc.2
    ldlen
    bge.s loc_2A26
    ldloc.2
    ldloc.0
    ldelem.ref
    brtrue.s loc_2A16
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    ldloc.0
    ldarg.0
    ldloc.s 5
    call instance class	[mscorlib]System.Reflection.Assembly PvLogiciels.dotNetProtector.RuntimeInterop::Å„(native int )
    stelem.ref

loc_2A16:				// CODE	XREF: ResolveAssembly+A4j
    ldloca.s 7
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly[] PvLogiciels.dotNetProtector.RuntimeInterop::ı
    ldloc.0
    ldelem.ref
    ret

loc_2A26:				// CODE	XREF: ResolveAssembly+93j
					// ResolveAssembly+9Fj
    ldloca.s 7
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldarg.1
    newobj instance void [mscorlib]System.Reflection.AssemblyName::.ctor(string)
    call instance string [mscorlib]System.Reflection.AssemblyName::get_Name()
    ldarg.0
    ldfld string PvLogiciels.dotNetProtector.RuntimeInterop::?¥
    call bool [mscorlib]System.String::op_Equality(string, string)
    brfalse.s loc_2A4C
    ldarg.0
    ldfld class	[mscorlib]System.Reflection.Assembly PvLogiciels.dotNetProtector.RuntimeInterop::Åæ
    ret

loc_2A4C:				// CODE	XREF: ResolveAssembly+E3j
    ldnull
    ret

loc_2A4E:				// CODE	XREF: ResolveAssembly+3Dj
    ldloc.s 6
    ret
  }

  .method public hidebysig virtual newslot instance int32 ExecuteEmbLockAssembly(class [mscorlib]System.Type pReserved1, int32 Reserved2)
  {
    .maxstack 2
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    ldarg.2
    call int32 ÅÈ.Å⁄::Å◊(class [mscorlib]System.Reflection.Assembly , int32 )
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Reflection.Assembly GetEmbLockAssembly(class	[mscorlib]System.Type pReserved1)
  {
    .maxstack 4
    .locals (unsigned int8* V0,
	     unsigned int8[] V1,
	     int32 V2,
	     native int	V3,
	     native int	V4)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 4
    ldloca.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Ò(unsigned int8*)
    stloc.0
    ldloc.0
    brtrue.s loc_2A96
    ldnull
    ret

loc_2A96:				// CODE	XREF: GetEmbLockAssembly+22j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.3
    ldloc.3
    call int32 [mscorlib]System.Runtime.InteropServices.Marshal::ReadInt32(native int)
    stloc.2
    ldloc.0
    ldc.i4.4
    add
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloc.2
    newarr [mscorlib]System.Byte
    stloc.1
    ldloc.1
    ldc.i4.0
    ldloc.2
    call void [mscorlib]System.Runtime.InteropServices.Marshal::Copy(native int, unsigned int8[], int32, int32)
    ldloc.1
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(unsigned	int8[])
    ldloc.3
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Reflection.Assembly GetEmbLockAssemblyName(class [mscorlib]System.Type pReserved1)
  {
    .maxstack 4
    .locals (class [mscorlib]System.Reflection.Assembly	V0,
	     native int	V1,
	     unsigned int8* V2,
	     string V3,
	     native int	V4)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 4
    ldloca.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ˜(unsigned int8*)
    stloc.2
    ldloc.2
    brtrue.s loc_2AF6
    ldnull
    ret

loc_2AF6:				// CODE	XREF: GetEmbLockAssemblyName+22j
    ldloc.2
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.1
    ldloc.1
    call string	[mscorlib]System.Runtime.InteropServices.Marshal::PtrToStringAnsi(native int)
    stloc.3
    ldloc.1
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldnull
    stloc.0
  .try {
    ldloc.3
    call class [mscorlib]System.Reflection.Assembly [mscorlib]System.Reflection.Assembly::Load(string)
    stloc.0
    leave.s loc_2B18
  }
  catch	[mscorlib]System.Exception {
    pop
    leave.s loc_2B18
  }

loc_2B18:				// CODE	XREF: GetEmbLockAssemblyName+43j
    ldloc.0
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Collections.ArrayList GetEmbLockAssemblyServices(class [mscorlib]System.Type	pReserved1)
  {
    .maxstack 2
    .locals (unsigned int8* V0,
	     string V1,
	     class [mscorlib]System.Collections.ArrayList V2,
	     native int	V3,
	     native int	V4)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Assembly [mscorlib]System.Type::get_Assembly()
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.s 4
    ldloca.s 4
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ??(unsigned int8*)
    stloc.0
    ldloc.0
    brtrue.s loc_2B46
    ldnull
    ret

loc_2B46:				// CODE	XREF: GetEmbLockAssemblyServices+22j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    stloc.3
    newobj instance void [mscorlib]System.Collections.ArrayList::.ctor()
    stloc.2
    ldloc.0
    ldind.u1
    brfalse.s loc_2B7A

loc_2B57:				// CODE	XREF: GetEmbLockAssemblyServices+58j
    ldloc.0
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    call string	[mscorlib]System.Runtime.InteropServices.Marshal::PtrToStringAnsi(native int)
    stloc.1
    ldloc.2
    ldloc.1
    callvirt instance int32 [mscorlib]System.Collections.ArrayList::Add(object)
    pop
    ldloc.1
    call instance int32	[mscorlib]System.String::get_Length()
    ldloc.0
    add
    ldc.i4.1
    add
    stloc.0
    ldloc.0
    ldind.u1
    brtrue.s loc_2B57

loc_2B7A:				// CODE	XREF: GetEmbLockAssemblyServices+35j
    ldloc.3
    call void [mscorlib]System.Runtime.InteropServices.Marshal::FreeCoTaskMem(native int)
    ldloc.2
    ret
  }

  .method public hidebysig virtual newslot instance bool ProductKeyChecksumIsOk(class [mscorlib]System.Reflection.Assembly, native int pReserved)
  {
    .maxstack 3
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ??(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*)
    brtrue.s loc_2BC5
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2BC5:				// CODE	XREF: ProductKeyChecksumIsOk+23j
    ldloc.0
    ldc.i4.0
    bne.un.s loc_2BCC
    ldc.i4.0
    br.s loc_2BCD

loc_2BCC:				// CODE	XREF: ProductKeyChecksumIsOk+37j
    ldc.i4.1

loc_2BCD:				// CODE	XREF: ProductKeyChecksumIsOk+3Aj
    conv.u1
    ret
  }

  .method public hidebysig virtual newslot instance bool ConfigStringChecksumIsOk(class	[mscorlib]System.Reflection.Assembly, native int pReserved)
  {
    .maxstack 3
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?°(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*)
    brtrue.s loc_2C05
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2C05:				// CODE	XREF: ConfigStringChecksumIsOk+23j
    ldloc.0
    ldc.i4.0
    bne.un.s loc_2C0C
    ldc.i4.0
    br.s loc_2C0D

loc_2C0C:				// CODE	XREF: ConfigStringChecksumIsOk+37j
    ldc.i4.1

loc_2C0D:				// CODE	XREF: ConfigStringChecksumIsOk+3Aj
    conv.u1
    ret
  }

  .method public hidebysig virtual newslot instance bool LicenseKeyChecksumIsOk(class [mscorlib]System.Reflection.Assembly, native int pReserved)
  {
    .maxstack 3
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldarga.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ÅŸ(unsigned int8*, modopt([mscorlib]System.Runtime.CompilerServices.IsSignUnspecifiedByte) int8*, int32*)
    brtrue.s loc_2C45
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2C45:				// CODE	XREF: LicenseKeyChecksumIsOk+23j
    ldloc.0
    ldc.i4.0
    bne.un.s loc_2C4C
    ldc.i4.0
    br.s loc_2C4D

loc_2C4C:				// CODE	XREF: LicenseKeyChecksumIsOk+37j
    ldc.i4.1

loc_2C4D:				// CODE	XREF: LicenseKeyChecksumIsOk+3Aj
    conv.u1
    ret
  }

  .method public hidebysig virtual newslot instance bool IsDemo(class [mscorlib]System.Reflection.Assembly)
  {
    .maxstack 2
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?´(unsigned int8*, int32*)
    brtrue.s loc_2C7E
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2C7E:				// CODE	XREF: IsDemo+1Cj
    ldloc.0
    ldc.i4.0
    bne.un.s loc_2C85
    ldc.i4.0
    br.s loc_2C86

loc_2C85:				// CODE	XREF: IsDemo+30j
    ldc.i4.1

loc_2C86:				// CODE	XREF: IsDemo+33j
    conv.u1
    ret
  }

  .method public hidebysig virtual newslot instance int32 DaysLeft(class [mscorlib]System.Reflection.Assembly pReserved)
  {
    .maxstack 2
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?Ø(unsigned int8*, int32*)
    brtrue.s loc_2CBE
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2CBE:				// CODE	XREF: DaysLeft+1Cj
    ldloc.0
    ret
  }
  .method public hidebysig virtual newslot instance int32 MinutesLeft(class [mscorlib]System.Reflection.Assembly pReserved)
  {
    .maxstack 2
    .locals (int32 V0,
	     native int	V1)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.1
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 0
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?π(unsigned int8*, int32*)
    brtrue.s loc_2CEE
    ldtoken [PvLogiciels.dotNetProtector.Runtime]PvLogiciels.dotNetProtector.Runtime
    call class [mscorlib]System.Type [mscorlib]System.Type::GetTypeFromHandle(valuetype	[mscorlib]System.RuntimeTypeHandle)
    newobj instance void [System]System.ComponentModel.LicenseException::.ctor(class [mscorlib]System.Type)
    throw

loc_2CEE:				// CODE	XREF: MinutesLeft+1Cj
    ldloc.0
    ret
  }
  .method public hidebysig virtual newslot instance unsigned int32 GetProductID(class [mscorlib]System.Reflection.Assembly pReserved)
  {
    .maxstack 2
    .locals (native int	V0)
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) unsigned int32	?(unsigned int8*)
    ret
  }

  .method public hidebysig virtual newslot instance void UnloadAppdomain(class [mscorlib]System.AppDomain domain)
  {
    .maxstack 2
    ldarg.1
    call instance int32	[mscorlib]System.AppDomain::get_Id()
    ldarg.1
    call void [mscorlib]System.AppDomain::Unload(class [mscorlib]System.AppDomain)
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) int32 ?(int32)
    pop
    ret
  }

  .method public hidebysig virtual newslot instance native int StartUsbDetect()
  {
    .maxstack 1
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* Å¯()
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ret
  }

  .method public hidebysig virtual newslot instance void EndUsbDetect(native int handle)
  {
    .maxstack 1
    ldarga.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(void*)
    ret
  }

  .method public hidebysig virtual newslot instance native int LoadNativeLibrary(class [mscorlib]System.Reflection.Assembly pReserved, native int[] pointers)
  {
    .maxstack 2
    .locals (native int	V0,
	     native int	V1,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V2)
    ldarg.2
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.2
    ldarg.2
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.1
    ldarg.1
    callvirt instance class [mscorlib]System.Reflection.Module[] [mscorlib]System.Reflection.Assembly::GetLoadedModules()
    ldc.i4.0
    ldelem.ref
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::GetHINSTANCE(class [mscorlib]System.Reflection.Module)
    stloc.0
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void* ??(unsigned int8*, void**)
    call native	int [mscorlib]System.IntPtr::op_Explicit(void*)
    ldloca.s 2
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ret
  }

  .method public hidebysig virtual newslot instance void FreeNativeLibrary(native int pLib)
  {
    .maxstack 1
    ldarga.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(void*)
    ret
  }

  .method public hidebysig virtual newslot instance class [mscorlib]System.Diagnostics.StackFrame[] GetFrames(class [mscorlib]System.Diagnostics.StackTrace trace)
  {
    .maxstack 1
    ldarg.1
    brtrue.s loc_2DAA
    ldc.i4.0
    newarr [mscorlib]System.Diagnostics.StackFrame
    ret

loc_2DAA:				// CODE	XREF: GetFrames+1j
    ldarg.1
    callvirt instance class [mscorlib]System.Diagnostics.StackFrame[] [mscorlib]System.Diagnostics.StackTrace::GetFrames()
    ret
  }

  .method public hidebysig virtual newslot instance void EncodeTrace(valuetype [mscorlib]System.Guid[] Guids, int64[] Indexes, native int[] Handles)
  {
    .maxstack 4
    .locals (native int	V0,
	     native int	V1,
	     native int	V2,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V3,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V4,
	     valuetype [mscorlib]System.Runtime.InteropServices.GCHandle V5)
    ldarg.1
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 5
    ldarg.2
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.s 4
    ldarg.3
    ldc.i4.3
    call valuetype [mscorlib]System.Runtime.InteropServices.GCHandle [mscorlib]System.Runtime.InteropServices.GCHandle::Alloc(object, valuetype	[mscorlib]System.Runtime.InteropServices.GCHandleType)
    stloc.3
    ldarg.1
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.2
    ldarg.2
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.1
    ldarg.3
    ldc.i4.0
    call native	int [mscorlib]System.Runtime.InteropServices.Marshal::UnsafeAddrOfPinnedArrayElement(class [mscorlib]System.Array, int32)
    stloc.0
    ldarg.3
    ldlen
    ldloca.s 0
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 1
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    ldloca.s 2
    call instance void*	[mscorlib]System.IntPtr::ToPointer()
    call modopt([mscorlib]System.Runtime.CompilerServices.CallConvCdecl) void ?(int32, void*, void*, void*)
    ldloca.s 5
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldloca.s 4
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ldloca.s 3
    call instance void [mscorlib]System.Runtime.InteropServices.GCHandle::Free()
    ret
  }
}
}

.namespace ¯
{
.class private sequential sealed ansi beforefieldinit Å– extends [mscorlib]System.ValueType
{
}
}

.class public auto ansi	beforefieldinit	<dotNetProtector> extends [mscorlib]System.Object
{
  .field assembly static initonly hasfieldrva int64 _Reserved // RVA = 00096EA4
}

    // end start
