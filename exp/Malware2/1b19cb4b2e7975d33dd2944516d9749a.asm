;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2010 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-B231-7414-99			    |
; |		       NCFTA Canada/Concordia University		    |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	1B19CB4B2E7975D33DD2944516D9749A
; Input	CRC32 :	EB06B9FD

; File Name   :	c:\Users\farhadi\Desktop\Sample\samples\1b19cb4b2e7975d33dd2944516d9749a
; Format      :	Portable executable for	80386 (PE)
; Imagebase   :	400000
; Section 1. (virtual address 00001000)
; Virtual size			: 00008844 (  34884.)
; Section size in file		: 00008A00 (  35328.)
; Offset to raw	data for section: 00000400
; Flags	60300020: Text Executable Readable
; Alignment	: 4 bytes

		.686p
		.mmx
		.model flat

; ===========================================================================

; Segment type:	Pure code
; Segment permissions: Read/Execute
_text		segment	dword public 'CODE' use32
		assume cs:_text
		;org 401000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401000	proc near		; DATA XREF: sub_405E99+242o

var_A8		= dword	ptr -0A8h
var_A4		= dword	ptr -0A4h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_74		= byte ptr -74h
var_34		= dword	ptr -34h
hdc		= dword	ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 9Ch
		mov	edx, [ebp+arg_4]
		mov	eax, [ebp+arg_C]
		cmp	edx, 0Fh
		jz	short loc_401032
		cmp	edx, 46h
		jnz	loc_4011F8
		mov	ecx, ds:dword_426BA0
		or	dword ptr [eax+18h], 10h
		mov	[eax+4], ecx
		jmp	loc_4011F8
; ---------------------------------------------------------------------------

loc_401032:				; CODE XREF: sub_401000+15j
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_74]
		mov	esi, ds:hInstance
		mov	[esp+0A8h+var_A4], eax
		mov	[esp+0A8h+var_A8], ecx
		call	ds:BeginPaint
		mov	ecx, [ebp+arg_0]
		mov	[ebp+var_24], 0
		push	ebx		; lpRect
		push	ebx		; hWnd
		mov	ebx, eax
		lea	eax, [ebp+var_34]
		mov	[esp+0A8h+var_A8], ecx
		mov	[esp+0A8h+var_A4], eax
		call	ds:GetClientRect
		mov	ecx, [ebp+var_28]
		mov	[ebp+var_28], 0
		mov	[ebp+var_7C], ecx
		push	edi		; lprc
		push	edi		; plbrush
		jmp	loc_401120
; ---------------------------------------------------------------------------

loc_40107D:				; CODE XREF: sub_401000+126j
		mov	ecx, [ebp+var_7C]
		sub	ecx, edi
		mov	[ebp+var_80], ecx
		mov	ecx, [esi+54h]
		movzx	edx, ch
		mov	ecx, [esi+50h]
		imul	edx, edi
		movzx	eax, ch
		imul	eax, [ebp+var_80]
		add	eax, edx
		cdq
		idiv	[ebp+var_7C]
		movzx	edx, byte ptr [esi+54h]
		imul	edx, edi
		movzx	ecx, al
		movzx	eax, byte ptr [esi+50h]
		imul	eax, [ebp+var_80]
		shl	ecx, 8
		add	eax, edx
		cdq
		idiv	[ebp+var_7C]
		mov	edx, [esi+50h]
		sar	edx, 10h
		movzx	edx, dl
		imul	edx, [ebp+var_80]
		movzx	eax, al
		or	ecx, eax
		mov	eax, [esi+54h]
		sar	eax, 10h
		movzx	eax, al
		imul	eax, edi
		add	eax, edx
		cdq
		idiv	[ebp+var_7C]
		movzx	eax, al
		shl	eax, 10h
		or	ecx, eax
		lea	eax, [ebp+var_24]
		mov	[ebp+var_20], ecx
		mov	[esp+0A8h+var_A8], eax
		call	ds:CreateBrushIndirect
		add	[ebp+var_28], 4
		push	edx		; hDC
		mov	edi, eax
		mov	[esp+0A8h+var_A0], eax
		lea	eax, [ebp+var_34]
		mov	[esp+0A8h+var_A4], eax
		mov	[esp+0A8h+var_A8], ebx
		call	ds:FillRect
		sub	esp, 0Ch
		mov	[esp+0A8h+var_A8], edi
		call	ds:DeleteObject
		add	[ebp+hdc], 4
		push	ecx		; lplf

loc_401120:				; CODE XREF: sub_401000+78j
		mov	edi, [ebp+hdc]
		cmp	edi, [ebp+var_7C]
		jl	loc_40107D
		cmp	dword ptr [esi+58h], 0FFFFFFFFh
		jz	loc_4011DF
		mov	eax, [esi+34h]
		mov	[esp+0A8h+var_A8], eax
		call	ds:CreateFontIndirectA
		test	eax, eax
		push	edi		; hdc
		mov	edi, eax
		jz	loc_4011DF
		mov	[esp+0A8h+var_A8], ebx
		mov	[ebp+var_34], 10h
		mov	[ebp+hdc], 8
		mov	[esp+0A8h+var_A4], 1
		call	ds:SetBkMode
		push	edx		; color
		push	edx		; hdc
		mov	eax, [esi+58h]
		mov	[esp+0A8h+var_A8], ebx
		mov	[esp+0A8h+var_A4], eax
		call	ds:SetTextColor
		mov	esi, ds:SelectObject
		push	ecx		; h
		push	ecx		; hdc
		mov	[esp+0A8h+var_A8], ebx
		mov	[esp+0A8h+var_A4], edi
		call	esi ; SelectObject
		push	edx		; lpchText
		push	edx		; hdc
		mov	edx, eax
		lea	eax, [ebp+var_34]
		mov	[esp+0A8h+var_A8], ebx
		mov	[ebp+var_84], edx
		mov	[esp+0A8h+var_98], 820h
		mov	[esp+0A8h+var_9C], eax
		mov	[esp+0A8h+var_A0], 0FFFFFFFFh
		mov	[esp+0A8h+var_A4], offset dword_426BA8
		call	ds:DrawTextA
		mov	edx, [ebp+var_84]
		sub	esp, 14h
		mov	[esp+0A8h+var_A4], edx
		mov	[esp+0A8h+var_A8], ebx
		call	esi ; SelectObject
		push	ecx		; lpPaint
		push	ecx		; ho
		mov	[esp+0A8h+var_A8], edi
		call	ds:DeleteObject
		push	ebx		; hWnd

loc_4011DF:				; CODE XREF: sub_401000+130j
					; sub_401000+147j
		mov	ecx, [ebp+arg_0]
		lea	eax, [ebp+var_74]
		mov	[esp+0A8h+var_A4], eax
		mov	[esp+0A8h+var_A8], ecx
		call	ds:EndPaint
		push	eax		; Msg
		push	eax		; hWnd
		xor	eax, eax
		jmp	short loc_401216
; ---------------------------------------------------------------------------

loc_4011F8:				; CODE XREF: sub_401000+1Aj
					; sub_401000+2Dj
		mov	[esp+0A8h+var_9C], eax
		mov	ecx, [ebp+arg_0]
		mov	eax, [ebp+arg_8]
		mov	[esp+0A8h+var_A4], edx
		mov	[esp+0A8h+var_A8], ecx
		mov	[esp+0A8h+var_A0], eax
		call	ds:DefWindowProcA
		sub	esp, 10h

loc_401216:				; CODE XREF: sub_401000+1F6j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_401000	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401220	proc near		; CODE XREF: sub_40164F+2080p
					; sub_4063B0+4D6p

arg_0		= dword	ptr  8

		push	ebp
		mov	ecx, ds:dword_426B54
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, [ebp+arg_0]
		imul	esi, ebx, 418h
		mov	edi, [ecx+esi+8]
		test	edi, 2
		jz	short loc_401288
		inc	ebx
		xor	edx, edx
		xor	eax, eax
		add	esi, ecx
		and	edi, 1
		jmp	short loc_401280
; ---------------------------------------------------------------------------

loc_40124D:				; CODE XREF: sub_401220+66j
		mov	ecx, [esi+edx+420h]
		test	cl, 2
		jz	short loc_40125C
		inc	eax
		jmp	short loc_401279
; ---------------------------------------------------------------------------

loc_40125C:				; CODE XREF: sub_401220+37j
		test	cl, 4
		jz	short loc_401268
		test	eax, eax
		jz	short loc_401288
		dec	eax
		jmp	short loc_401279
; ---------------------------------------------------------------------------

loc_401268:				; CODE XREF: sub_401220+3Fj
		test	cl, 10h
		jnz	short loc_401279
		and	ecx, 0FFFFFFFEh
		or	ecx, edi
		mov	[esi+edx+420h],	ecx

loc_401279:				; CODE XREF: sub_401220+3Aj
					; sub_401220+46j ...
		inc	ebx
		add	edx, 418h

loc_401280:				; CODE XREF: sub_401220+2Bj
		cmp	ebx, ds:dword_426B58
		jb	short loc_40124D

loc_401288:				; CODE XREF: sub_401220+1Fj
					; sub_401220+43j
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_401220	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40128F	proc near		; CODE XREF: sub_40128F+5Ap
					; sub_40164F+20C7p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [ebp+arg_0]
		mov	edx, ds:dword_426B54
		imul	ebx, eax, 418h
		mov	[ebp+var_1C], edx
		add	ebx, edx
		mov	edx, [ebx+8]
		test	dl, 2
		jz	short loc_4012C1
		cmp	[ebp+arg_4], 0
		jz	short loc_4012C1
		and	edx, 0FFFFFFBEh
		inc	eax
		mov	[ebx+8], edx

loc_4012C1:				; CODE XREF: sub_40128F+23j
					; sub_40128F+29j
		xor	edi, edi
		xor	esi, esi
		jmp	short loc_40132B
; ---------------------------------------------------------------------------

loc_4012C7:				; CODE XREF: sub_40128F+A2j
		imul	edx, eax, 418h
		add	edx, [ebp+var_1C]
		mov	ecx, [edx+8]
		test	cl, 2
		jnz	short loc_4012DB
		inc	eax
		jmp	short loc_4012F6
; ---------------------------------------------------------------------------

loc_4012DB:				; CODE XREF: sub_40128F+47j
		mov	[ebp+var_20], edx
		mov	[esp+38h+var_34], 1
		mov	[esp+38h+var_38], eax
		call	sub_40128F
		push	edx
		push	edx
		mov	edx, [ebp+var_20]
		mov	ecx, [edx+8]

loc_4012F6:				; CODE XREF: sub_40128F+4Aj
		test	cl, 4
		jz	short loc_401317
		test	esi, esi
		jz	short loc_401335
		test	edi, edi
		jz	short loc_401309
		or	dword ptr [ebx+8], 40h
		jmp	short loc_401335
; ---------------------------------------------------------------------------

loc_401309:				; CODE XREF: sub_40128F+72j
		mov	edx, [ebx+8]
		or	edx, 1
		and	dl, 7Fh
		mov	[ebx+8], edx
		jmp	short loc_401335
; ---------------------------------------------------------------------------

loc_401317:				; CODE XREF: sub_40128F+6Aj
		mov	edx, ecx
		and	edx, 40h
		cmp	edx, 1
		sbb	esi, 0FFFFFFFFh
		and	cl, 1
		jz	short loc_40132A
		inc	esi
		jmp	short loc_40132B
; ---------------------------------------------------------------------------

loc_40132A:				; CODE XREF: sub_40128F+96j
		inc	edi

loc_40132B:				; CODE XREF: sub_40128F+36j
					; sub_40128F+99j
		cmp	eax, ds:dword_426B58
		jb	short loc_4012C7
		xor	eax, eax

loc_401335:				; CODE XREF: sub_40128F+6Ej
					; sub_40128F+78j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_40128F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40133F	proc near		; CODE XREF: sub_40164F+20B2p
					; sub_4063B0+5FDp ...

arg_0		= dword	ptr  8

		push	ebp
		mov	edx, ds:dword_426B54
		mov	ebp, esp
		mov	ecx, [ebp+arg_0]
		push	ebx
		cmp	ecx, 1Fh
		ja	short loc_401383
		mov	eax, 1
		shl	eax, cl
		xor	ecx, ecx
		jmp	short loc_40137B
; ---------------------------------------------------------------------------

loc_40135C:				; CODE XREF: sub_40133F+42j
		mov	ebx, [edx+8]
		test	bl, 6
		jnz	short loc_401374
		test	[edx+4], eax
		jz	short loc_40136E
		or	ebx, 1
		jmp	short loc_401371
; ---------------------------------------------------------------------------

loc_40136E:				; CODE XREF: sub_40133F+28j
		and	ebx, 0FFFFFFFEh

loc_401371:				; CODE XREF: sub_40133F+2Dj
		mov	[edx+8], ebx

loc_401374:				; CODE XREF: sub_40133F+23j
		inc	ecx
		add	edx, 418h

loc_40137B:				; CODE XREF: sub_40133F+1Bj
		cmp	ecx, ds:dword_426B58
		jb	short loc_40135C

loc_401383:				; CODE XREF: sub_40133F+10j
		pop	ebx
		pop	ebp
		retn	4
sub_40133F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401388	proc near		; CODE XREF: sub_40164F+20DCp
					; sub_4063B0+701p

var_20		= dword	ptr -20h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		xor	ecx, ecx
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 14h
		mov	eax, ds:dword_426B54
		mov	edx, ds:dword_426B58
		mov	edi, [ebp+arg_0]
		mov	[ebp+var_10], eax
		mov	eax, ds:hInstance
		mov	[ebp+var_14], edx

loc_4013AC:				; CODE XREF: sub_401388+7Bj
		cmp	dword ptr [eax+ecx*4+94h], 0
		jz	short loc_4013FF
		mov	edx, 1
		mov	ebx, [ebp+var_10]
		shl	edx, cl
		mov	[ebp+var_18], edx
		xor	edx, edx
		mov	[ebp+var_20], eax
		jmp	short loc_4013F5
; ---------------------------------------------------------------------------

loc_4013CA:				; CODE XREF: sub_401388+70j
		mov	esi, [ebx+8]
		test	esi, 6
		jnz	short loc_4013EE
		test	edi, edi
		jz	short loc_4013DF
		cmp	dword ptr [edi+edx*4], 0
		jz	short loc_4013EE

loc_4013DF:				; CODE XREF: sub_401388+4Fj
		mov	eax, [ebp+var_18]
		and	esi, 1
		and	eax, [ebx+4]
		shl	esi, cl
		cmp	eax, esi
		jnz	short loc_4013FC

loc_4013EE:				; CODE XREF: sub_401388+4Bj
					; sub_401388+55j
		inc	edx
		add	ebx, 418h

loc_4013F5:				; CODE XREF: sub_401388+40j
		cmp	edx, [ebp+var_14]
		jnz	short loc_4013CA
		jmp	short loc_401405
; ---------------------------------------------------------------------------

loc_4013FC:				; CODE XREF: sub_401388+64j
		mov	eax, [ebp+var_20]

loc_4013FF:				; CODE XREF: sub_401388+2Cj
		inc	ecx
		cmp	ecx, 20h
		jnz	short loc_4013AC

loc_401405:				; CODE XREF: sub_401388+72j
		add	esp, 14h
		mov	eax, ecx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_401388	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401414	proc near		; CODE XREF: sub_40148F+14p
					; sub_40164F+1E0p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		cdq
		mov	ebp, esp
		push	ebx
		mov	ebx, eax
		mov	eax, edx
		sub	esp, 24h
		xor	eax, ebx
		sub	eax, edx
		mov	edx, ds:dword_40D000
		mov	ecx, eax
		and	ecx, 0Fh
		sar	eax, 4
		mov	edx, [edx+ecx*4]
		shl	eax, 0Ah
		add	eax, offset dword_40D004
		mov	[esp+28h+var_28], eax
		mov	[esp+28h+var_24], edx
		call	sub_407B23
		test	ebx, ebx
		push	edx
		push	edx
		jns	short loc_40145E
		mov	[esp+28h+var_28], eax
		mov	[ebp+var_C], eax
		call	sub_407A4F
		push	eax
		mov	eax, [ebp+var_C]

loc_40145E:				; CODE XREF: sub_401414+39j
		mov	ebx, [ebp+var_4]
		leave
		retn
sub_401414	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401463	proc near		; CODE XREF: sub_40164F+E4p
					; sub_40164F+134p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	edx, ds:dword_40D000
		mov	eax, [edx+eax*4]
		mov	[esp+18h+var_18], 0
		mov	[esp+18h+var_14], eax
		call	sub_407B23
		push	ecx
		push	ecx
		mov	[esp+18h+var_18], eax
		call	sub_407972
		push	edx
		leave
		retn
sub_401463	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40148F	proc near		; CODE XREF: sub_40164F+16DCp
					; sub_40164F+1892p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	ebx, ds:dword_426B38
		or	ebx, eax
		mov	eax, 22h
		call	sub_401414
		mov	edx, ds:dword_40D000
		mov	edx, [edx+4]
		test	edx, edx
		jnz	short loc_4014C1
		mov	edx, ds:dword_426B0C
		sub	edx, 7FFFFFFFh

loc_4014C1:				; CODE XREF: sub_40148F+24j
		lea	ecx, [ebp+var_C]
		mov	[esp+38h+var_2C], ebx
		mov	[esp+38h+var_38], edx
		mov	[esp+38h+var_28], ecx
		mov	[esp+38h+var_30], 0
		mov	[esp+38h+var_34], eax
		call	ds:RegOpenKeyExA
		xor	edx, edx
		mov	ebx, [ebp+var_4]
		sub	esp, 14h
		test	eax, eax
		cmovz	edx, [ebp+var_C]
		leave
		mov	eax, edx
		retn
sub_40148F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4014F3	proc near		; CODE XREF: sub_4014F3+6Ep
					; sub_40164F:loc_402D80p

var_158		= dword	ptr -158h
var_154		= dword	ptr -154h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_148		= dword	ptr -148h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_121		= byte ptr -121h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		mov	ebx, edx
		sub	esp, 14Ch
		lea	eax, [ebp+var_1C]
		mov	[esp+158h+var_148], eax
		mov	eax, ds:dword_426B38
		mov	[ebp+var_130], ecx
		mov	[esp+158h+var_150], 0
		mov	[esp+158h+var_154], edx
		or	eax, 8
		mov	[esp+158h+var_14C], eax
		mov	[esp+158h+var_158], esi
		call	ds:RegOpenKeyExA
		sub	esp, 14h
		test	eax, eax
		jz	short loc_40156C
		jmp	loc_401607
; ---------------------------------------------------------------------------

loc_40153D:				; CODE XREF: sub_4014F3+AFj
		cmp	[ebp+var_130], 0
		mov	eax, [ebp+var_1C]
		jz	short loc_40155D
		mov	[esp+158h+var_158], eax
		call	ds:RegCloseKey
		mov	eax, 1
		push	ecx
		jmp	loc_401607
; ---------------------------------------------------------------------------

loc_40155D:				; CODE XREF: sub_4014F3+54j
		xor	ecx, ecx
		mov	edx, edi
		call	sub_4014F3
		test	eax, eax
		jz	short loc_40157D
		jmp	short loc_4015A4
; ---------------------------------------------------------------------------

loc_40156C:				; CODE XREF: sub_4014F3+43j
		mov	eax, ds:RegEnumKeyA
		lea	edi, [ebp+var_121]
		mov	[ebp+var_12C], eax

loc_40157D:				; CODE XREF: sub_4014F3+75j
		mov	eax, [ebp+var_1C]
		mov	[esp+158h+var_14C], 105h
		mov	[esp+158h+var_150], edi
		mov	[esp+158h+var_154], 0
		mov	[esp+158h+var_158], eax
		call	[ebp+var_12C]
		sub	esp, 10h
		test	eax, eax
		jz	short loc_40153D

loc_4015A4:				; CODE XREF: sub_4014F3+77j
		mov	eax, [ebp+var_1C]
		mov	[esp+158h+var_158], eax
		call	ds:RegCloseKey
		push	edi
		mov	[esp+158h+var_158], 2
		call	sub_407EF3
		test	eax, eax
		push	edx
		jz	short loc_4015E2
		mov	edx, ds:dword_426B38
		mov	[esp+158h+var_14C], 0
		mov	[esp+158h+var_154], ebx
		mov	[esp+158h+var_158], esi
		mov	[esp+158h+var_150], edx
		call	eax
		sub	esp, 10h
		jmp	short loc_401607
; ---------------------------------------------------------------------------

loc_4015E2:				; CODE XREF: sub_4014F3+CDj
		cmp	ds:dword_426B38, 0
		mov	eax, 1
		jnz	short loc_401607
		mov	[esp+158h+var_154], ebx
		mov	[esp+158h+var_158], esi
		call	ds:RegDeleteKeyA
		test	eax, eax
		push	ecx
		setnz	al
		push	ecx
		movzx	eax, al

loc_401607:				; CODE XREF: sub_4014F3+45j
					; sub_4014F3+65j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_4014F3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40160F	proc near		; CODE XREF: sub_40164F+A9p
					; sub_4037F0+34p

arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		mov	eax, [ebp+arg_0]
		test	eax, eax
		jns	short locret_40162C
		not	eax
		shl	eax, 0Ah
		add	eax, offset dword_42A000
		mov	[ebp+arg_0], eax
		leave
		jmp	sub_407972
; ---------------------------------------------------------------------------

locret_40162C:				; CODE XREF: sub_40160F+8j
		leave
		retn	4
sub_40160F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_401630	proc near		; CODE XREF: sub_40164F+2B1p
					; sub_40164F+2DFp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_14], offset byte_40D404
		mov	[esp+18h+var_18], eax
		call	sub_406DB2
		push	eax
		push	eax
		leave
		retn	4
sub_401630	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40164F	proc near		; CODE XREF: sub_4037F0+25p

var_234		= dword	ptr -234h
var_230		= dword	ptr -230h
var_22C		= dword	ptr -22Ch
var_220		= dword	ptr -220h
var_21C		= dword	ptr -21Ch
var_218		= dword	ptr -218h
var_214		= dword	ptr -214h
var_210		= dword	ptr -210h
var_20C		= dword	ptr -20Ch
var_204		= dword	ptr -204h
var_200		= dword	ptr -200h
var_1FC		= dword	ptr -1FCh
var_1F8		= dword	ptr -1F8h
var_1F4		= dword	ptr -1F4h
var_1F0		= dword	ptr -1F0h
var_1EC		= dword	ptr -1ECh
var_1E8		= dword	ptr -1E8h
var_1E4		= dword	ptr -1E4h
var_1E0		= dword	ptr -1E0h
var_1DC		= dword	ptr -1DCh
var_1D8		= dword	ptr -1D8h
var_1D4		= dword	ptr -1D4h
var_1D0		= dword	ptr -1D0h
var_1CC		= dword	ptr -1CCh
var_1C8		= dword	ptr -1C8h
var_1C4		= dword	ptr -1C4h
var_1C0		= dword	ptr -1C0h
var_1BC		= dword	ptr -1BCh
var_1B8		= dword	ptr -1B8h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
hFindFile	= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_180		= dword	ptr -180h
var_17C		= dword	ptr -17Ch
var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= word ptr -170h
var_166		= dword	ptr -166h
var_154		= byte ptr -154h
var_40		= dword	ptr -40h
lpString2	= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ecx, 7
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 1CCh
		mov	edx, ds:dword_426BA0
		lea	edi, [ebp+var_40]
		mov	[ebp+var_194], edx
		rep movsd
		mov	eax, [ebp+var_38]
		mov	esi, [ebp+lpString2]
		mov	edx, eax
		shl	edx, 0Ah
		mov	ebx, esi
		mov	[ebp+var_198], edx
		add	edx, offset dword_42A000
		mov	[ebp+hFindFile], edx
		lea	edx, [ebp+lpString2]
		mov	ds:dword_40D000, edx
		mov	edx, [ebp+var_40]
		shl	ebx, 0Ah
		lea	edi, dword_42A000[ebx]
		sub	edx, 2		; switch 66 cases
		cmp	edx, 41h
		ja	loc_4037D8	; jumptable 004016B3 default case
		jmp	ds:off_40B004[edx*4] ; switch jump

loc_4016BA:				; DATA XREF: .rdata:off_40B004o
		mov	[esp+1D8h+var_1D4], 0 ;	jumptable 004016B3 case	3
		mov	[esp+1D8h+var_1D8], esi
		jmp	loc_401CAF
; ---------------------------------------------------------------------------

loc_4016CA:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		inc	ds:dword_4273A8	; jumptable 004016B3 case 4
		mov	esi, 7FFFFFFFh
		cmp	[ebp+var_194], 0
		jz	loc_4037E6	; jumptable 004016B3 case 2
		mov	[esp+1D8h+var_1D8], 0
		call	ds:PostQuitMessage
		push	ebx
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_4016F5:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	[esp+1D8h+var_1D8], esi	; jumptable 004016B3 case 5
		call	sub_40160F
		dec	eax
		push	edx
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], eax
		call	sub_4037F0
		push	ecx
		mov	esi, eax
		push	ecx
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_401718:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	[esp+1D8h+var_1D8], esi	; jumptable 004016B3 case 6
		xor	esi, esi
		mov	[esp+1D8h+var_1D4], 0
		call	sub_406DB2
		push	eax
		push	eax		; dwMilliseconds
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401731:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 7
		call	sub_401463
		mov	edx, 1
		test	eax, eax
		cmovg	edx, eax
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edx
		call	ds:Sleep
		push	eax		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401753:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, [ebp+var_194] ; jumptable 004016B3	case 8
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edx
		call	ds:SetForegroundWindow
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40176A:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		cmp	[ebp+var_34], 0	; jumptable 004016B3 case 13
		jnz	short loc_401796
		mov	eax, ds:dword_426B08[esi*4]
		mov	ds:dword_426AD0[esi*4],	eax
		mov	eax, 1
		call	sub_401463
		mov	ds:dword_426B08[esi*4],	eax
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401796:				; CODE XREF: sub_40164F+11Fj
		mov	eax, ds:dword_426AD0[esi*4]
		mov	ds:dword_426B08[esi*4],	eax
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4017AB:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, [ebp+var_34] ; jumptable 004016B3 case 14
		xor	ecx, ecx
		mov	edx, ds:dword_426B08[eax*4]
		test	edx, edx
		setz	cl
		and	edx, [ebp+var_30]
		mov	esi, [ebp+ecx*4+lpString2]
		mov	ds:dword_426B08[eax*4],	edx
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_4017CF:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, ds:dword_426B08[eax*4] ; jumptable	004016B3 case 15
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	eax		; nCmdShow
		push	eax		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4017EB:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, ds:dword_4273AC ; jumptable 004016B3 case 9
		test	edx, edx
		jz	short loc_401804
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	ds:ShowWindow
		push	eax		; nCmdShow
		push	eax		; hWnd

loc_401804:				; CODE XREF: sub_40164F+1A4j
		mov	eax, ds:dword_4273B0
		xor	esi, esi
		test	eax, eax
		jz	loc_4037DE
		mov	edx, [ebp+lpString2]
		mov	[esp+1D8h+var_1D8], eax
		mov	[esp+1D8h+var_1D4], edx
		call	ds:ShowWindow
		push	edi		; dwFileAttributes
		push	edi		; lpFileName
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40182A:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFF0h	; jumptable 004016B3 case 10
		call	sub_401414
		mov	edx, [ebp+var_38]
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	ds:SetFileAttributesA
		xor	ecx, ecx
		test	eax, eax
		push	ebx
		setz	cl
		push	ebx
		mov	esi, ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401854:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFF0h	; jumptable 004016B3 case 11
		xor	esi, esi
		call	sub_401414
		mov	ebx, eax
		mov	[esp+1D8h+var_1D8], eax
		call	sub_40768C
		test	eax, eax
		push	ecx
		jz	loc_4018F3
		mov	edx, ds:CreateDirectoryA
		mov	[ebp+hFindFile], ebx
		mov	[ebp+var_18C], edx

loc_401885:				; CODE XREF: sub_40164F+29Cj
		mov	[esp+1D8h+var_1D4], 5Ch
		mov	[esp+1D8h+var_1D8], eax
		call	sub_4075F0
		push	ecx		; lpNewFileName
		mov	edi, eax
		push	ecx
		mov	bl, [eax]
		mov	byte ptr [eax],	0
		mov	eax, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], eax
		call	[ebp+var_18C]
		test	eax, eax
		push	edx
		push	edx		; lpFileName
		jnz	short loc_4018E4
		call	ds:GetLastError
		cmp	eax, 0B7h
		jz	short loc_4018CB
		inc	esi
		jmp	short loc_4018E4
; ---------------------------------------------------------------------------

loc_4018CB:				; CODE XREF: sub_40164F+277j
		mov	eax, [ebp+hFindFile]
		mov	[esp+1E0h+var_1E0], eax
		call	ds:GetFileAttributesA
		and	eax, 10h
		cmp	eax, 1
		push	edx
		adc	esi, 0

loc_4018E4:				; CODE XREF: sub_40164F+26Aj
					; sub_40164F+27Aj
		test	bl, bl
		mov	[edi], bl
		lea	eax, [edi+1]
		jnz	short loc_401885
		mov	ebx, [ebp+hFindFile]

loc_4018F3:				; CODE XREF: sub_40164F+21Ej
		cmp	[ebp+var_38], 0
		jz	short loc_401927
		mov	[esp+1E0h+var_1E0], 0FFFFFFE6h
		call	sub_401630
		push	eax
		mov	[esp+1E0h+var_1DC], ebx
		mov	[esp+1E0h+var_1E0], offset dword_42F800
		call	sub_407A11
		push	eax
		push	eax		; lpPathName
		mov	[esp+1E0h+var_1E0], ebx
		call	ds:SetCurrentDirectoryA
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401927:				; CODE XREF: sub_40164F+2A8j
		mov	[esp+1E0h+var_1E0], 0FFFFFFF5h
		call	sub_401630
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401939:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 12
		call	sub_401414
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407E04
		jmp	loc_402321
; ---------------------------------------------------------------------------

loc_40194D:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFD0h	; jumptable 004016B3 case 16
		call	sub_401414
		mov	ebx, eax
		mov	eax, 0FFFFFFDFh
		call	sub_401414
		mov	edi, eax
		mov	eax, 13h
		call	sub_401414
		mov	[esp+1D8h+var_1D4], edi
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:MoveFileA
		test	eax, eax
		push	esi		; int
		push	esi
		jz	short loc_401996
		mov	[esp+1D8h+var_1D8], 0FFFFFFE3h
		xor	esi, esi
		call	sub_401630
		push	ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401996:				; CODE XREF: sub_40164F+331j
		cmp	[ebp+var_34], 0
		mov	esi, 1
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], ebx
		call	sub_407E04
		test	eax, eax
		push	edx		; lpBuffer
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], ebx
		xor	si, si
		mov	[esp+1D8h+var_1D4], edi
		call	sub_407F46
		push	ecx		; nBufferLength
		push	ecx
		mov	[esp+1D8h+var_1D8], 0FFFFFFE4h
		call	sub_401630
		push	ebx		; lpFileName
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4019D9:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 17
		call	sub_401414
		mov	edx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D4], 400h
		mov	[esp+1D8h+var_1D0], edx
		mov	ebx, eax
		lea	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1CC], eax
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:GetFullPathNameA
		sub	esp, 10h
		test	eax, eax
		jnz	short loc_401A1A
		mov	ecx, [ebp+var_198]
		mov	byte ptr ds:dword_42A000[ecx], 0
		jmp	short loc_401A58
; ---------------------------------------------------------------------------

loc_401A1A:				; CODE XREF: sub_40164F+3BAj
		mov	eax, [ebp+var_24]
		xor	esi, esi
		cmp	eax, ebx
		jbe	short loc_401A5D
		cmp	byte ptr [eax],	0
		jz	short loc_401A5D
		mov	[esp+1D8h+var_1D8], ebx
		call	sub_407E04
		test	eax, eax
		push	edx
		jz	short loc_401A4B
		add	eax, 2Ch
		mov	[esp+1D8h+var_1D4], eax
		mov	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407A11
		push	eax		; lpszShortPath
		push	eax		; lpszLongPath
		jmp	short loc_401A5D
; ---------------------------------------------------------------------------

loc_401A4B:				; CODE XREF: sub_40164F+3E4j
		mov	esi, [ebp+var_198]
		mov	byte ptr ds:dword_42A000[esi], 0

loc_401A58:				; CODE XREF: sub_40164F+3C9j
		mov	esi, 1

loc_401A5D:				; CODE XREF: sub_40164F+3D2j
					; sub_40164F+3D7j ...
		cmp	[ebp+var_34], 0
		jnz	loc_4037DE
		mov	edx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D0], 400h
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], edx
		call	ds:GetShortPathNameA
		sub	esp, 0Ch
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401A8A:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		or	eax, 0FFFFFFFFh	; jumptable 004016B3 case 18
		xor	esi, esi
		call	sub_401414
		lea	edx, [ebp+var_24]
		mov	[esp+1D8h+var_1C4], edx
		mov	[esp+1D8h+var_1C8], edi
		mov	[esp+1D8h+var_1CC], 400h
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D8], 0
		mov	[esp+1D8h+var_1D4], eax
		call	ds:SearchPathA
		sub	esp, 18h
		test	eax, eax
		jnz	loc_4037DE
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	si, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401ADB:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFEFh	; jumptable 004016B3 case 19
		call	sub_401414
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_407832
		xor	ecx, ecx
		test	eax, eax
		push	edi
		setz	cl
		push	edi
		mov	esi, ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401B01:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 31h	; jumptable 004016B3 case 20
		call	sub_401414
		mov	ebx, [ebp+lpString2]
		and	ebx, 7
		mov	edi, eax
		mov	[esp+1D8h+var_1D8], eax
		call	sub_40765E
		test	eax, eax
		push	esi
		jz	short loc_401B32
		mov	[esp+1D8h+var_1D4], edi
		mov	[esp+1D8h+var_1D8], offset dword_40D004
		call	sub_407A11
		jmp	short loc_401B5D
; ---------------------------------------------------------------------------

loc_401B32:				; CODE XREF: sub_40164F+4CFj
		mov	[esp+1D8h+var_1D4], offset dword_42F800
		mov	[esp+1D8h+var_1D8], offset dword_40D004
		call	sub_407A11
		push	edx
		push	edx
		mov	[esp+1D8h+var_1D8], eax
		call	sub_4075AA
		push	ecx
		mov	[esp+1D8h+var_1D4], edi
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407A44

loc_401B5D:				; CODE XREF: sub_40164F+4E1j
		push	esi		; lpFileTime2
		push	esi
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_407A4F
		cmp	ebx, 2
		push	eax
		jle	short loc_401BAC
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_407E04
		xor	edx, edx
		test	eax, eax
		push	ecx		; lpFileTime1
		jz	short loc_401B9B
		lea	edx, [ebp+var_30]
		add	eax, 14h
		mov	[esp+1E0h+var_1DC], edx
		mov	[esp+1E0h+var_1E0], eax
		call	ds:CompareFileTime
		push	edx
		push	edx
		mov	edx, eax

loc_401B9B:				; CODE XREF: sub_40164F+533j
		sub	ebx, 3
		or	ebx, 80000000h
		test	edx, ebx
		setz	bl
		movzx	ebx, bl

loc_401BAC:				; CODE XREF: sub_40164F+520j
		test	ebx, ebx
		jnz	short loc_401BC4

loc_401BB0:				; CODE XREF: sub_40164F+63Bj
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_4077A4
		mov	eax, 2
		push	esi
		jmp	short loc_401BCD
; ---------------------------------------------------------------------------

loc_401BC4:				; CODE XREF: sub_40164F+55Fj
		xor	eax, eax
		cmp	ebx, 1
		setnz	al
		inc	eax

loc_401BCD:				; CODE XREF: sub_40164F+573j
		mov	[esp+1E0h+var_1D8], eax
		mov	[esp+1E0h+var_1DC], 40000000h
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_4077D6
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jnz	loc_401CC0
		test	ebx, ebx
		jz	short loc_401C18
		mov	[esp+1E0h+var_1DC], edi
		mov	[esp+1E0h+var_1E0], 0FFFFFFE2h
		call	sub_406DB2
		xor	eax, eax
		cmp	ebx, 2
		setz	al
		mov	esi, eax
		push	ecx
		push	ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401C18:				; CODE XREF: sub_40164F+5A6j
		mov	[esp+1E0h+var_1DC], offset dword_42A000
		mov	[esp+1E0h+var_1E0], offset dword_40D804
		call	sub_407A11
		push	edx
		push	edx
		mov	[esp+1E0h+var_1DC], offset dword_40D004
		mov	[esp+1E0h+var_1E0], offset dword_42A000
		call	sub_407A11
		mov	eax, [ebp+var_28]
		push	ecx
		push	ecx
		mov	[esp+1E0h+var_1DC], eax
		mov	[esp+1E0h+var_1E0], offset byte_40D404
		call	sub_407B23
		push	esi
		push	esi
		mov	[esp+1E0h+var_1DC], offset dword_40D804
		mov	[esp+1E0h+var_1E0], offset dword_42A000
		call	sub_407A11
		push	eax
		push	eax
		mov	eax, [ebp+lpString2]
		mov	[esp+1E0h+var_1E0], offset byte_40D404
		sar	eax, 3
		mov	[esp+1E0h+var_1DC], eax
		call	sub_407536
		cmp	eax, 4
		push	edx
		push	edx
		jz	loc_401BB0
		cmp	eax, 5
		jnz	short loc_401CA0
		inc	ds:dword_426B10
		jmp	loc_4037E4
; ---------------------------------------------------------------------------

loc_401CA0:				; CODE XREF: sub_40164F+644j
		mov	[esp+1E0h+var_1DC], offset dword_40D004
		mov	[esp+1E0h+var_1E0], 0FFFFFFFAh

loc_401CAF:				; CODE XREF: sub_40164F+76j
		call	sub_406DB2

loc_401CB4:				; CODE XREF: sub_40164F+15DBj
		push	eax
		mov	esi, 7FFFFFFFh
		push	eax
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_401CC0:				; CODE XREF: sub_40164F+59Ej
		mov	[esp+1E0h+var_1DC], edi
		mov	[esp+1E0h+var_1E0], 0FFFFFFEAh
		call	sub_406DB2
		inc	ds:dword_426B3C
		push	eax
		push	eax
		mov	eax, [ebp+var_34]
		mov	[esp+1E0h+var_1D4], 0
		mov	[esp+1E0h+var_1D8], 0
		mov	[esp+1E0h+var_1DC], esi
		mov	[esp+1E0h+var_1E0], eax
		call	sub_403CF2
		dec	ds:dword_426B3C
		sub	esp, 10h
		mov	ebx, eax
		cmp	[ebp+var_30], 0FFFFFFFFh
		jnz	short loc_401D0E
		cmp	[ebp+var_2C], 0FFFFFFFFh
		jz	short loc_401D2D

loc_401D0E:				; CODE XREF: sub_40164F+6B7j
		lea	eax, [ebp+var_30]
		mov	[esp+1E0h+var_1D4], eax
		mov	[esp+1E0h+var_1D8], 0
		mov	[esp+1E0h+var_1DC], eax
		mov	[esp+1E0h+var_1E0], esi
		call	ds:SetFileTime
		sub	esp, 10h

loc_401D2D:				; CODE XREF: sub_40164F+6BDj
		mov	[esp+1E0h+var_1E0], esi
		xor	esi, esi
		call	ds:CloseHandle
		test	ebx, ebx
		push	eax
		jns	loc_4037DE
		cmp	ebx, 0FFFFFFFEh
		jnz	short loc_401D6E
		mov	[esp+1E0h+var_1DC], 0FFFFFFE9h
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_407B23
		push	eax
		push	eax
		mov	[esp+1E0h+var_1DC], edi
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_407A44
		jmp	short loc_401D82
; ---------------------------------------------------------------------------

loc_401D6E:				; CODE XREF: sub_40164F+6F5j
		mov	[esp+1E0h+var_1DC], 0FFFFFFEEh
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		call	sub_407B23

loc_401D82:				; CODE XREF: sub_40164F+71Dj
		push	eax
		push	eax
		mov	[esp+1E0h+var_1DC], 200010h
		mov	[esp+1E0h+var_1E0], offset dword_40D004
		jmp	loc_402C25
; ---------------------------------------------------------------------------

loc_401D98:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 21
		xor	esi, esi
		call	sub_401414
		mov	edx, [ebp+var_38]
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	sub_4081E7
		push	eax
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401DB7:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 31h	; jumptable 004016B3 case 22
		mov	esi, 1
		call	sub_401414
		mov	edx, [ebp+lpString2]
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407536
		test	eax, eax
		push	edi
		push	edi
		jz	loc_4037DE
		cmp	eax, [ebp+var_34]
		jz	loc_40200A
		xor	esi, esi
		cmp	eax, [ebp+var_2C]
		jnz	loc_4037DE
		mov	esi, [ebp+var_28]
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_401DFB:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFF0h	; jumptable 004016B3 case 23
		call	sub_401414
		mov	edx, [ebp+var_38]
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	sub_4081E7
		push	esi		; lpString2
		push	esi
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401E1D:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 1		; jumptable 004016B3 case 24
		xor	esi, esi
		call	sub_401414
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407A39
		push	ecx
		mov	[esp+1DCh+var_1D8], eax
		mov	[esp+1DCh+var_1DC], edi
		call	sub_40794D
		push	ebx
		push	ebx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401E45:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 2		; jumptable 004016B3 case 25
		call	sub_401463
		mov	[ebp+hFindFile], eax
		mov	eax, 3
		call	sub_401463
		mov	edx, eax
		mov	eax, 1
		mov	[ebp+var_19C], edx
		call	sub_401414
		mov	edx, [ebp+var_19C]
		cmp	[ebp+hFindFile], 0
		mov	byte ptr ds:dword_42A000[ebx], 0
		setnz	byte ptr [ebp+var_194]
		mov	ecx, eax
		jnz	short loc_401E9C
		xor	esi, esi
		cmp	[ebp+var_34], 0
		jnz	loc_4037DE

loc_401E9C:				; CODE XREF: sub_40164F+83Fj
		mov	[ebp+var_19C], edx
		mov	[esp+1D8h+var_1D8], ecx
		mov	[ebp+var_1A0], ecx
		call	sub_407A39
		mov	ecx, [ebp+var_1A0]
		push	edx
		mov	edx, [ebp+var_19C]
		test	edx, edx
		jns	short loc_401ECB
		xor	esi, esi
		add	edx, eax
		js	loc_4037DE

loc_401ECB:				; CODE XREF: sub_40164F+870j
		cmp	edx, eax
		cmovg	edx, eax
		xor	esi, esi
		add	ecx, edx
		mov	[esp+1DCh+var_1D8], ecx
		mov	[esp+1DCh+var_1DC], edi
		call	sub_407A11
		cmp	byte ptr [ebp+var_194],	0
		push	eax		; lpString1
		push	eax
		jz	loc_4037DE
		cmp	[ebp+hFindFile], 0
		jns	short loc_401F09
		mov	[esp+1DCh+var_1DC], edi
		call	sub_407A39
		add	[ebp+hFindFile], eax
		push	esi
		js	short loc_401F1D

loc_401F09:				; CODE XREF: sub_40164F+8A7j
		xor	esi, esi
		cmp	[ebp+hFindFile], 3FFh
		jg	loc_4037DE
		jmp	short loc_401F27
; ---------------------------------------------------------------------------

loc_401F1D:				; CODE XREF: sub_40164F+8B8j
		mov	[ebp+hFindFile], 0

loc_401F27:				; CODE XREF: sub_40164F+8CCj
		mov	eax, [ebp+hFindFile]
		xor	esi, esi
		mov	byte ptr ds:dword_42A000[eax+ebx], 0
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401F3C:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 20h	; jumptable 004016B3 case 26
		call	sub_401414
		mov	ebx, eax
		mov	eax, 31h
		call	sub_401414
		cmp	[ebp+var_2C], 0
		mov	[esp+1D8h+var_1D8], ebx
		mov	[esp+1D8h+var_1D4], eax
		jnz	short loc_401F67
		call	ds:lstrcmpiA
		jmp	short loc_401F6D
; ---------------------------------------------------------------------------

loc_401F67:				; CODE XREF: sub_40164F+90Ej
		call	ds:lstrcmpA

loc_401F6D:				; CODE XREF: sub_40164F+916j
		test	eax, eax
		push	ecx		; lpDst
		push	ecx		; lpSrc
		jnz	loc_40200A
		jmp	loc_40232E
; ---------------------------------------------------------------------------

loc_401F7C:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 1		; jumptable 004016B3 case 27
		call	sub_401414
		mov	[esp+1D8h+var_1D0], 400h
		mov	[esp+1D8h+var_1D4], edi
		mov	[esp+1D8h+var_1D8], eax
		mov	[ebp+var_19C], eax
		call	ds:ExpandEnvironmentStringsA
		mov	edx, [ebp+var_19C]
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_401FC9
		xor	esi, esi
		cmp	[ebp+var_34], 0
		jz	short loc_401FD5
		mov	[esp+1D8h+var_1D8], edx
		mov	[esp+1D8h+var_1D4], edi
		call	ds:lstrcmpA
		test	eax, eax
		push	edx
		push	edx
		jnz	short loc_401FD5

loc_401FC9:				; CODE XREF: sub_40164F+95Dj
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	esi, 1

loc_401FD5:				; CODE XREF: sub_40164F+965j
					; sub_40164F+978j
		mov	byte ptr [edi+3FFh], 0
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_401FE1:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 28
		call	sub_401463
		mov	ebx, eax
		mov	eax, 1
		call	sub_401463
		cmp	[ebp+var_28], 0
		jnz	short loc_402006
		cmp	ebx, eax
		jl	short loc_40200A
		jle	loc_40232E
		jmp	short loc_402018
; ---------------------------------------------------------------------------

loc_402006:				; CODE XREF: sub_40164F+9A9j
		cmp	ebx, eax
		jnb	short loc_402012

loc_40200A:				; CODE XREF: sub_40164F+793j
					; sub_40164F+922j ...
		mov	esi, [ebp+var_30]
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_402012:				; CODE XREF: sub_40164F+9B9j
		jbe	loc_40232E

loc_402018:				; CODE XREF: sub_40164F+9B5j
		mov	esi, [ebp+var_2C]
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_402020:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 1		; jumptable 004016B3 case 29
		xor	esi, esi
		call	sub_401463
		mov	ebx, eax
		mov	eax, 2
		call	sub_401463
		cmp	[ebp+var_30], 0Ch ; switch 13 cases
		mov	ecx, eax
		ja	short loc_4020B1 ; jumptable 00402043 default case
		mov	eax, [ebp+var_30]
		jmp	ds:off_40B10C[eax*4] ; switch jump

loc_40204A:				; DATA XREF: .rdata:off_40B10Co
		add	ebx, ecx	; jumptable 00402043 case 0
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_40204E:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		sub	ebx, ecx	; jumptable 00402043 case 1
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402052:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		imul	ebx, ecx	; jumptable 00402043 case 2
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402057:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		test	ecx, ecx	; jumptable 00402043 case 3
		jz	short loc_4020AA
		mov	eax, ebx
		cdq
		idiv	ecx
		mov	ebx, eax
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402064:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		or	ebx, ecx	; jumptable 00402043 case 4
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402068:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		and	ebx, ecx	; jumptable 00402043 case 5
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_40206C:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		xor	ebx, ecx	; jumptable 00402043 case 6
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402070:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		test	ebx, ebx	; jumptable 00402043 case 7
		setz	bl
		jmp	short loc_40207C
; ---------------------------------------------------------------------------

loc_402077:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		or	ecx, ebx	; jumptable 00402043 case 8
		setnz	bl

loc_40207C:				; CODE XREF: sub_40164F+A26j
		movzx	ebx, bl
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402081:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		xor	eax, eax	; jumptable 00402043 case 9
		test	ebx, ebx
		setnz	al
		xor	ebx, ebx
		test	ecx, ecx
		setnz	bl
		and	ebx, eax
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_402093:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		test	ecx, ecx	; jumptable 00402043 case 10
		jz	short loc_4020AA
		mov	eax, ebx
		cdq
		idiv	ecx
		mov	ebx, edx
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_4020A0:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		shl	ebx, cl		; jumptable 00402043 case 11
		jmp	short loc_4020A6
; ---------------------------------------------------------------------------

loc_4020A4:				; CODE XREF: sub_40164F+9F4j
					; DATA XREF: .rdata:off_40B10Co
		sar	ebx, cl		; jumptable 00402043 case 12

loc_4020A6:				; CODE XREF: sub_40164F+9FDj
					; sub_40164F+A01j ...
		xor	esi, esi
		jmp	short loc_4020B1 ; jumptable 00402043 default case
; ---------------------------------------------------------------------------

loc_4020AA:				; CODE XREF: sub_40164F+A0Aj
					; sub_40164F+A46j
		xor	ebx, ebx
		mov	esi, 1

loc_4020B1:				; CODE XREF: sub_40164F+9EFj
					; sub_40164F+A59j
		mov	[esp+1D8h+var_1D4], ebx	; jumptable 00402043 default case
		mov	[esp+1D8h+var_1D8], edi
		call	sub_40794D
		push	eax		; LPCSTR
		push	eax		; LPSTR
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4020C4:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 1		; jumptable 004016B3 case 30
		xor	esi, esi
		call	sub_401414
		mov	ebx, eax
		mov	eax, 2
		call	sub_401463
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D0], eax
		call	ds:wsprintfA
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4020F2:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, [ebp+var_34] ; jumptable 004016B3 case 31
		mov	ebx, ds:dword_40E404
		test	edx, edx
		jz	short loc_402167
		mov	eax, edx
		jmp	short loc_402109
; ---------------------------------------------------------------------------

loc_402103:				; CODE XREF: sub_40164F+ABDj
		test	eax, eax
		mov	ebx, [ebx]
		jz	short loc_402113

loc_402109:				; CODE XREF: sub_40164F+AB2j
		dec	eax
		test	ebx, ebx
		jnz	short loc_402103
		jmp	loc_402C04
; ---------------------------------------------------------------------------

loc_402113:				; CODE XREF: sub_40164F+AB8j
		test	ebx, ebx
		jz	loc_402C04
		add	ebx, 4
		xor	esi, esi
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D8], offset dword_40D004
		call	sub_407A11
		push	eax
		push	eax
		mov	eax, ds:dword_40E404
		mov	[esp+1D8h+var_1D8], ebx
		add	eax, 4
		mov	[esp+1D8h+var_1D4], eax
		call	sub_407A11
		push	eax
		push	eax
		mov	eax, ds:dword_40E404
		mov	[esp+1D8h+var_1D4], offset dword_40D004
		add	eax, 4
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407A11
		push	eax
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402167:				; CODE XREF: sub_40164F+AAEj
		test	eax, eax
		jz	short loc_4021A2
		test	ebx, ebx
		mov	esi, 1
		jz	loc_4037DE
		lea	eax, [ebx+4]
		xor	si, si
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_407A11
		push	edi		; dwBytes
		push	edi		; hMem
		mov	eax, [ebx]
		mov	[esp+1D8h+var_1D8], ebx
		mov	ds:dword_40E404, eax
		call	ds:GlobalFree
		push	eax		; uFlags
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4021A2:				; CODE XREF: sub_40164F+B1Aj
		mov	[esp+1D8h+var_1D4], 404h
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], 40h
		call	ds:GlobalAlloc
		mov	ebx, eax
		mov	eax, [ebp+lpString2]
		push	edx
		push	edx
		mov	[esp+1D8h+var_1D4], eax
		lea	eax, [ebx+4]
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407B23
		mov	eax, ds:dword_40E404
		push	ecx		; Msg
		push	ecx		; hWnd
		mov	[ebx], eax
		mov	ds:dword_40E404, ebx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4021E3:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 3		; jumptable 004016B3 cases 32,33
		call	sub_401463
		mov	ebx, eax
		mov	eax, 4
		call	sub_401463
		test	byte ptr [ebp+var_28], 1
		mov	esi, eax
		jz	short loc_40220D
		mov	eax, 33h
		call	sub_401414
		mov	ebx, eax

loc_40220D:				; CODE XREF: sub_40164F+BB0j
		test	byte ptr [ebp+var_28], 2
		jz	short loc_40221F
		mov	eax, 44h
		call	sub_401414
		mov	esi, eax

loc_40221F:				; CODE XREF: sub_40164F+BC2j
		cmp	[ebp+var_40], 21h
		mov	eax, 1
		jnz	short loc_4022A9
		call	sub_401463
		mov	edx, eax
		mov	eax, 2
		mov	[ebp+var_19C], edx
		call	sub_401463
		mov	ecx, [ebp+var_28]
		mov	edx, [ebp+var_19C]
		sar	ecx, 2
		mov	[ebp+hFindFile], ecx
		jz	short loc_402292
		lea	ecx, [ebp+var_24]
		mov	[esp+1D8h+var_1C0], ecx
		mov	ecx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1CC], esi
		mov	[esp+1D8h+var_1C8], 0
		mov	[esp+1D8h+var_1D0], ebx
		mov	[esp+1D8h+var_1C4], ecx
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	ds:SendMessageTimeoutA
		sub	esp, 1Ch
		test	eax, eax
		setz	al
		movzx	eax, al
		mov	esi, eax
		jmp	short loc_4022F1
; ---------------------------------------------------------------------------

loc_402292:				; CODE XREF: sub_40164F+C04j
		mov	[esp+1D8h+var_1CC], esi
		mov	[esp+1D8h+var_1D0], ebx
		mov	[esp+1D8h+var_1D8], edx
		mov	[esp+1D8h+var_1D4], eax
		call	ds:SendMessageA
		jmp	short loc_4022E9
; ---------------------------------------------------------------------------

loc_4022A9:				; CODE XREF: sub_40164F+BD9j
		call	sub_401414
		mov	edx, eax
		mov	eax, 12h
		mov	[ebp+var_19C], edx
		call	sub_401414
		mov	edx, [ebp+var_19C]
		xor	ecx, ecx
		cmp	byte ptr [eax],	0
		cmovz	eax, ecx
		cmp	byte ptr [edx],	0
		mov	[esp+1D8h+var_1CC], eax
		mov	[esp+1D8h+var_1D4], esi
		cmovz	edx, ecx
		mov	[esp+1D8h+var_1D0], edx
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:FindWindowExA

loc_4022E9:				; CODE XREF: sub_40164F+C58j
		sub	esp, 10h
		xor	esi, esi
		mov	[ebp+var_24], eax

loc_4022F1:				; CODE XREF: sub_40164F+C41j
		cmp	[ebp+lpString2], 0
		js	loc_4037DE
		mov	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	eax		; nIDDlgItem
		push	eax		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402311:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 34
		call	sub_401463
		mov	[esp+1D8h+var_1D8], eax
		call	ds:IsWindow

loc_402321:				; CODE XREF: sub_40164F+2F9j
		test	eax, eax
		push	edi		; hDlg
		jz	short loc_40232E
		mov	esi, [ebp+var_38]
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_40232E:				; CODE XREF: sub_40164F+928j
					; sub_40164F+9AFj ...
		mov	esi, [ebp+var_34]
		jmp	loc_4037E6	; jumptable 004016B3 case 2
; ---------------------------------------------------------------------------

loc_402336:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 2		; jumptable 004016B3 case 35
		call	sub_401463
		mov	ebx, eax
		mov	eax, 1
		call	sub_401463
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D8], eax
		call	ds:GetDlgItem
		push	ebx
		push	ebx
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edi
		call	sub_40794D
		push	esi		; nIndex
		push	esi		; hWnd
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402370:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	ebx, ds:dword_426B74 ; jumptable 004016B3 case 36
		xor	esi, esi
		add	ebx, eax
		xor	eax, eax
		call	sub_401463
		mov	[esp+1D8h+var_1D0], ebx
		mov	[esp+1D8h+var_1D4], 0FFFFFFEBh
		mov	[esp+1D8h+var_1D8], eax
		call	ds:SetWindowLongA
		sub	esp, 0Ch
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40239E:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, [ebp+var_194] ; jumptable 004016B3	case 37
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	ds:GetDlgItem
		push	edx		; lpRect
		mov	ebx, eax
		push	edx		; hWnd
		lea	eax, [ebp+var_180]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:GetClientRect
		mov	esi, [ebp+var_34]
		xor	eax, eax
		mov	edi, [ebp+var_174]
		imul	edi, esi
		push	ecx		; name
		push	ecx		; hInst
		imul	esi, [ebp+var_178]
		call	sub_401414
		mov	[esp+1D8h+var_1C4], 10h
		mov	[esp+1D8h+var_1C8], edi
		mov	[esp+1D8h+var_1CC], esi
		xor	esi, esi
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D8], 0
		mov	[esp+1D8h+var_1D4], eax
		call	ds:LoadImageA
		sub	esp, 18h
		mov	[esp+1D8h+var_1CC], eax
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D4], 172h
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:SendMessageA
		sub	esp, 10h
		test	eax, eax
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], eax
		call	ds:DeleteObject
		push	eax		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402449:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, [ebp+var_194] ; jumptable 004016B3	case 38
		mov	[esp+1D8h+var_1D8], edx
		call	ds:GetDC
		push	edx		; hdc
		mov	[esp+1D8h+var_1D4], 5Ah
		mov	[esp+1D8h+var_1D8], eax
		call	ds:GetDeviceCaps
		push	ecx		; nNumerator
		mov	ebx, eax
		push	ecx		; nNumber
		mov	eax, 2
		call	sub_401463
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D0], 48h
		mov	[esp+1D8h+var_1D8], eax
		call	ds:MulDiv
		neg	eax
		sub	esp, 0Ch
		mov	ds:dword_40E408, eax
		mov	eax, 3
		call	sub_401463
		mov	ds:byte_40E41F,	1
		mov	[esp+1D8h+var_1D8], offset dword_40E424
		mov	ds:dword_40E418, eax
		mov	al, byte ptr [ebp+var_2C]
		mov	dl, al
		and	edx, 1
		mov	ds:byte_40E41C,	dl
		mov	dl, al
		and	eax, 4
		mov	ds:byte_40E41E,	al
		mov	eax, [ebp+var_38]
		and	edx, 2
		mov	ds:byte_40E41D,	dl
		mov	[esp+1D8h+var_1D4], eax
		call	sub_407B23
		push	ebx
		push	ebx		; lplf
		mov	[esp+1D8h+var_1D8], offset dword_40E408
		call	ds:CreateFontIndirectA
		push	esi
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	edi		; nCmdShow
		push	edi		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402506:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 39
		call	sub_401463
		mov	ebx, eax
		mov	eax, 1
		call	sub_401463
		cmp	[ebp+var_30], 0
		mov	[esp+1D8h+var_1D8], ebx
		mov	[esp+1D8h+var_1D4], eax
		jnz	short loc_402535
		call	ds:ShowWindow
		xor	esi, esi
		push	eax		; bEnable
		push	eax		; hWnd
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402535:				; CODE XREF: sub_40164F+ED5j
		call	ds:EnableWindow
		xor	esi, esi
		push	eax		; lpOperation
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402544:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 40
		call	sub_401414
		mov	ebx, eax
		mov	eax, 31h
		call	sub_401414
		mov	edi, eax
		mov	eax, 22h
		call	sub_401414
		mov	esi, eax
		mov	eax, 15h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], 0FFFFFFECh
		call	sub_401630
		mov	edx, [ebp+var_194]
		push	eax		; hwnd
		xor	eax, eax
		cmp	byte ptr [esi],	0
		cmovz	esi, eax
		cmp	byte ptr [ebx],	0
		mov	[esp+1D8h+var_1CC], esi
		mov	[esp+1D8h+var_1C8], offset dword_42F800
		cmovz	ebx, eax
		mov	eax, [ebp+var_30]
		mov	[esp+1D8h+var_1D0], edi
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D8], edx
		mov	[esp+1D8h+var_1C4], eax
		call	ds:ShellExecuteA
		xor	ecx, ecx
		sub	esp, 18h
		cmp	eax, 21h
		setl	cl
		mov	esi, ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4025C6:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 41
		call	sub_401414
		mov	[esp+1D8h+var_1D8], 0FFFFFFEBh
		mov	ebx, eax
		mov	[esp+1D8h+var_1D4], eax
		call	sub_406DB2
		push	esi		; dwMilliseconds
		push	esi
		mov	esi, 1
		mov	[esp+1D8h+var_1D8], ebx
		call	sub_407478
		test	eax, eax
		mov	ebx, eax
		push	edi
		jz	loc_4037DE
		cmp	[ebp+var_34], 0
		mov	esi, ds:WaitForSingleObject
		jnz	short loc_402614
		jmp	short loc_402659
; ---------------------------------------------------------------------------

loc_402607:				; CODE XREF: sub_40164F+FD9j
		mov	[esp+1D8h+var_1D8], 0Fh
		call	sub_408494
		push	ecx		; hHandle

loc_402614:				; CODE XREF: sub_40164F+FB4j
		mov	[esp+1D8h+var_1D4], 64h
		mov	[esp+1D8h+var_1D8], ebx
		call	esi ; WaitForSingleObject
		cmp	eax, 102h
		push	edx		; lpExitCode
		push	edx		; hProcess
		jz	short loc_402607
		lea	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:GetExitCodeProcess
		cmp	[ebp+var_38], 0
		push	edi
		push	edi
		js	short loc_40265D
		mov	esi, [ebp+hFindFile]
		mov	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1D8], esi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	esi
		push	esi		; hObject

loc_402659:				; CODE XREF: sub_40164F+FB6j
		xor	esi, esi
		jmp	short loc_402668
; ---------------------------------------------------------------------------

loc_40265D:				; CODE XREF: sub_40164F+FF1j
		xor	eax, eax
		cmp	[ebp+var_24], 0
		setnz	al
		mov	esi, eax

loc_402668:				; CODE XREF: sub_40164F+100Cj
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:CloseHandle
		push	ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402677:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 2		; jumptable 004016B3 case 42
		call	sub_401414
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407E04
		test	eax, eax
		mov	esi, eax
		push	edx
		jz	short loc_4026BF
		mov	eax, [eax+14h]
		mov	edx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	sub_40794D
		push	ebx
		push	ebx
		mov	eax, [esi+18h]
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	esi		; lpdwHandle
		push	esi		; lptstrFilename
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4026BF:				; CODE XREF: sub_40164F+103Fj
		mov	ecx, [ebp+var_198]
		mov	esi, 1
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	byte ptr ds:dword_42A000[ecx], 0
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4026DD:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFEEh	; jumptable 004016B3 case 43
		mov	esi, 1
		call	sub_401414
		mov	[ebp+var_194], eax
		lea	eax, [ebp+var_20]
		mov	[esp+1D8h+var_1D4], eax
		mov	eax, [ebp+var_194]
		mov	[esp+1D8h+var_1D8], eax
		call	GetFileVersionInfoSizeA
		mov	byte ptr ds:dword_42A000[ebx], 0
		push	ecx		; dwBytes
		test	eax, eax
		push	ecx		; uFlags
		mov	ecx, [ebp+var_198]
		mov	byte ptr ds:dword_42A000[ecx], 0
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], 40h
		mov	[ebp+var_19C], eax
		call	ds:GlobalAlloc
		test	eax, eax
		mov	ebx, eax
		push	edx		; dwHandle
		push	edx		; lptstrFilename
		mov	edx, [ebp+var_19C]
		jz	loc_4037DE
		mov	[esp+1D8h+var_1CC], eax
		mov	eax, [ebp+var_194]
		mov	[esp+1D8h+var_1D0], edx
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], eax
		call	GetFileVersionInfoA
		sub	esp, 10h
		test	eax, eax
		jz	short loc_4027C9
		lea	eax, [ebp+var_1C]
		mov	[esp+1D8h+var_1CC], eax
		lea	eax, [ebp+var_24]
		mov	[esp+1D8h+var_1D0], eax
		mov	[esp+1D8h+var_1D4], offset dword_40B000
		mov	[esp+1D8h+var_1D8], ebx
		call	VerQueryValueA
		sub	esp, 10h
		test	eax, eax
		jz	short loc_4027C9
		mov	eax, [ebp+var_24]
		xor	si, si
		mov	eax, [eax+8]
		mov	[esp+1D8h+var_1D8], edi
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		mov	eax, [ebp+var_24]
		mov	edx, [ebp+hFindFile]
		push	edi
		push	edi
		mov	eax, [eax+0Ch]
		mov	[esp+1D8h+var_1D8], edx
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	eax		; hFile
		push	eax		; hMem

loc_4027C9:				; CODE XREF: sub_40164F+1122j
					; sub_40164F+1147j
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:GlobalFree
		push	ecx		; lpModuleName
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4027D8:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		cmp	ds:dword_426B40, 0 ; jumptable 004016B3	case 44
		js	loc_4028F2
		mov	eax, 0FFFFFFF0h
		call	sub_401414
		mov	edi, eax
		mov	eax, 1
		call	sub_401414
		cmp	[ebp+var_2C], 0
		mov	esi, eax
		jz	short loc_402813
		mov	[esp+1D8h+var_1D8], edi
		call	ds:GetModuleHandleA
		test	eax, eax
		mov	ebx, eax
		push	edx		; lpLibFileName
		jnz	short loc_402839

loc_402813:				; CODE XREF: sub_40164F+11B2j
		mov	[esp+1D8h+var_1D0], 8
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], edi
		call	ds:LoadLibraryExA
		sub	esp, 0Ch
		test	eax, eax
		mov	ebx, eax
		jz	loc_4028DB

loc_402839:				; CODE XREF: sub_40164F+11C2j
		mov	[esp+1D8h+var_1D4], esi
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:GetProcAddress
		test	eax, eax
		push	edi
		push	edi
		mov	edi, eax
		jz	short loc_40289A
		mov	eax, [ebp+var_34]
		test	eax, eax
		jz	short loc_40286B
		mov	[esp+1D8h+var_1D8], eax
		call	sub_401630
		push	esi
		call	edi
		xor	ecx, ecx
		test	eax, eax
		setnz	cl
		mov	esi, ecx
		jmp	short loc_4028B1
; ---------------------------------------------------------------------------

loc_40286B:				; CODE XREF: sub_40164F+1204j
		mov	edx, [ebp+var_194]
		xor	esi, esi
		mov	[esp+1D8h+var_1C8], offset off_40A000
		mov	[esp+1D8h+var_1CC], offset dword_40E404
		mov	[esp+1D8h+var_1D0], offset dword_42A000
		mov	[esp+1D8h+var_1D4], 400h
		mov	[esp+1D8h+var_1D8], edx
		call	edi
		jmp	short loc_4028B1
; ---------------------------------------------------------------------------

loc_40289A:				; CODE XREF: sub_40164F+11FDj
		mov	[esp+1D8h+var_1D4], esi
		mov	esi, 1
		mov	[esp+1D8h+var_1D8], 0FFFFFFF7h
		call	sub_406DB2
		push	ecx		; pUnkOuter
		push	ecx

loc_4028B1:				; CODE XREF: sub_40164F+121Aj
					; sub_40164F+1249j
		cmp	[ebp+var_30], 0
		jnz	loc_4037DE
		mov	[esp+1D8h+var_1D8], ebx
		call	sub_404923
		test	eax, eax
		push	edx		; hLibModule
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:FreeLibrary
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4028DB:				; CODE XREF: sub_40164F+11E4j
		mov	[esp+1D8h+var_1D8], 0FFFFFFF6h
		mov	esi, 1
		call	sub_401630
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4028F2:				; CODE XREF: sub_40164F+1190j
		mov	[esp+1D8h+var_1D8], 0FFFFFFE7h
		call	sub_401630
		push	esi
		mov	esi, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402909:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFF0h	; jumptable 004016B3 case 45
		call	sub_401414
		mov	[ebp+hFindFile], eax
		mov	eax, 0FFFFFFDFh
		call	sub_401414
		mov	edi, eax
		mov	eax, 2
		call	sub_401414
		mov	[ebp+var_194], eax
		mov	eax, 0FFFFFFCDh
		call	sub_401414
		mov	esi, eax
		mov	eax, 45h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], edi
		mov	[ebp+var_198], eax
		call	sub_40765E
		test	eax, eax
		push	ebx		; rclsid
		jnz	short loc_402965
		mov	al, 21h
		call	sub_401414

loc_402965:				; CODE XREF: sub_40164F+130Dj
		lea	eax, [ebp+var_1C]
		mov	[esp+1D8h+var_1C8], eax
		mov	[esp+1D8h+var_1CC], offset dword_40C9CC
		mov	[esp+1D8h+var_1D0], 1
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], offset dword_40B9DC
		call	ds:CoCreateInstance
		sub	esp, 14h
		test	eax, eax
		js	loc_402AEA
		mov	eax, [ebp+var_1C]
		lea	ecx, [ebp+var_20]
		mov	edx, [eax]
		mov	[esp+1D8h+var_1D0], ecx
		mov	[esp+1D8h+var_1D4], offset dword_40C5FC
		mov	[esp+1D8h+var_1D8], eax
		call	dword ptr [edx]
		sub	esp, 0Ch
		test	eax, eax
		mov	ebx, eax
		js	loc_402ADA
		mov	eax, [ebp+var_1C]
		mov	edx, [eax]
		mov	[esp+1E4h+var_1E0], edi
		mov	[esp+1E4h+var_1E4], eax
		call	dword ptr [edx+50h]
		mov	ebx, eax
		mov	eax, [ebp+var_1C]
		push	edx
		push	edx
		mov	edx, [eax]
		mov	[esp+1ECh+var_1E8], offset dword_42F800
		mov	[esp+1ECh+var_1EC], eax
		call	dword ptr [edx+24h]
		mov	edx, [ebp+var_2C]
		movzx	edx, dh
		test	edx, edx
		push	ecx
		push	ecx
		jz	short loc_402A05
		mov	eax, [ebp+var_1C]
		mov	ecx, [eax]
		mov	[esp+1F4h+var_1F0], edx
		mov	[esp+1F4h+var_1F4], eax
		call	dword ptr [ecx+3Ch]
		push	eax
		push	eax

loc_402A05:				; CODE XREF: sub_40164F+13A3j
		mov	eax, [ebp+var_1C]
		movzx	ecx, word ptr [ebp+var_2C+2]
		mov	edx, [eax]
		mov	[esp+1FCh+var_1F8], ecx
		mov	[esp+1FCh+var_1FC], eax
		call	dword ptr [edx+34h]
		push	eax
		push	eax
		cmp	byte ptr [esi],	0
		jz	short loc_402A39
		mov	eax, [ebp+var_1C]
		movzx	ecx, byte ptr [ebp+var_2C]
		mov	edx, [eax]
		mov	[esp+204h+var_1FC], ecx
		mov	[esp+204h+var_200], esi
		mov	[esp+204h+var_204], eax
		call	dword ptr [edx+44h]
		sub	esp, 0Ch

loc_402A39:				; CODE XREF: sub_40164F+13CEj
		mov	eax, [ebp+var_1C]
		mov	ecx, [ebp+var_194]
		mov	edx, [eax]
		mov	[esp+210h+var_20C], ecx
		mov	[esp+210h+var_210], eax
		call	dword ptr [edx+2Ch]
		mov	esi, [ebp+var_198]
		push	eax		; cbMultiByte
		push	eax		; lpMultiByteStr
		mov	eax, [ebp+var_1C]
		mov	edx, [eax]
		mov	[esp+218h+var_214], esi
		mov	[esp+218h+var_218], eax
		call	dword ptr [edx+1Ch]
		test	ebx, ebx
		push	eax		; dwFlags
		push	eax		; CodePage
		js	short loc_402ACE
		mov	eax, [ebp+hFindFile]
		mov	ebx, 80004005h
		mov	[esp+220h+var_20C], 400h
		mov	[esp+220h+var_210], offset dword_40E444
		mov	[esp+220h+var_214], 0FFFFFFFFh
		mov	[esp+220h+var_218], eax
		mov	[esp+220h+var_21C], 0
		mov	[esp+220h+var_220], 0
		call	ds:MultiByteToWideChar
		sub	esp, 18h
		test	eax, eax
		jz	short loc_402ACE
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		mov	[esp+220h+var_218], 1
		mov	[esp+220h+var_21C], offset dword_40E444
		mov	[esp+220h+var_220], eax
		call	dword ptr [edx+18h]
		sub	esp, 0Ch
		mov	ebx, eax

loc_402ACE:				; CODE XREF: sub_40164F+141Aj
					; sub_40164F+145Dj
		mov	eax, [ebp+var_20]
		mov	edx, [eax]
		mov	[esp+22Ch+var_22C], eax
		call	dword ptr [edx+8]
		push	edi

loc_402ADA:				; CODE XREF: sub_40164F+136Dj
		mov	eax, [ebp+var_1C]
		mov	edx, [eax]
		mov	[esp+230h+var_230], eax
		call	dword ptr [edx+8]
		test	ebx, ebx
		push	esi
		jns	short loc_402B01

loc_402AEA:				; CODE XREF: sub_40164F+1347j
		mov	[esp+234h+var_234], 0FFFFFFF0h
		mov	esi, 1
		call	sub_401630
		push	ebx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402B01:				; CODE XREF: sub_40164F+1499j
		mov	[esp+234h+var_234], 0FFFFFFF4h
		xor	esi, esi
		call	sub_401630
		push	ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402B15:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 46
		call	sub_401414
		mov	ebx, eax
		mov	eax, 11h
		call	sub_401414
		mov	esi, eax
		mov	eax, 23h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], ebx
		mov	edi, eax
		call	sub_407E04
		test	eax, eax
		push	edx
		jnz	short loc_402B63
		mov	[esp+1D8h+var_1D4], 0
		mov	esi, 1
		mov	[esp+1D8h+var_1D8], 0FFFFFFF9h
		call	sub_406DB2
		push	edi
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402B63:				; CODE XREF: sub_40164F+14F2j
		mov	edx, [ebp+var_194]
		mov	[esp+1D8h+var_1D8], ebx
		mov	[ebp+var_17C], 2
		mov	[ebp+var_180], edx
		call	sub_407A39
		push	edx
		mov	byte ptr [ebx+eax+1], 0
		mov	[esp+1DCh+var_1DC], esi
		call	sub_407A39
		push	ecx
		mov	byte ptr [esi+eax+1], 0
		mov	eax, [ebp+var_34]
		mov	[ebp+var_174], esi
		mov	[ebp+var_178], ebx
		mov	[ebp+var_166], edi
		mov	[ebp+var_170], ax
		mov	[esp+1E0h+var_1DC], edi
		mov	[esp+1E0h+var_1E0], 0
		call	sub_406DB2
		lea	eax, [ebp+var_180]
		push	ebx
		push	ebx		; lpFileOp
		mov	[esp+1E0h+var_1E0], eax
		call	ds:SHFileOperationA
		push	esi
		xor	esi, esi
		test	eax, eax
		jz	loc_4037DE
		mov	[esp+1E0h+var_1DC], 0
		mov	si, 1
		mov	[esp+1E0h+var_1E0], 0FFFFFFF9h
		call	sub_406DB2
		push	edi
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402BFC:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		cmp	esi, 0BADF00Dh	; jumptable 004016B3 case 47
		jz	short loc_402C2F

loc_402C04:				; CODE XREF: sub_40164F+ABFj
					; sub_40164F+AC6j
		mov	[esp+1D8h+var_1D4], 0FFFFFFE8h
		mov	[esp+1D8h+var_1D8], 0
		call	sub_407B23
		push	esi
		push	esi
		mov	[esp+1D8h+var_1D4], 200010h
		mov	[esp+1D8h+var_1D8], eax

loc_402C25:				; CODE XREF: sub_40164F+744j
		call	sub_407536
		jmp	loc_401CB4
; ---------------------------------------------------------------------------

loc_402C2F:				; CODE XREF: sub_40164F+15B3j
		inc	ds:dword_426B1C
		xor	esi, esi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402C3C:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	ebx, ebx	; jumptable 004016B3 case 48
		test	esi, esi
		jz	short loc_402C4B
		xor	eax, eax
		call	sub_401414
		mov	ebx, eax

loc_402C4B:				; CODE XREF: sub_40164F+15F1j
		xor	esi, esi
		cmp	[ebp+var_38], 0
		jz	short loc_402C5F
		mov	eax, 11h
		call	sub_401414
		mov	esi, eax

loc_402C5F:				; CODE XREF: sub_40164F+1602j
		xor	edi, edi
		cmp	[ebp+var_2C], 0
		jz	short loc_402C73
		mov	eax, 22h
		call	sub_401414
		mov	edi, eax

loc_402C73:				; CODE XREF: sub_40164F+1616j
		mov	eax, 0FFFFFFCDh
		call	sub_401414
		mov	[esp+1D8h+var_1D4], esi
		mov	[esp+1D8h+var_1D0], edi
		mov	[esp+1D8h+var_1D8], ebx
		mov	[esp+1D8h+var_1CC], eax
		call	ds:WritePrivateProfileStringA
		xor	ecx, ecx
		sub	esp, 10h
		test	eax, eax
		setz	cl
		mov	esi, ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402CA3:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 1		; jumptable 004016B3 case 49
		mov	[ebp+var_20], 7E4E21h
		call	sub_401414
		mov	esi, eax
		mov	eax, 12h
		call	sub_401414
		mov	edx, eax
		mov	eax, 0FFFFFFDDh
		mov	[ebp+var_19C], edx
		call	sub_401414
		mov	edx, [ebp+var_19C]
		mov	[esp+1D8h+var_1D8], esi
		xor	esi, esi
		mov	[esp+1D8h+var_1C8], 3FFh
		mov	[esp+1D8h+var_1CC], edi
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1C4], eax
		lea	eax, [ebp+var_20]
		mov	[esp+1D8h+var_1D0], eax
		call	ds:GetPrivateProfileStringA
		mov	eax, [ebp+var_20]
		sub	esp, 18h
		cmp	ds:dword_42A000[ebx], eax
		jnz	loc_4037DE
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	si, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402D20:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		cmp	[ebp+var_2C], 0	; jumptable 004016B3 case 50
		jnz	short loc_402D5D
		mov	eax, 2
		call	sub_40148F
		test	eax, eax
		mov	ebx, eax
		jz	short loc_402D91
		mov	eax, 33h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], ebx
		mov	[esp+1D8h+var_1D4], eax
		call	ds:RegDeleteValueA
		push	ecx		; lpSubKey
		mov	edi, eax
		push	ecx		; hKey
		mov	[esp+1D8h+var_1D8], ebx
		call	ds:RegCloseKey
		push	ebx		; hKey
		jmp	short loc_402D87
; ---------------------------------------------------------------------------

loc_402D5D:				; CODE XREF: sub_40164F+16D5j
		mov	eax, 22h
		call	sub_401414
		mov	ecx, [ebp+var_2C]
		and	ecx, 2
		mov	edx, eax
		mov	eax, [ebp+var_38]
		test	eax, eax
		jnz	short loc_402D80
		mov	eax, ds:dword_426B0C
		sub	eax, 7FFFFFFFh

loc_402D80:				; CODE XREF: sub_40164F+1725j
		call	sub_4014F3
		mov	edi, eax

loc_402D87:				; CODE XREF: sub_40164F+170Cj
		xor	esi, esi
		test	edi, edi
		jz	loc_4037DE

loc_402D91:				; CODE XREF: sub_40164F+16E5j
		mov	esi, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402D9B:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		test	esi, esi	; jumptable 004016B3 case 51
		jnz	short loc_402DAB
		mov	esi, ds:dword_426B0C
		sub	esi, 7FFFFFFFh

loc_402DAB:				; CODE XREF: sub_40164F+174Ej
		mov	edx, [ebp+var_28]
		mov	eax, 2
		mov	ebx, [ebp+var_2C]
		mov	[ebp+hFindFile], edx
		call	sub_401414
		mov	edi, eax
		mov	eax, 11h
		call	sub_401414
		lea	edx, [ebp+var_20]
		mov	[esp+1D8h+var_1BC], edx
		mov	edx, ds:dword_426B38
		mov	[esp+1D8h+var_1D8], esi
		mov	esi, 1
		mov	[esp+1D8h+var_1B8], 0
		mov	[esp+1D8h+var_1C0], 0
		or	edx, 2
		mov	[esp+1D8h+var_1C4], edx
		mov	[esp+1D8h+var_1C8], 0
		mov	[esp+1D8h+var_1CC], 0
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D4], eax
		call	ds:RegCreateKeyExA
		sub	esp, 24h
		test	eax, eax
		jnz	loc_4037DE
		cmp	ebx, 1
		jnz	short loc_402E42
		mov	al, 23h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], offset dword_40D804
		call	sub_407A39
		inc	eax
		push	edx
		jmp	short loc_402E8A
; ---------------------------------------------------------------------------

loc_402E42:				; CODE XREF: sub_40164F+17DAj
		cmp	ebx, 4
		jnz	short loc_402E5D
		mov	eax, 3
		call	sub_401463
		mov	ds:dword_40D804, eax
		mov	eax, 4
		jmp	short loc_402E8A
; ---------------------------------------------------------------------------

loc_402E5D:				; CODE XREF: sub_40164F+17F6j
		xor	eax, eax
		cmp	ebx, 3
		jnz	short loc_402E8A
		mov	eax, [ebp+var_30]
		mov	[esp+1D8h+var_1CC], 0C00h
		mov	[esp+1D8h+var_1D0], offset dword_40D804
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], eax
		call	sub_403CF2
		sub	esp, 10h

loc_402E8A:				; CODE XREF: sub_40164F+17F1j
					; sub_40164F+180Cj ...
		mov	ecx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1C4], eax
		mov	eax, [ebp+var_20]
		mov	[esp+1D8h+var_1C8], offset dword_40D804
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1CC], ecx
		mov	[esp+1D8h+var_1D4], edi
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegSetValueExA
		sub	esp, 18h
		test	eax, eax
		setnz	al
		movzx	eax, al
		mov	esi, eax
		mov	eax, [ebp+var_20]
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegCloseKey
		push	eax		; hKey
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402ED7:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 20019h	; jumptable 004016B3 case 52
		mov	esi, 1
		call	sub_40148F
		mov	[ebp+hFindFile], eax
		mov	eax, 33h
		call	sub_401414
		cmp	[ebp+hFindFile], 0
		mov	byte ptr ds:dword_42A000[ebx], 0
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D4], eax
		mov	eax, [ebp+hFindFile]
		lea	edx, [ebp+var_20]
		mov	[esp+1D8h+var_1C4], edx
		lea	edx, [ebp+var_1C]
		mov	[ebp+var_20], 3FFh
		mov	[esp+1D8h+var_1C8], edi
		mov	[esp+1D8h+var_1CC], edx
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegQueryValueExA
		sub	esp, 18h
		test	eax, eax
		jnz	short loc_402F57
		mov	eax, [ebp+var_1C]
		cmp	eax, 1
		jz	short loc_402F65
		cmp	eax, 4
		jz	short loc_402F65
		cmp	eax, 2
		jz	short loc_402F8B

loc_402F57:				; CODE XREF: sub_40164F+18F4j
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	esi, 1
		jmp	short loc_402F99
; ---------------------------------------------------------------------------

loc_402F65:				; CODE XREF: sub_40164F+18FCj
					; sub_40164F+1901j
		cmp	eax, 4
		jnz	short loc_402F8B
		mov	eax, ds:dword_42A000[ebx]
		xor	edx, edx
		cmp	[ebp+var_2C], 0
		mov	[esp+1D8h+var_1D8], edi
		setz	dl
		mov	[esp+1D8h+var_1D4], eax
		mov	esi, edx
		call	sub_40794D
		push	eax		; dwIndex
		push	eax		; hKey
		jmp	short loc_402F99
; ---------------------------------------------------------------------------

loc_402F8B:				; CODE XREF: sub_40164F+1906j
					; sub_40164F+1919j
		mov	eax, [ebp+var_20]
		mov	esi, [ebp+var_2C]
		mov	byte ptr ds:dword_42A000[ebx+eax], 0

loc_402F99:				; CODE XREF: sub_40164F+1914j
					; sub_40164F+193Aj
		mov	eax, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegCloseKey
		push	eax		; hKey
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_402FAE:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 20019h	; jumptable 004016B3 case 53
		mov	esi, 1
		call	sub_40148F
		mov	[ebp+hFindFile], eax
		mov	eax, 3
		call	sub_401463
		cmp	[ebp+hFindFile], 0
		mov	byte ptr ds:dword_42A000[ebx], 0
		jz	loc_4037DE
		cmp	[ebp+var_2C], 0
		mov	[ebp+var_1C], 3FFh
		jz	short loc_403012
		mov	[esp+1D8h+var_1D4], eax
		mov	eax, [ebp+hFindFile]
		mov	[esp+1D8h+var_1CC], 3FFh
		mov	[esp+1D8h+var_1D0], edi
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegEnumKeyA
		sub	esp, 10h
		jmp	short loc_40305B
; ---------------------------------------------------------------------------

loc_403012:				; CODE XREF: sub_40164F+199Dj
		mov	[esp+1D8h+var_1D4], eax
		mov	eax, [ebp+hFindFile]
		lea	edx, [ebp+var_1C]
		mov	[esp+1D8h+var_1BC], 0
		mov	[esp+1D8h+var_1C0], 0
		mov	[esp+1D8h+var_1C4], 0
		mov	[esp+1D8h+var_1C8], 0
		mov	[esp+1D8h+var_1CC], edx
		mov	[esp+1D8h+var_1D0], edi
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegEnumValueA
		sub	esp, 20h
		test	eax, eax
		jnz	loc_4037DE

loc_40305B:				; CODE XREF: sub_40164F+19C1j
		mov	eax, [ebp+hFindFile]
		xor	esi, esi
		mov	byte ptr [edi+3FFh], 0
		mov	[esp+1D8h+var_1D8], eax
		call	ds:RegCloseKey
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403079:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	esi, esi	; jumptable 004016B3 case 54
		cmp	byte ptr ds:dword_42A000[ebx], 0
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], edi
		call	sub_407972
		push	ebx		; hObject
		mov	[esp+1D8h+var_1D8], eax
		call	ds:CloseHandle
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4030A0:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFEDh	; jumptable 004016B3 case 55
		call	sub_401414
		mov	edx, [ebp+var_34]
		mov	[esp+1D8h+var_1D0], edx
		mov	edx, [ebp+var_38]
		mov	[esp+1D8h+var_1D8], eax
		mov	[esp+1D8h+var_1D4], edx
		call	sub_4077D6
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		jnz	short loc_4030D9
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	esi, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4030D9:				; CODE XREF: sub_40164F+1A77j
		mov	[esp+1D8h+var_1D4], eax
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edi
		call	sub_40794D
		push	ecx		; nNumberOfBytesToWrite
		push	ecx		; lpBuffer
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4030EE:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		cmp	[ebp+var_34], 0	; jumptable 004016B3 case 56
		jz	short loc_40310A
		mov	eax, 1
		call	sub_401463
		mov	edx, 1
		mov	ds:byte_40D404,	al
		jmp	short loc_40311F
; ---------------------------------------------------------------------------

loc_40310A:				; CODE XREF: sub_40164F+1AA3j
		mov	eax, 11h
		call	sub_401414
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407A39
		push	edx
		mov	edx, eax

loc_40311F:				; CODE XREF: sub_40164F+1AB9j
		cmp	byte ptr ds:dword_42A000[ebx], 0
		mov	esi, 1
		jz	loc_4037DE
		mov	[ebp+var_19C], edx
		mov	[esp+1DCh+var_1DC], edi
		call	sub_407972
		mov	edx, [ebp+var_19C]
		lea	ecx, [ebp+var_1C]
		push	esi		; hFile
		mov	[esp+1DCh+var_1D4], edx
		mov	[esp+1DCh+var_1CC], 0
		mov	[esp+1DCh+var_1D0], ecx
		mov	[esp+1DCh+var_1D8], offset byte_40D404
		mov	[esp+1DCh+var_1DC], eax
		call	ds:WriteFile
		xor	edx, edx
		sub	esp, 14h
		test	eax, eax
		setz	dl
		mov	esi, edx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40317B:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 2		; jumptable 004016B3 case 57
		call	sub_401463
		test	eax, eax
		jle	loc_4037DC
		cmp	eax, 3FFh
		mov	[ebp+var_194], 3FFh
		cmovg	eax, [ebp+var_194]
		xor	esi, esi
		cmp	byte ptr ds:dword_42A000[ebx], 0
		mov	[ebp+var_194], eax
		jz	loc_4032A7
		mov	[esp+1D8h+var_1D8], edi
		call	sub_407972
		lea	edx, [ebp+var_1C]
		lea	ecx, [ebp+var_20]
		push	ebx		; hFile
		mov	edi, eax
		xor	ebx, ebx

loc_4031CB:				; CODE XREF: sub_40164F+1C52j
		mov	[esp+1D8h+var_1CC], edx
		mov	[esp+1D8h+var_1D4], ecx
		mov	[ebp+var_19C], edx
		mov	[ebp+var_1A0], ecx
		mov	[esp+1D8h+var_1C8], 0
		mov	[esp+1D8h+var_1D0], 1
		mov	[esp+1D8h+var_1D8], edi
		call	ds:ReadFile
		mov	edx, [ebp+var_19C]
		mov	ecx, [ebp+var_1A0]
		sub	esp, 14h
		test	eax, eax
		jz	loc_4032A7
		cmp	[ebp+var_1C], 1
		jnz	loc_4032A7
		cmp	[ebp+var_30], 0
		jz	short loc_40323C
		mov	ecx, [ebp+hFindFile]
		movzx	eax, byte ptr [ebp+var_20]
		mov	[esp+1D8h+var_1D8], ecx
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	ecx		; lDistanceToMove
		push	ecx		; hFile
		jmp	loc_4037E4
; ---------------------------------------------------------------------------

loc_40323C:				; CODE XREF: sub_40164F+1BCEj
		cmp	bl, 0Ah
		mov	al, byte ptr [ebp+var_20]
		jz	short loc_403249
		cmp	bl, 0Dh
		jnz	short loc_40328B

loc_403249:				; CODE XREF: sub_40164F+1BF3j
		cmp	bl, al
		jz	short loc_403255
		cmp	al, 0Ah
		jz	short loc_40327B
		cmp	al, 0Dh
		jz	short loc_40327B

loc_403255:				; CODE XREF: sub_40164F+1BFCj
		mov	[esp+1D8h+var_1CC], 1
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D4], 0FFFFFFFFh
		mov	[esp+1D8h+var_1D8], edi
		call	ds:SetFilePointer
		sub	esp, 10h
		jmp	short loc_4032A7
; ---------------------------------------------------------------------------

loc_40327B:				; CODE XREF: sub_40164F+1C00j
					; sub_40164F+1C04j
		mov	edx, [ebp+var_198]
		mov	byte ptr ds:dword_42A000[esi+edx], al
		inc	esi
		jmp	short loc_4032A7
; ---------------------------------------------------------------------------

loc_40328B:				; CODE XREF: sub_40164F+1BF8j
		mov	bl, al
		mov	eax, [ebp+hFindFile]
		mov	[eax+esi], bl
		inc	esi
		test	bl, bl
		jz	short loc_4032A7
		cmp	esi, [ebp+var_194]
		jl	loc_4031CB

loc_4032A7:				; CODE XREF: sub_40164F+1B63j
					; sub_40164F+1BBAj ...
		mov	edx, [ebp+var_198]
		xor	ecx, ecx
		test	esi, esi
		setz	cl
		mov	byte ptr ds:dword_42A000[esi+edx], 0
		mov	esi, ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4032C3:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	esi, esi	; jumptable 004016B3 case 58
		cmp	byte ptr ds:dword_42A000[ebx], 0
		jz	loc_4037DE
		mov	eax, 2
		mov	ebx, [ebp+var_30]
		call	sub_401463
		mov	[esp+1D8h+var_1D8], edi
		mov	[ebp+var_19C], eax
		call	sub_407972
		push	edx		; hFile
		mov	edx, [ebp+var_19C]
		mov	[esp+1D8h+var_1CC], ebx
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	ds:SetFilePointer
		sub	esp, 10h
		cmp	[ebp+var_38], 0
		js	loc_4037DE
		mov	edx, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	sub_40794D
		push	edi		; lpFindFileData
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403333:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	esi, esi	; jumptable 004016B3 case 59
		cmp	byte ptr ds:dword_42A000[ebx], 0
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], edi
		call	sub_407972
		push	ecx		; hFindFile
		mov	[esp+1D8h+var_1D8], eax
		call	ds:FindClose
		push	ebx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40335A:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	ecx, [ebp+var_198] ; jumptable 004016B3	case 60
		cmp	byte ptr ds:dword_42A000[ecx], 0
		jz	short loc_4033AC
		mov	esi, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D8], esi
		call	sub_407972
		lea	edx, [ebp+var_180]
		push	esi		; hFindFile
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	ds:FindNextFileA
		test	eax, eax
		push	edx
		push	edx
		jz	short loc_4033AC
		lea	eax, [ebp+var_154]
		xor	esi, esi
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edi
		call	sub_407A11
		push	ecx		; lpFindFileData
		push	ecx		; lpFileName
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4033AC:				; CODE XREF: sub_40164F+1D18j
					; sub_40164F+1D40j
		mov	byte ptr ds:dword_42A000[ebx], 0
		mov	esi, 1
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4033BD:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 2		; jumptable 004016B3 case 61
		call	sub_401414
		lea	edx, [ebp+var_180]
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], eax
		call	ds:FindFirstFileA
		cmp	eax, 0FFFFFFFFh
		push	edx
		push	edx
		jnz	short loc_4033FF
		mov	edx, [ebp+var_198]
		mov	esi, 1
		mov	byte ptr ds:dword_42A000[edx], 0
		mov	byte ptr ds:dword_42A000[ebx], 0
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4033FF:				; CODE XREF: sub_40164F+1D90j
		mov	ecx, [ebp+hFindFile]
		xor	esi, esi
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], ecx
		call	sub_40794D
		push	eax
		push	eax
		lea	eax, [ebp+var_154]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edi
		call	sub_407A11
		push	eax
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40342E:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	eax, 0FFFFFFF0h	; jumptable 004016B3 case 62
		call	sub_401414
		mov	esi, eax
		mov	[esp+1D8h+var_1D8], eax
		call	sub_40765E
		test	eax, eax
		push	edi
		jnz	short loc_403451
		mov	eax, 0FFFFFFEDh
		call	sub_401414

loc_403451:				; CODE XREF: sub_40164F+1DF6j
		mov	[esp+1D8h+var_1D8], esi
		call	sub_4077A4
		push	ebx
		mov	[esp+1D8h+var_1D0], 2
		mov	[esp+1D8h+var_1D4], 40000000h
		mov	[esp+1D8h+var_1D8], esi
		call	sub_4077D6
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	edi, eax
		jz	loc_4035ED
		mov	ecx, ds:GlobalAlloc
		mov	edx, ds:dword_426B98
		mov	[esp+1D8h+var_1D8], 40h
		mov	[ebp+var_18C], ecx
		mov	[ebp+hFindFile], edx
		mov	[esp+1D8h+var_1D4], edx
		call	ecx ; GlobalAlloc
		mov	edx, 0FFFFFD66h
		push	ecx
		test	eax, eax
		push	ecx
		mov	ebx, eax
		jz	loc_4035D3
		mov	[esp+1D8h+var_1D8], 0
		call	sub_403AD1
		mov	edx, [ebp+hFindFile]
		push	eax
		mov	[esp+1D8h+var_1D4], edx
		mov	[esp+1D8h+var_1D8], ebx
		call	sub_403A85
		push	eax
		push	eax
		mov	eax, [ebp+var_34]
		mov	[esp+1D8h+var_1D8], 40h
		mov	[esp+1D8h+var_1D4], eax
		call	[ebp+var_18C]
		test	eax, eax
		push	edx
		push	edx
		mov	edx, eax
		jz	loc_40357B
		mov	eax, [ebp+var_34]
		mov	[esp+1E0h+var_1D8], edx
		mov	[ebp+var_19C], edx
		mov	[esp+1E0h+var_1DC], 0
		mov	[esp+1E0h+var_1D4], eax
		mov	eax, [ebp+var_38]
		mov	[esp+1E0h+var_1E0], eax
		call	sub_403CF2
		mov	edx, [ebp+var_19C]
		mov	eax, edx
		mov	[ebp+var_194], edx
		sub	esp, 10h
		jmp	short loc_403566
; ---------------------------------------------------------------------------

loc_40352E:				; CODE XREF: sub_40164F+1F1Aj
		mov	edx, [eax]
		lea	ecx, [eax+8]
		mov	[esp+1E0h+var_1DC], ecx
		mov	[esp+1E0h+var_1D8], edx
		mov	eax, [eax+4]
		mov	[ebp+var_19C], edx
		mov	[ebp+var_1A0], ecx
		add	eax, ebx
		mov	[esp+1E0h+var_1E0], eax
		call	sub_40777B
		mov	edx, [ebp+var_19C]
		mov	ecx, [ebp+var_1A0]
		lea	eax, [ecx+edx]
		sub	esp, 0Ch

loc_403566:				; CODE XREF: sub_40164F+1EDDj
		cmp	byte ptr [eax],	0
		jnz	short loc_40352E
		mov	edx, [ebp+var_194]
		mov	[esp+1E0h+var_1E0], edx
		call	ds:GlobalFree
		push	eax		; hFile

loc_40357B:				; CODE XREF: sub_40164F+1EA2j
		mov	ecx, [ebp+hFindFile]
		lea	eax, [ebp+var_20]
		mov	[esp+1E0h+var_1D0], 0
		mov	[esp+1E0h+var_1D4], eax
		mov	[esp+1E0h+var_1DC], ebx
		mov	[esp+1E0h+var_1D8], ecx
		mov	[esp+1E0h+var_1E0], edi
		call	ds:WriteFile
		sub	esp, 14h
		mov	[esp+1E0h+var_1E0], ebx
		call	ds:GlobalFree
		push	ecx
		mov	[esp+1E0h+var_1D4], 0
		mov	[esp+1E0h+var_1D8], 0
		mov	[esp+1E0h+var_1DC], edi
		mov	[esp+1E0h+var_1E0], 0FFFFFFFFh
		call	sub_403CF2
		sub	esp, 10h
		mov	edx, eax

loc_4035D3:				; CODE XREF: sub_40164F+1E61j
		mov	[ebp+var_19C], edx
		mov	[esp+1E0h+var_1E0], edi
		call	ds:CloseHandle
		push	edx		; lpFileName
		mov	edx, [ebp+var_19C]
		test	edx, edx
		jns	short loc_403603

loc_4035ED:				; CODE XREF: sub_40164F+1E2Bj
		mov	[esp+1E0h+var_1E0], esi
		mov	esi, 1
		call	ds:DeleteFileA
		push	eax
		mov	eax, 0FFFFFFEFh
		jmp	short loc_40360A
; ---------------------------------------------------------------------------

loc_403603:				; CODE XREF: sub_40164F+1F9Cj
		mov	eax, 0FFFFFFF3h
		xor	esi, esi

loc_40360A:				; CODE XREF: sub_40164F+1FB2j
		mov	[esp+1E0h+var_1E0], eax
		call	sub_401630
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403618:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 63
		mov	esi, 1
		call	sub_401463
		cmp	eax, ds:dword_426B58
		mov	edi, eax
		jnb	loc_4037DE
		imul	ebx, eax, 418h
		mov	eax, [ebp+var_34]
		add	ebx, ds:dword_426B54
		cmp	eax, 0
		jl	short loc_403684
		mov	eax, [ebx+eax*4]
		jnz	short loc_403669
		mov	esi, [ebp+hFindFile]
		add	ebx, 18h
		mov	[esp+1D8h+var_1D4], ebx
		mov	[esp+1D8h+var_1D8], esi
		xor	esi, esi
		call	sub_407A11
		push	eax
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403669:				; CODE XREF: sub_40164F+1FFAj
		mov	edx, [ebp+hFindFile]
		xor	esi, esi
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], edx
		call	sub_40794D
		push	eax
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403684:				; CODE XREF: sub_40164F+1FF5j
		not	eax
		test	eax, eax
		mov	[ebp+var_34], eax
		jz	short loc_40369C
		mov	eax, 1
		call	sub_401463
		mov	[ebp+var_38], eax
		jmp	short loc_4036B7
; ---------------------------------------------------------------------------

loc_40369C:				; CODE XREF: sub_40164F+203Cj
		mov	eax, [ebp+var_2C]
		mov	[esp+1D8h+var_1D4], eax
		lea	eax, [ebx+18h]
		mov	[esp+1D8h+var_1D8], eax
		call	sub_407B23
		push	eax
		push	eax
		or	dword ptr [ebx+8], 100h

loc_4036B7:				; CODE XREF: sub_40164F+204Bj
		mov	eax, [ebp+var_34]
		xor	esi, esi
		mov	edx, [ebp+var_38]
		mov	[ebx+eax*4], edx
		cmp	[ebp+var_30], 0
		jz	loc_4037DE
		mov	[esp+1D8h+var_1D8], edi
		call	sub_401220
		push	eax
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_4036DA:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		xor	eax, eax	; jumptable 004016B3 case 64
		mov	esi, 1
		call	sub_401463
		cmp	eax, 1Fh
		ja	loc_4037DE
		cmp	[ebp+var_30], 0
		jz	short loc_40374A
		cmp	[ebp+var_34], 0
		jz	short loc_403722
		mov	[esp+1D8h+var_1D8], eax
		xor	si, si
		call	sub_40133F
		push	ebx
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], 0
		call	sub_40128F
		push	edi
		push	edi
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_403722:				; CODE XREF: sub_40164F+20AAj
		mov	[esp+1D8h+var_1D8], 0
		xor	esi, esi
		call	sub_401388
		mov	ecx, [ebp+hFindFile]
		push	edx
		mov	[esp+1D8h+var_1D8], ecx
		mov	[esp+1D8h+var_1D4], eax
		call	sub_40794D
		push	ecx
		push	ecx
		jmp	loc_4037DE
; ---------------------------------------------------------------------------

loc_40374A:				; CODE XREF: sub_40164F+20A4j
		cmp	[ebp+var_34], 0
		mov	edx, ds:hInstance
		lea	eax, [eax+24h]
		jz	short loc_403764
		mov	ecx, [ebp+var_38]
		xor	esi, esi
		mov	[edx+eax*4+4], ecx
		jmp	short loc_4037DE
; ---------------------------------------------------------------------------

loc_403764:				; CODE XREF: sub_40164F+2108j
		mov	eax, [edx+eax*4+4]
		mov	esi, [ebp+hFindFile]
		mov	[esp+1D8h+var_1D4], eax
		mov	[esp+1D8h+var_1D8], esi
		xor	esi, esi
		call	sub_407B23
		push	eax		; Msg
		push	eax		; hWnd
		jmp	short loc_4037DE
; ---------------------------------------------------------------------------

loc_403780:				; CODE XREF: sub_40164F+64j
					; DATA XREF: .rdata:off_40B004o
		mov	edx, [ebp+var_194] ; jumptable 004016B3	case 67
		and	esi, ds:dword_4230EC
		mov	[esp+1D8h+var_1CC], 0
		mov	[esp+1D8h+var_1D4], 0Bh
		mov	[esp+1D8h+var_1D0], esi
		xor	esi, esi
		mov	[esp+1D8h+var_1D8], edx
		call	ds:SendMessageA
		sub	esp, 10h
		cmp	[ebp+lpString2], 0
		jz	short loc_4037DE
		mov	edx, [ebp+var_194]
		mov	[esp+1D8h+var_1D0], 0
		mov	[esp+1D8h+var_1D4], 0
		mov	[esp+1D8h+var_1D8], edx
		call	ds:InvalidateRect
		sub	esp, 0Ch
		jmp	short loc_4037DE
; ---------------------------------------------------------------------------

loc_4037D8:				; CODE XREF: sub_40164F+5Ej
					; sub_40164F+64j
					; DATA XREF: ...
		xor	esi, esi	; jumptable 004016B3 default case
		jmp	short loc_4037DE
; ---------------------------------------------------------------------------

loc_4037DC:				; CODE XREF: sub_40164F+1B38j
		xor	esi, esi

loc_4037DE:				; CODE XREF: sub_40164F+DDj
					; sub_40164F+FFj ...
		add	ds:dword_426B10, esi

loc_4037E4:				; CODE XREF: sub_40164F+64Cj
					; sub_40164F+1BE8j
		xor	esi, esi

loc_4037E6:				; CODE XREF: sub_40164F+64j
					; sub_40164F+8Dj ...
		lea	esp, [ebp-0Ch]	; jumptable 004016B3 case 2
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_40164F	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4037F0	proc near		; CODE XREF: sub_40164F+BBp
					; sub_4038A0+1Dp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	edi, ds:SendMessageA
		jmp	short loc_403885
; ---------------------------------------------------------------------------

loc_403807:				; CODE XREF: sub_4037F0+97j
		imul	eax, ebx, 1Ch
		add	eax, ds:dword_426B5C
		cmp	dword ptr [eax], 1
		jz	short loc_40388D
		call	sub_40164F
		cmp	eax, 7FFFFFFFh
		jz	short loc_403891
		mov	[esp+28h+var_28], eax
		call	sub_40160F
		test	eax, eax
		push	edx		; nNumber
		jnz	short loc_403833
		inc	ebx
		mov	al, 1
		jmp	short loc_40383C
; ---------------------------------------------------------------------------

loc_403833:				; CODE XREF: sub_4037F0+3Cj
		lea	edx, [eax-1]
		mov	eax, edx
		sub	eax, ebx
		mov	ebx, edx

loc_40383C:				; CODE XREF: sub_4037F0+41j
		test	esi, esi
		jz	short loc_403885
		mov	edx, ds:dword_4273BC
		add	eax, ds:dword_4273B4
		mov	[esp+28h+var_24], 7530h
		mov	[esp+28h+var_20], edx
		mov	ds:dword_4273B4, eax
		mov	[esp+28h+var_28], eax
		call	ds:MulDiv
		sub	esp, 0Ch
		mov	[esp+28h+var_1C], 0
		mov	[esp+28h+var_20], eax
		mov	[esp+28h+var_24], 402h
		mov	[esp+28h+var_28], esi
		call	edi ; SendMessageA
		sub	esp, 10h

loc_403885:				; CODE XREF: sub_4037F0+15j
					; sub_4037F0+4Ej
		test	ebx, ebx
		jns	loc_403807

loc_40388D:				; CODE XREF: sub_4037F0+23j
		xor	eax, eax
		jmp	short loc_403896
; ---------------------------------------------------------------------------

loc_403891:				; CODE XREF: sub_4037F0+2Fj
		mov	eax, 7FFFFFFFh

loc_403896:				; CODE XREF: sub_4037F0+9Fj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_4037F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4038A0	proc near		; CODE XREF: start+545p sub_404DF4+62p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, ds:hInstance
		mov	edx, [ebp+arg_0]
		mov	[esp+18h+var_14], 0
		mov	eax, [eax+edx*4+6Ch]
		mov	[esp+18h+var_18], eax
		call	sub_4037F0
		push	ecx
		push	ecx
		leave
		retn	4
sub_4038A0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4038C8	proc near		; CODE XREF: sub_4038FA:loc_40393Cp
					; sub_40399A+6Ep

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, ds:dword_40EC44
		cmp	ds:dword_40EC48, eax
		mov	[esp+18h+var_14], 64h
		mov	[esp+18h+var_10], eax
		cmovle	eax, ds:dword_40EC48
		mov	[esp+18h+var_18], eax
		call	ds:MulDiv
		sub	esp, 0Ch
		leave
		retn
sub_4038C8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4038FA	proc near		; DATA XREF: sub_40399A+AAo

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= byte ptr -48h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 50h
		mov	eax, [ebp+arg_4]
		mov	ebx, [ebp+arg_0]
		cmp	eax, 110h
		jnz	short loc_403935
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0FAh
		mov	[esp+58h+var_54], 1
		mov	[esp+58h+var_58], ebx
		call	ds:SetTimer
		sub	esp, 10h
		jmp	short loc_40393C
; ---------------------------------------------------------------------------

loc_403935:				; CODE XREF: sub_4038FA+13j
		cmp	eax, 113h
		jnz	short loc_40398F

loc_40393C:				; CODE XREF: sub_4038FA+39j
		call	sub_4038C8
		mov	ecx, offset aVerifyingInsta ; "verifying installer: %d%%"
		mov	edx, offset aUnpackingDataD ; "unpacking data: %d%%"
		cmp	ds:hInstance, 0
		lea	esi, [ebp+var_48]
		mov	[esp+58h+var_58], esi
		cmovz	edx, ecx
		mov	[esp+58h+var_54], edx
		mov	[esp+58h+var_50], eax
		call	ds:wsprintfA
		mov	[esp+58h+var_54], esi
		mov	[esp+58h+var_58], ebx
		call	ds:SetWindowTextA
		push	eax
		push	eax
		mov	[esp+58h+var_50], esi
		mov	[esp+58h+var_54], 406h
		mov	[esp+58h+var_58], ebx
		call	sub_4074FA
		sub	esp, 0Ch

loc_40398F:				; CODE XREF: sub_4038FA+40j
		lea	esp, [ebp-8]
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	ebp
		retn	10h
sub_4038FA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40399A	proc near		; CODE XREF: sub_403B03+F7p
					; sub_403B03+1CDp ...

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_48		= byte ptr -48h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 64h
		cmp	[ebp+arg_0], 0
		jz	short loc_4039C9
		mov	eax, ds:dword_40EC4C
		test	eax, eax
		jz	short loc_4039BA
		mov	[esp+68h+var_68], eax
		call	ds:DestroyWindow
		push	ebx

loc_4039BA:				; CODE XREF: sub_40399A+14j
		mov	ds:dword_40EC4C, 0
		jmp	loc_403A80
; ---------------------------------------------------------------------------

loc_4039C9:				; CODE XREF: sub_40399A+Bj
		cmp	ds:dword_40EC4C, 0
		jz	short loc_4039E4
		mov	[esp+68h+var_68], 0
		call	sub_408494
		push	ecx		; LPSTR
		jmp	loc_403A80
; ---------------------------------------------------------------------------

loc_4039E4:				; CODE XREF: sub_40399A+36j
		call	ds:GetTickCount
		cmp	eax, ds:dword_426B8C
		jbe	loc_403A80
		cmp	ds:dword_426BA0, 0
		jz	short loc_403A37
		test	byte ptr ds:dword_426B3C, 1
		jz	short loc_403A80
		call	sub_4038C8
		lea	ebx, [ebp+var_48]
		mov	[esp+68h+var_68], ebx
		mov	[esp+68h+var_64], offset a___D ; "... %d%%"
		mov	[esp+68h+var_60], eax
		call	ds:wsprintfA
		mov	[esp+68h+var_64], ebx
		mov	[esp+68h+var_68], 0
		call	sub_406DB2
		jmp	short loc_403A7E
; ---------------------------------------------------------------------------

loc_403A37:				; CODE XREF: sub_40399A+63j
		mov	eax, ds:dword_426BA4
		mov	[esp+68h+var_58], 0
		mov	[esp+68h+var_5C], offset sub_4038FA
		mov	[esp+68h+var_60], 0
		mov	[esp+68h+var_64], 6Fh
		mov	[esp+68h+var_68], eax
		call	ds:CreateDialogParamA
		sub	esp, 14h
		mov	ds:dword_40EC4C, eax
		mov	[esp+68h+var_64], 5
		mov	[esp+68h+var_68], eax
		call	ds:ShowWindow

loc_403A7E:				; CODE XREF: sub_40399A+9Bj
		push	edx
		push	edx

loc_403A80:				; CODE XREF: sub_40399A+2Aj
					; sub_40399A+45j ...
		mov	ebx, [ebp+var_4]
		leave
		retn
sub_40399A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_403A85	proc near		; CODE XREF: sub_40164F+1E81p
					; sub_403B03+A1p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	ebx, [ebp+arg_4]
		lea	eax, [ebp+var_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_28], 0
		mov	[esp+38h+var_30], ebx
		mov	[esp+38h+var_34], eax
		mov	eax, dword_40A014
		mov	[esp+38h+var_38], eax
		call	ds:ReadFile
		xor	edx, edx
		sub	esp, 14h
		test	eax, eax
		jz	short loc_403AC8
		xor	edx, edx
		cmp	[ebp+var_C], ebx
		setz	dl

loc_403AC8:				; CODE XREF: sub_403A85+39j
		mov	eax, edx
		mov	ebx, [ebp+var_4]
		leave
		retn	8
sub_403A85	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_403AD1	proc near		; CODE XREF: sub_40164F+1E6Ep
					; sub_403B03+3Cp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], eax
		mov	eax, dword_40A014
		mov	[esp+18h+var_18], eax
		call	ds:SetFilePointer
		sub	esp, 10h
		leave
		retn	4
sub_403AD1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_403B03	proc near		; CODE XREF: sub_403CF2+45p
					; sub_403CF2+A6p

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, eax
		push	ebx
		sub	esp, 4Ch
		mov	ebx, ds:dword_416CE0
		add	ebx, eax
		sub	ebx, ds:dword_41ACE4
		call	ds:GetTickCount
		add	eax, 1F4h
		test	ebx, ebx
		mov	ds:dword_426B8C, eax
		jle	loc_403CC9
		mov	eax, ds:dword_416CD8
		lea	edi, [ebp+var_1C]
		mov	[esp+58h+var_58], eax
		call	sub_403AD1
		mov	eax, ds:dword_41ACE4
		push	ecx		; hFile
		mov	[esp+58h+var_54], eax
		mov	eax, dword_40A010
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_58], eax
		call	ds:SetFilePointer
		mov	ds:dword_40EC44, ebx
		mov	ds:dword_40EC48, 0
		sub	esp, 10h

loc_403B7F:				; CODE XREF: sub_403B03+19Bj
		mov	ebx, ds:dword_416CDC
		mov	eax, 4000h
		sub	ebx, ds:dword_416CD8
		mov	[esp+58h+var_58], offset dword_416CE4
		cmp	ebx, 4000h
		cmovg	ebx, eax
		mov	[esp+58h+var_54], ebx
		call	sub_403A85
		test	eax, eax
		push	edx		; lpBuffer
		push	edx		; hFile
		jz	loc_403CD9
		add	ds:dword_416CD8, ebx
		mov	ds:dword_416C68, offset	dword_416CE4
		mov	ds:dword_416C6C, ebx

loc_403BC9:				; CODE XREF: sub_403B03+175j
		cmp	ds:hInstance, 0
		jz	short loc_403BFF
		cmp	ds:dword_426B28, 0
		jnz	short loc_403BFF
		mov	eax, ds:dword_41ACE4
		sub	eax, ds:dword_416CE0
		mov	[esp+58h+var_58], 0
		sub	eax, esi
		add	eax, ds:dword_40EC44
		mov	ds:dword_40EC48, eax
		call	sub_40399A

loc_403BFF:				; CODE XREF: sub_403B03+CDj
					; sub_403B03+D6j
		mov	ecx, offset dword_416C50
		mov	ds:dword_416C70, offset	dword_41ACE8
		mov	ds:dword_416C74, 8000h
		call	sub_408582
		test	eax, eax
		js	loc_403CE5
		mov	edx, ds:dword_416C70
		sub	edx, offset dword_41ACE8
		jz	short loc_403C80
		mov	eax, dword_40A010
		mov	[esp+58h+var_50], edx
		mov	[ebp+var_2C], edx
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], edi
		mov	[esp+58h+var_54], offset dword_41ACE8
		mov	[esp+58h+var_58], eax
		call	ds:WriteFile
		mov	edx, [ebp+var_2C]
		sub	esp, 14h
		test	eax, eax
		jz	short loc_403CDE
		cmp	edx, [ebp+var_1C]
		jnz	short loc_403CDE
		add	ds:dword_41ACE4, edx
		cmp	ds:dword_416C6C, 0
		jnz	loc_403BC9
		jmp	short loc_403C8D
; ---------------------------------------------------------------------------

loc_403C80:				; CODE XREF: sub_403B03+12Ej
		test	ebx, ebx
		jz	short loc_403CE5
		cmp	ds:dword_416C6C, 0
		jnz	short loc_403CE5

loc_403C8D:				; CODE XREF: sub_403B03+17Bj
		mov	eax, ds:dword_416CE0
		mov	edx, eax
		sub	edx, ds:dword_41ACE4
		add	edx, esi
		test	edx, edx
		jg	loc_403B7F
		mov	[esp+58h+var_54], eax
		mov	eax, dword_40A010
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_58], eax
		call	ds:SetFilePointer
		sub	esp, 10h

loc_403CC9:				; CODE XREF: sub_403B03+2Bj
		mov	[esp+58h+var_58], 1
		call	sub_40399A
		xor	eax, eax
		jmp	short loc_403CEA
; ---------------------------------------------------------------------------

loc_403CD9:				; CODE XREF: sub_403B03+AAj
		or	eax, 0FFFFFFFFh
		jmp	short loc_403CEA
; ---------------------------------------------------------------------------

loc_403CDE:				; CODE XREF: sub_403B03+161j
					; sub_403B03+166j
		mov	eax, 0FFFFFFFEh
		jmp	short loc_403CEA
; ---------------------------------------------------------------------------

loc_403CE5:				; CODE XREF: sub_403B03+11Cj
					; sub_403B03+17Fj ...
		mov	eax, 0FFFFFFFDh

loc_403CEA:				; CODE XREF: sub_403B03+1D4j
					; sub_403B03+1D9j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_403B03	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_403CF2	proc near		; CODE XREF: sub_40164F+6A3p
					; sub_40164F+1833p ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_2C		= dword	ptr -2Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	eax, [ebp+arg_0]
		test	eax, eax
		js	short loc_403D32
		add	eax, ds:dword_426B84
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	ds:dword_416CE0, eax
		mov	[esp+58h+var_54], eax
		mov	eax, dword_40A010
		mov	[esp+58h+var_58], eax
		call	ds:SetFilePointer
		sub	esp, 10h

loc_403D32:				; CODE XREF: sub_403CF2+Ej
		mov	eax, 4
		call	sub_403B03
		test	eax, eax
		mov	ebx, eax
		js	loc_403E9B
		lea	eax, [ebp+var_20]
		mov	esi, ds:ReadFile
		mov	ebx, 0FFFFFFFDh
		mov	[esp+58h+var_54], eax
		mov	eax, dword_40A010
		lea	edi, [ebp+var_24]
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], edi
		mov	[esp+58h+var_50], 4
		mov	[esp+58h+var_58], eax
		call	esi ; ReadFile
		sub	esp, 14h
		test	eax, eax
		jz	loc_403E9B
		cmp	[ebp+var_24], 4
		jnz	loc_403E9B
		mov	eax, [ebp+var_20]
		add	ds:dword_416CE0, 4
		call	sub_403B03
		test	eax, eax
		mov	ebx, eax
		js	loc_403E9B
		cmp	[ebp+arg_8], 0
		jnz	loc_403E4D
		jmp	loc_403E3D
; ---------------------------------------------------------------------------

loc_403DB6:				; CODE XREF: sub_403CF2+153j
		cmp	eax, 4000h
		mov	esi, 4000h
		cmovle	esi, eax
		mov	eax, dword_40A010
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], edi
		mov	[esp+58h+var_50], esi
		mov	[esp+58h+var_54], offset dword_416CE4
		mov	[esp+58h+var_58], eax
		call	[ebp+var_2C]
		sub	esp, 14h
		test	eax, eax
		jz	loc_403E8F
		cmp	esi, [ebp+var_24]
		jnz	loc_403E8F
		mov	edx, [ebp+arg_4]
		lea	eax, [ebp+var_1C]
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_50], esi
		mov	[esp+58h+var_54], offset dword_416CE4
		mov	[esp+58h+var_58], edx
		call	ds:WriteFile
		sub	esp, 14h
		test	eax, eax
		jz	short loc_403E96
		cmp	[ebp+var_1C], esi
		jnz	short loc_403E96
		mov	eax, [ebp+var_24]
		sub	[ebp+var_20], eax
		add	ds:dword_416CE0, eax
		add	ebx, eax
		jmp	short loc_403E40
; ---------------------------------------------------------------------------

loc_403E3D:				; CODE XREF: sub_403CF2+BFj
		mov	[ebp+var_2C], esi

loc_403E40:				; CODE XREF: sub_403CF2+149j
		mov	eax, [ebp+var_20]
		test	eax, eax
		jg	loc_403DB6
		jmp	short loc_403E9B
; ---------------------------------------------------------------------------

loc_403E4D:				; CODE XREF: sub_403CF2+B9j
		mov	eax, [ebp+var_20]
		mov	ebx, 0FFFFFFFDh
		cmp	[ebp+arg_C], eax
		cmovle	eax, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_50], eax
		mov	eax, dword_40A010
		mov	[esp+58h+var_4C], edi
		mov	[esp+58h+var_54], edx
		mov	[esp+58h+var_58], eax
		call	esi ; ReadFile
		sub	esp, 14h
		test	eax, eax
		jz	short loc_403E9B
		mov	ebx, [ebp+var_24]
		add	ds:dword_416CE0, ebx
		jmp	short loc_403E9B
; ---------------------------------------------------------------------------

loc_403E8F:				; CODE XREF: sub_403CF2+F9j
					; sub_403CF2+102j
		mov	ebx, 0FFFFFFFDh
		jmp	short loc_403E9B
; ---------------------------------------------------------------------------

loc_403E96:				; CODE XREF: sub_403CF2+134j
					; sub_403CF2+139j
		mov	ebx, 0FFFFFFFEh

loc_403E9B:				; CODE XREF: sub_403CF2+4Ej
					; sub_403CF2+8Cj ...
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_403CF2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_403EA7	proc near		; CODE XREF: start+1F8p

var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_170		= dword	ptr -170h
var_16C		= dword	ptr -16Ch
var_168		= dword	ptr -168h
var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_150		= dword	ptr -150h
var_14C		= dword	ptr -14Ch
var_13C		= byte ptr -13Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, offset aErrorLaunching ; "Error launching installer"
		sub	esp, 16Ch
		mov	edi, [ebp+arg_0]
		call	ds:GetTickCount
		mov	[esp+178h+var_170], 400h
		mov	[esp+178h+var_174], offset dword_430C00
		mov	[esp+178h+var_178], 0
		add	eax, 3E8h
		mov	ds:dword_426B8C, eax
		call	ds:GetModuleFileNameA
		sub	esp, 0Ch
		mov	[esp+178h+var_170], 3
		mov	[esp+178h+var_174], 80000000h
		mov	[esp+178h+var_178], offset dword_430C00
		call	sub_4077D6
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		mov	dword_40A014, eax
		jz	loc_404255
		mov	[esp+178h+var_174], offset dword_430C00
		mov	[esp+178h+var_178], offset dword_42FC00
		call	sub_407A11
		push	ebx
		push	ebx
		mov	[esp+178h+var_178], offset dword_42FC00
		call	sub_407620
		push	edx
		mov	[esp+178h+var_174], eax
		mov	[esp+178h+var_178], offset dword_431000
		call	sub_407A11
		push	ecx		; lpFileSizeHigh
		push	ecx		; hFile
		mov	[esp+178h+var_174], 0
		mov	[esp+178h+var_178], esi
		call	ds:GetFileSize
		mov	[ebp+var_150], 0
		mov	[ebp+var_14C], 0
		push	ebx
		push	ebx
		mov	ebx, eax
		mov	ds:dword_40EC44, eax
		jmp	loc_4040A7
; ---------------------------------------------------------------------------

loc_403F82:				; CODE XREF: sub_403EA7+202j
		cmp	ds:dword_426B98, 1
		mov	[esp+178h+var_178], offset dword_40EC50
		sbb	esi, esi
		and	esi, 0FFFF8200h
		add	esi, 8000h
		cmp	esi, ebx
		cmovg	esi, ebx
		mov	[esp+178h+var_174], esi
		call	sub_403A85
		test	eax, eax
		push	ecx
		push	ecx
		jnz	short loc_403FC3
		mov	[esp+178h+var_178], 1
		call	sub_40399A
		jmp	loc_404250
; ---------------------------------------------------------------------------

loc_403FC3:				; CODE XREF: sub_403EA7+109j
		cmp	ds:dword_426B98, 0
		jnz	loc_404060
		lea	eax, [ebp+var_38]
		mov	[esp+178h+var_178], eax
		mov	[esp+178h+var_170], 1Ch
		mov	[esp+178h+var_174], offset dword_40EC50
		call	sub_40777B
		mov	eax, [ebp+var_38]
		sub	esp, 0Ch
		test	eax, 0FFFFFFF0h
		jnz	short loc_404074
		cmp	[ebp+var_34], 0DEADBEEFh
		jnz	short loc_404074
		cmp	[ebp+var_28], 74736E49h
		jnz	short loc_404074
		cmp	[ebp+var_2C], 74666F73h
		jnz	short loc_404074
		cmp	[ebp+var_30], 6C6C754Eh
		jnz	short loc_404074
		or	edi, eax
		mov	edx, ds:dword_40EC48
		mov	eax, edi
		and	eax, 2
		or	ds:dword_426B28, eax
		mov	eax, [ebp+var_20]
		mov	ds:dword_426B98, edx
		cmp	eax, ebx
		jg	loc_404250
		test	edi, 8
		jnz	short loc_404050
		test	edi, 4
		jnz	short loc_4040AF

loc_404050:				; CODE XREF: sub_403EA7+19Fj
		lea	ebx, [eax-4]
		inc	[ebp+var_150]
		cmp	esi, ebx
		cmova	esi, ebx
		jmp	short loc_404074
; ---------------------------------------------------------------------------

loc_404060:				; CODE XREF: sub_403EA7+123j
		test	edi, 2
		jnz	short loc_404074
		mov	[esp+178h+var_178], 0
		call	sub_40399A

loc_404074:				; CODE XREF: sub_403EA7+14Fj
					; sub_403EA7+158j ...
		cmp	ebx, ds:dword_40EC44
		jge	short loc_40409F
		mov	eax, [ebp+var_14C]
		mov	[esp+178h+var_170], esi
		mov	[esp+178h+var_174], offset dword_40EC50
		mov	[esp+178h+var_178], eax
		call	sub_4084E4
		sub	esp, 0Ch
		mov	[ebp+var_14C], eax

loc_40409F:				; CODE XREF: sub_403EA7+1D3j
		add	ds:dword_40EC48, esi
		sub	ebx, esi

loc_4040A7:				; CODE XREF: sub_403EA7+D6j
		test	ebx, ebx
		jg	loc_403F82

loc_4040AF:				; CODE XREF: sub_403EA7+1A7j
		mov	[esp+178h+var_178], 1
		mov	ebx, offset aInstallerInteg ; "Installer integrity check has failed. C"...
		call	sub_40399A
		cmp	ds:dword_426B98, 0
		jz	loc_404255
		cmp	[ebp+var_150], 0
		jz	short loc_404110
		mov	eax, ds:dword_40EC48
		mov	[esp+178h+var_178], eax
		call	sub_403AD1
		push	eax
		lea	eax, [ebp+var_1C]
		mov	[esp+178h+var_174], 4
		mov	[esp+178h+var_178], eax
		call	sub_403A85
		test	eax, eax
		push	edx		; dwBytes
		push	edx		; uFlags
		jz	loc_404255
		mov	eax, [ebp+var_14C]
		cmp	eax, [ebp+var_1C]
		jnz	loc_404255

loc_404110:				; CODE XREF: sub_403EA7+22Dj
		mov	eax, [ebp+var_24]
		lea	ebx, [ebp+var_13C]
		mov	[esp+178h+var_178], 40h
		mov	[esp+178h+var_174], eax
		call	ds:GlobalAlloc
		mov	ecx, offset dword_416C50
		push	esi
		push	esi
		mov	esi, eax
		call	sub_40854C
		mov	[esp+178h+var_178], ebx
		mov	[esp+178h+var_174], offset dword_430400
		call	sub_407832
		push	edi		; dwDesiredAccess
		push	edi		; lpFileName
		mov	[esp+178h+var_178], ebx
		mov	ebx, offset aErrorWritingTe ; "Error writing temporary file. Make sure"...
		mov	[esp+178h+var_160], 0
		mov	[esp+178h+var_164], 4000100h
		mov	[esp+178h+var_168], 2
		mov	[esp+178h+var_16C], 0
		mov	[esp+178h+var_170], 0
		mov	[esp+178h+var_174], 0C0000000h
		call	ds:CreateFileA
		sub	esp, 1Ch
		mov	dword_40A010, eax
		inc	eax
		jz	loc_404255
		mov	eax, ds:dword_426B98
		add	eax, 1Ch
		mov	[esp+178h+var_178], eax
		call	sub_403AD1
		mov	edx, [ebp+var_38]
		mov	ecx, [ebp+var_20]
		and	edx, 4
		cmp	edx, 1
		sbb	edx, edx
		and	edx, 4
		mov	ds:dword_416CD8, eax
		lea	eax, [eax+ecx-1Ch]
		sub	eax, edx
		mov	ds:dword_416CDC, eax
		mov	eax, [ebp+var_24]
		push	ebx
		mov	ebx, offset aInstallerInteg ; "Installer integrity check has failed. C"...
		mov	[esp+178h+var_170], esi
		mov	[esp+178h+var_16C], eax
		mov	[esp+178h+var_174], 0
		mov	[esp+178h+var_178], 0FFFFFFFFh
		call	sub_403CF2
		sub	esp, 10h
		cmp	eax, [ebp+var_24]
		jnz	short loc_404255
		mov	ds:hInstance, esi
		mov	eax, [esi]
		mov	edx, [ebp+var_38]
		mov	ds:dword_426B90, eax
		mov	eax, ds:dword_426B94
		and	edx, 1
		cmp	edx, 1
		sbb	eax, 0FFFFFFFFh
		mov	ds:dword_426B94, eax
		mov	eax, 8

loc_40421D:				; CODE XREF: sub_403EA7+37Dj
		dec	eax
		add	[esi+eax*8+4], esi
		test	eax, eax
		jnz	short loc_40421D
		mov	eax, ds:dword_416CE0
		xor	ebx, ebx
		mov	[esi+3Ch], eax
		add	esi, 4
		mov	[esp+178h+var_170], 40h
		mov	[esp+178h+var_174], esi
		mov	[esp+178h+var_178], offset dword_426B4C
		call	sub_40777B
		sub	esp, 0Ch
		jmp	short loc_404255
; ---------------------------------------------------------------------------

loc_404250:				; CODE XREF: sub_403EA7+117j
					; sub_403EA7+193j
		mov	ebx, offset aInstallerInteg ; "Installer integrity check has failed. C"...

loc_404255:				; CODE XREF: sub_403EA7+6Dj
					; sub_403EA7+220j ...
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_403EA7	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404264	proc near		; CODE XREF: start+1A4p start+1DAp

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_18], offset dword_430400
		call	sub_407A4F
		push	eax
		mov	[esp+18h+var_18], offset dword_430400
		call	sub_40765E
		push	edx
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		jz	short locret_4042C6
		mov	[esp+18h+var_18], offset dword_430400
		call	sub_4075AA
		push	eax		; lpPathName
		mov	[esp+18h+var_14], 0
		mov	[esp+18h+var_18], offset dword_430400
		call	ds:CreateDirectoryA
		push	edx
		push	edx
		mov	[esp+18h+var_14], offset dword_430400
		mov	[esp+18h+var_18], offset dword_430000
		call	sub_407832
		push	ecx
		push	ecx

locret_4042C6:				; CODE XREF: sub_404264+26j
		leave
		retn
sub_404264	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4042C8	proc near		; CODE XREF: start:loc_40472Ap

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, dword_40A014
		cmp	eax, 0FFFFFFFFh
		jz	short loc_4042EC
		mov	[esp+18h+var_18], eax
		call	ds:CloseHandle
		mov	dword_40A014, 0FFFFFFFFh
		push	eax		; hObject

loc_4042EC:				; CODE XREF: sub_4042C8+Ej
		mov	eax, dword_40A010
		cmp	eax, 0FFFFFFFFh
		jz	short loc_40430A
		mov	[esp+18h+var_18], eax
		call	ds:CloseHandle
		mov	dword_40A010, 0FFFFFFFFh
		push	eax

loc_40430A:				; CODE XREF: sub_4042C8+2Cj
		call	sub_4048CC
		mov	[esp+18h+var_14], 7
		mov	[esp+18h+var_18], offset dword_430800
		call	sub_4081E7
		push	ecx
		push	ecx
		leave
		retn
sub_4042C8	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn bp-based	frame

		public start
start		proc near

var_1B8		= dword	ptr -1B8h
var_1B4		= dword	ptr -1B4h
var_1B0		= dword	ptr -1B0h
var_1AC		= dword	ptr -1ACh
var_1A8		= dword	ptr -1A8h
var_1A4		= dword	ptr -1A4h
var_1A0		= dword	ptr -1A0h
var_19C		= dword	ptr -19Ch
var_198		= dword	ptr -198h
var_194		= dword	ptr -194h
var_190		= dword	ptr -190h
var_18C		= dword	ptr -18Ch
var_17C		= dword	ptr -17Ch
var_178		= byte ptr -178h
var_170		= dword	ptr -170h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1ACh
		call	ds:InitCommonControls
		mov	[esp+1B8h+var_1B8], 8001h
		call	ds:SetErrorMode
		push	ebx		; pvReserved
		mov	[esp+1B8h+var_1B8], 0
		call	ds:OleInitialize
		push	esi
		mov	ds:dword_426B40, eax
		mov	[esp+1B8h+var_1B8], 8
		call	sub_407EF3
		mov	ds:dword_426B9C, eax
		lea	eax, [ebp+var_17C]
		push	edi		; pszPath
		mov	[esp+1B8h+var_1A8], 0
		mov	[esp+1B8h+var_1AC], 160h
		mov	[esp+1B8h+var_1B0], eax
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], offset byte_40B301
		call	ds:SHGetFileInfoA
		sub	esp, 14h
		mov	[esp+1B8h+var_1B4], offset aNsisError ;	"NSIS Error"
		mov	[esp+1B8h+var_1B8], offset dword_426BA8
		call	sub_407A11
		push	eax
		push	eax
		call	ds:GetCommandLineA
		mov	[esp+1B8h+var_1B8], offset byte_42F000
		mov	[esp+1B8h+var_1B4], eax
		call	sub_407A11
		push	eax
		push	eax		; lpModuleName
		mov	[esp+1B8h+var_1B8], 0
		call	ds:GetModuleHandleA
		cmp	ds:byte_42F000,	22h
		push	edx
		mov	edx, offset byte_42F001
		mov	ds:dword_426BA4, eax
		mov	eax, offset byte_42F000
		cmovz	eax, edx
		setz	dl
		lea	edx, [edx+edx+20h]
		movsx	edx, dl
		mov	[esp+1B8h+var_1B4], edx
		mov	[esp+1B8h+var_1B8], eax
		call	sub_4075F0
		push	ecx
		push	ecx		; lpsz
		mov	[esp+1B8h+var_1B8], eax
		call	ds:CharNextA
		mov	edi, eax
		push	ebx
		xor	ebx, ebx
		jmp	loc_4044AB
; ---------------------------------------------------------------------------

loc_40441E:				; CODE XREF: start+FDj
		inc	eax

loc_40441F:				; CODE XREF: start+187j
		mov	dl, [eax]
		cmp	dl, 20h
		jz	short loc_40441E
		cmp	dl, 22h
		mov	cl, 20h
		jnz	short loc_404430
		inc	eax
		mov	cl, 22h

loc_404430:				; CODE XREF: start+104j
		cmp	byte ptr [eax],	2Fh
		jnz	short loc_404490
		cmp	byte ptr [eax+1], 53h
		jnz	short loc_40444C
		mov	dl, [eax+2]
		mov	esi, ebx
		or	esi, 2
		or	edx, 20h
		cmp	dl, 20h
		cmovz	ebx, esi

loc_40444C:				; CODE XREF: start+112j
		cmp	dword ptr [eax+1], 4352434Eh
		jnz	short loc_404466
		mov	dl, [eax+5]
		mov	esi, ebx
		or	esi, 4
		or	edx, 20h
		cmp	dl, 20h
		cmovz	ebx, esi

loc_404466:				; CODE XREF: start+12Cj
		cmp	dword ptr [eax-1], 3D442F20h
		jz	short loc_404472
		inc	eax
		jmp	short loc_404490
; ---------------------------------------------------------------------------

loc_404472:				; CODE XREF: start+146j
		mov	dword ptr [eax-1], 0
		add	eax, 3
		mov	[esp+1B8h+var_1B4], eax
		mov	[esp+1B8h+var_1B8], offset byte_42F400
		call	sub_407A11
		push	ecx
		push	ecx
		jmp	short loc_4044B4
; ---------------------------------------------------------------------------

loc_404490:				; CODE XREF: start+10Cj start+149j
		movsx	ecx, cl
		mov	[esp+1B8h+var_1B4], ecx
		mov	[esp+1B8h+var_1B8], eax
		call	sub_4075F0
		push	edx		; lpBuffer
		push	edx		; nBufferLength
		xor	edx, edx
		cmp	byte ptr [eax],	22h
		setz	dl
		add	eax, edx

loc_4044AB:				; CODE XREF: start+F2j
		cmp	byte ptr [eax],	0
		jnz	loc_40441F

loc_4044B4:				; CODE XREF: start+167j
		mov	[esp+1B8h+var_1B4], offset dword_430400
		mov	[esp+1B8h+var_1B8], 400h
		call	ds:GetTempPathA
		push	eax		; uSize
		push	eax		; lpBuffer
		call	sub_404264
		test	eax, eax
		jnz	short loc_40450E
		mov	[esp+1B8h+var_1B4], 3FBh
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	ds:GetWindowsDirectoryA
		push	esi
		push	esi
		mov	[esp+1B8h+var_1B4], offset aTemp ; "\\Temp"
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	sub_407A44
		push	eax
		push	eax		; lpFileName
		call	sub_404264
		test	eax, eax
		jz	loc_40471C

loc_40450E:				; CODE XREF: start+1ABj
		mov	[esp+1B8h+var_1B8], offset dword_430000
		call	ds:DeleteFileA
		push	ecx
		mov	[esp+1B8h+var_1B8], ebx
		call	sub_403EA7
		push	ebx
		xor	ebx, ebx
		test	eax, eax
		mov	esi, eax
		jnz	loc_40472A
		cmp	ds:dword_426B94, 0
		jz	loc_404709
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], offset byte_42F000
		call	sub_4075F0
		push	edx
		push	edx
		jmp	short loc_404557
; ---------------------------------------------------------------------------

loc_404556:				; CODE XREF: start+23Dj
		dec	eax

loc_404557:				; CODE XREF: start+22Dj
		cmp	eax, offset byte_42F000
		jb	short loc_40456B
		cmp	dword ptr [eax], 3D3F5F20h
		jnz	short loc_404556
		jmp	loc_404886
; ---------------------------------------------------------------------------

loc_40456B:				; CODE XREF: start+235j
		mov	[esp+1B8h+var_1B4], offset aNsu_tmp ; "~nsu.tmp"
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	sub_407A44
		push	ecx		; lpString2
		push	ecx		; lpString1
		mov	[esp+1B8h+var_1B4], offset dword_42FC00
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	ds:lstrcmpiA
		test	eax, eax
		push	ebx
		push	ebx
		jz	loc_404723
		jmp	short loc_4045CB
; ---------------------------------------------------------------------------

loc_4045A2:				; CODE XREF: start+576j
		mov	[esp+1B8h+var_1B4], ebx
		mov	[esp+1B8h+var_1B8], offset byte_42F400
		call	sub_407A11
		push	eax
		push	eax
		mov	[esp+1B8h+var_1B4], ebx
		mov	[esp+1B8h+var_1B8], offset dword_42F800
		call	sub_407A11
		push	edx		; lpSecurityAttributes
		push	edx		; lpPathName
		jmp	loc_404709
; ---------------------------------------------------------------------------

loc_4045CB:				; CODE XREF: start+279j
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	ds:CreateDirectoryA
		push	eax
		push	eax		; lpPathName
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	ds:SetCurrentDirectoryA
		cmp	ds:byte_42F400,	0
		push	eax
		jnz	short loc_40460F
		mov	[esp+1B8h+var_1B4], offset dword_42FC00
		mov	[esp+1B8h+var_1B8], offset byte_42F400
		call	sub_407A11
		push	eax
		push	eax

loc_40460F:				; CODE XREF: start+2D0j
		mov	[esp+1B8h+var_1B4], edi
		mov	ebx, 1Ah
		mov	esi, offset aErrorLaunchi_0 ; "Error launching installer"
		mov	[esp+1B8h+var_1B8], offset dword_42A000
		call	sub_407A11
		mov	edi, ds:CopyFileA
		mov	ds:word_42A400,	41h
		push	eax
		push	eax
		mov	eax, ds:DeleteFileA
		mov	[ebp+var_18C], eax

loc_404645:				; CODE XREF: start+3C4j
		mov	eax, ds:hInstance
		mov	eax, [eax+120h]
		mov	[esp+1B8h+var_1B8], offset dword_422CE8
		mov	[esp+1B8h+var_1B4], eax
		call	sub_407B23
		push	ecx		; lpNewFileName
		push	ecx
		mov	[esp+1B8h+var_1B8], offset dword_422CE8
		call	[ebp+var_18C]
		test	esi, esi
		push	eax		; lpExistingFileName
		jz	short loc_4046E4
		mov	[esp+1B8h+var_1B0], 1
		mov	[esp+1B8h+var_1B4], offset dword_422CE8
		mov	[esp+1B8h+var_1B8], offset dword_430C00
		call	edi ; CopyFileA
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_4046E4
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], offset dword_422CE8
		call	sub_407F46
		push	eax
		push	eax
		mov	eax, ds:hInstance
		mov	eax, [eax+124h]
		mov	[esp+1B8h+var_1B8], offset dword_422CE8
		mov	[esp+1B8h+var_1B4], eax
		call	sub_407B23
		push	eax		; int
		push	eax
		mov	[esp+1B8h+var_1B8], offset dword_422CE8
		call	sub_407478
		test	eax, eax
		push	edx		; hObject
		jz	short loc_4046E4
		mov	[esp+1B8h+var_1B8], eax
		xor	esi, esi
		call	ds:CloseHandle
		push	eax		; lpBuffer

loc_4046E4:				; CODE XREF: start+34Bj start+36Bj ...
		inc	byte ptr ds:word_42A400
		dec	ebx
		jnz	loc_404645
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], offset dword_430400
		call	sub_407F46
		push	edi
		push	edi
		jmp	short loc_404728
; ---------------------------------------------------------------------------

loc_404709:				; CODE XREF: start+211j start+29Fj
		mov	ds:dword_426B34, 0FFFFFFFFh
		call	sub_405E99
		mov	ebx, eax
		jmp	short loc_40472A
; ---------------------------------------------------------------------------

loc_40471C:				; CODE XREF: start+1E1j
		mov	esi, offset aErrorWriting_0 ; "Error writing temporary file. Make sure"...
		jmp	short loc_404728
; ---------------------------------------------------------------------------

loc_404723:				; CODE XREF: start+273j start+570j
		mov	esi, offset aErrorLaunchi_0 ; "Error launching installer"

loc_404728:				; CODE XREF: start+3E0j start+3FAj
		xor	ebx, ebx

loc_40472A:				; CODE XREF: start+204j start+3F3j
		call	sub_4042C8
		call	ds:OleUninitialize
		test	esi, esi
		jz	short loc_404757
		mov	[esp+1B8h+var_1B4], 200010h
		mov	[esp+1B8h+var_1B8], esi
		call	sub_407536
		push	ebx
		push	ebx
		mov	[esp+1B8h+var_1B8], 2
		jmp	loc_404880
; ---------------------------------------------------------------------------

loc_404757:				; CODE XREF: start+410j
		cmp	ds:dword_426B1C, 0
		jz	loc_404872
		mov	[esp+1B8h+var_1B8], 3
		call	sub_407EF3
		push	edi
		mov	[ebp+var_190], eax
		mov	[esp+1B8h+var_1B8], 4
		call	sub_407EF3
		push	edx
		mov	edi, eax
		mov	[esp+1B8h+var_1B8], 5
		call	sub_407EF3
		test	edi, edi
		mov	esi, eax
		push	ecx
		jz	loc_40484A
		cmp	[ebp+var_190], 0
		jz	loc_40484A
		test	eax, eax
		jz	loc_40484A
		call	ds:GetCurrentProcess
		lea	edx, [ebp+var_1C]
		mov	[esp+1B8h+var_1B0], edx
		mov	[esp+1B8h+var_1B4], 28h
		mov	[esp+1B8h+var_1B8], eax
		call	[ebp+var_190]
		sub	esp, 0Ch
		test	eax, eax
		jz	short loc_40484A
		lea	edx, [ebp+var_17C]
		lea	eax, [ebp+var_178]
		mov	[ebp+var_194], edx
		mov	[esp+1B8h+var_1B0], eax
		mov	[esp+1B8h+var_1B4], offset aSeshutdownpriv ; "SeShutdownPrivilege"
		mov	[esp+1B8h+var_1B8], 0
		call	edi
		mov	edx, [ebp+var_194]
		mov	eax, [ebp+var_1C]
		mov	[ebp+var_17C], 1
		mov	[ebp+var_170], 2
		sub	esp, 0Ch
		mov	[esp+1ACh+var_198], 0
		mov	[esp+1ACh+var_19C], 0
		mov	[esp+1ACh+var_1A0], 0
		mov	[esp+1ACh+var_1A4], edx
		mov	[esp+1ACh+var_1A8], 0
		mov	[esp+1ACh+var_1AC], eax
		call	esi
		sub	esp, 18h

loc_40484A:				; CODE XREF: start+470j start+47Dj ...
		mov	[esp+1B8h+var_1B4], 0
		mov	[esp+1B8h+var_1B8], 2
		call	ds:ExitWindowsEx
		test	eax, eax
		push	esi
		push	esi
		jnz	short loc_404872
		mov	[esp+1B8h+var_1B8], 9
		call	sub_4038A0
		push	ecx		; uExitCode

loc_404872:				; CODE XREF: start+437j start+53Cj
		mov	eax, ds:dword_426B34
		cmp	eax, 0FFFFFFFFh
		cmovnz	ebx, eax
		mov	[esp+1B8h+var_1B8], ebx

loc_404880:				; CODE XREF: start+42Bj
		call	ds:ExitProcess
; ---------------------------------------------------------------------------

loc_404886:				; CODE XREF: start+23Fj
		mov	byte ptr [eax],	0
		lea	ebx, [eax+4]
		mov	[esp+1B8h+var_1B8], ebx
		call	sub_407E3C
		test	eax, eax
		push	edx
		jz	loc_404723
		jmp	loc_4045A2
start		endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4048A4	proc near		; CODE XREF: sub_4048CC+16p
					; sub_405E99+411p

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	esi, [ebp+arg_0]
		mov	ebx, ds:dword_4230E8
		jmp	short loc_4048BF
; ---------------------------------------------------------------------------

loc_4048B7:				; CODE XREF: sub_4048A4+1Dj
		mov	[esp+18h+var_18], esi
		call	dword ptr [ebx+4]
		mov	ebx, [ebx]

loc_4048BF:				; CODE XREF: sub_4048A4+11j
		test	ebx, ebx
		jnz	short loc_4048B7
		add	esp, 10h
		pop	ebx
		pop	esi
		pop	ebp
		retn	4
sub_4048A4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4048CC	proc near		; CODE XREF: sub_4042C8:loc_40430Ap

var_38		= dword	ptr -38h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, ds:dword_4230E8
		mov	[esp+38h+var_38], 0
		call	sub_4048A4
		mov	edi, ds:FreeLibrary
		mov	esi, ds:GlobalFree
		push	ecx		; hLibModule
		jmp	short loc_40490D
; ---------------------------------------------------------------------------

loc_4048F6:				; CODE XREF: sub_4048CC+43j
		mov	eax, [ebx]
		mov	[ebp+var_1C], eax
		mov	eax, [ebx+8]
		mov	[esp+38h+var_38], eax
		call	edi ; FreeLibrary
		push	eax		; hMem
		mov	[esp+38h+var_38], ebx
		call	esi ; GlobalFree
		mov	ebx, [ebp+var_1C]
		push	edx

loc_40490D:				; CODE XREF: sub_4048CC+28j
		test	ebx, ebx
		jnz	short loc_4048F6
		mov	ds:dword_4230E8, 0
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_4048CC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404923	proc near		; CODE XREF: sub_40164F+126Fp
					; sub_404945+Dp

arg_0		= dword	ptr  8

		push	ebp
		mov	eax, ds:dword_4230E8
		mov	ebp, esp
		mov	edx, [ebp+arg_0]
		jmp	short loc_404937
; ---------------------------------------------------------------------------

loc_404930:				; CODE XREF: sub_404923+16j
		cmp	[eax+8], edx
		jz	short loc_40493F
		mov	eax, [eax]

loc_404937:				; CODE XREF: sub_404923+Bj
		test	eax, eax
		jnz	short loc_404930
		mov	al, 1
		jmp	short loc_404941
; ---------------------------------------------------------------------------

loc_40493F:				; CODE XREF: sub_404923+10j
		xor	eax, eax

loc_404941:				; CODE XREF: sub_404923+1Aj
		pop	ebp
		retn	4
sub_404923	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404945	proc near		; DATA XREF: .data:0040A00Co

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	sub_404923
		test	eax, eax
		push	ecx		; uFlags
		mov	ecx, 1
		jz	short loc_404999
		mov	[esp+18h+var_14], 0Ch
		mov	[esp+18h+var_18], 40h
		call	ds:GlobalAlloc
		or	ecx, 0FFFFFFFFh
		push	edx
		test	eax, eax
		push	edx
		mov	edx, eax
		jz	short loc_404999
		mov	eax, [ebp+arg_4]
		xor	ecx, ecx
		mov	[edx+8], ebx
		mov	[edx+4], eax
		mov	eax, ds:dword_4230E8
		mov	ds:dword_4230E8, edx
		mov	[edx], eax

loc_404999:				; CODE XREF: sub_404945+1Aj
					; sub_404945+3Aj
		mov	eax, ecx
		mov	ebx, [ebp+var_4]
		leave
		retn	8
sub_404945	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4049A4	proc near		; CODE XREF: sub_4056A9+366p
					; sub_4063B0+893p ...
		push	ebp
		mov	ecx, ds:dword_426B58
		mov	ebp, esp
		mov	edx, ds:dword_426B54
		push	ebx
		lea	ebx, ds:0[eax*4]
		xor	eax, eax
		jmp	short loc_4049CE
; ---------------------------------------------------------------------------

loc_4049BF:				; CODE XREF: sub_4049A4+2Ej
		test	byte ptr [edx+8], 1
		jz	short loc_4049C8
		add	eax, [edx+ebx]

loc_4049C8:				; CODE XREF: sub_4049A4+1Fj
		add	edx, 418h

loc_4049CE:				; CODE XREF: sub_4049A4+19j
		dec	ecx
		cmp	ecx, 0FFFFFFFFh
		jnz	short loc_4049BF
		pop	ebx
		pop	ebp
		retn
sub_4049A4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4049D7	proc near		; CODE XREF: sub_4056A9+413p
					; sub_405AE3+219p

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, ds:dword_424124
		cmp	ds:dword_426B14, 0
		cmovz	eax, ds:dword_424120
		mov	[esp+18h+var_C], 1
		mov	[esp+18h+var_10], 1
		mov	[esp+18h+var_14], 0F4h
		mov	[esp+18h+var_18], eax
		call	ds:SendMessageA
		sub	esp, 10h
		leave
		retn
sub_4049D7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404A16	proc near		; CODE XREF: sub_404F6A:loc_405273p
					; sub_4056A9+CFp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_426BA0
		mov	[esp+18h+var_C], 1
		mov	[esp+18h+var_14], 28h
		mov	[esp+18h+var_18], eax
		call	ds:SendMessageA
		sub	esp, 10h
		leave
		retn
sub_404A16	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404A43	proc near		; CODE XREF: sub_404B4E+38p
					; sub_404B4E+72p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	edx, ds:dword_4273C0
		test	edx, edx
		jz	short locret_404A73
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], edx
		call	ds:SendMessageA
		sub	esp, 10h

locret_404A73:				; CODE XREF: sub_404A43+Ej
		leave
		retn
sub_404A43	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404A75	proc near		; CODE XREF: sub_404F6A:loc_4055B2p
					; sub_406EF2:loc_40728Ep

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	eax, 78h
		jnz	short loc_404A86
		inc	ds:dword_4273A8

loc_404A86:				; CODE XREF: sub_404A75+9j
		mov	[esp+18h+var_10], eax
		mov	eax, ds:dword_426BA0
		mov	[esp+18h+var_C], 0
		mov	[esp+18h+var_14], 408h
		mov	[esp+18h+var_18], eax
		call	ds:SendMessageA
		sub	esp, 10h
		leave
		retn
sub_404A75	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404AAD	proc near		; DATA XREF: sub_405AE3+54o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	edx, [ebp+arg_8]
		mov	ebx, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		add	eax, ds:dword_424944
		mov	[esp+18h+var_10], edx
		mov	[esp+18h+var_18], ebx
		mov	[esp+18h+var_14], eax
		call	ds:lstrcpynA
		sub	esp, 0Ch
		mov	[esp+18h+var_18], ebx
		call	sub_407A39
		add	ds:dword_424944, eax
		push	edx
		mov	edx, [ebp+arg_C]
		mov	[edx], eax
		xor	eax, eax
		mov	ebx, [ebp+var_4]
		leave
		retn	10h
sub_404AAD	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404AF4	proc near		; CODE XREF: sub_404F6A+253p
					; sub_4056A9+401p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_424120
		mov	[esp+18h+var_18], eax
		call	ds:EnableWindow
		push	ecx
		push	ecx
		leave
		retn
sub_404AF4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404B10	proc near		; CODE XREF: sub_404F6A+72p
					; sub_404F6A+1CBp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h

		push	ebp
		mov	ebp, esp
		push	esi
		mov	esi, edx
		push	ebx
		mov	ebx, eax
		sub	esp, 10h
		add	esi, 3E8h
		mov	[esp+18h+var_14], ecx
		mov	[esp+18h+var_18], 0
		call	sub_407B23
		push	edx
		push	edx
		mov	[esp+18h+var_14], esi
		mov	[esp+18h+var_18], ebx
		mov	[esp+18h+var_10], eax
		call	sub_4074FA
		sub	esp, 0Ch
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_404B10	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404B4E	proc near		; CODE XREF: sub_405E99+41Fp
					; DATA XREF: sub_406EF2+2BFo

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, ds:dword_426B40
		mov	edi, [ebp+arg_0]
		mov	esi, ds:dword_426B58
		mov	ebx, ds:dword_426B54
		mov	[ebp+var_1C], eax
		mov	[esp+38h+var_38], 0
		call	ds:OleInitialize
		or	eax, [ebp+var_1C]
		push	edx
		mov	ds:dword_426B40, eax
		xor	eax, eax
		call	sub_404A43
		jmp	short loc_404BB7
; ---------------------------------------------------------------------------

loc_404B8D:				; CODE XREF: sub_404B4E+6Bj
		test	byte ptr [ebx+8], 1
		jz	short loc_404BB0
		mov	[esp+38h+var_34], edi
		mov	eax, [ebx+0Ch]
		mov	[esp+38h+var_38], eax
		call	sub_4037F0
		test	eax, eax
		push	ecx
		push	ecx
		jz	short loc_404BB0
		inc	ds:dword_426B14
		jmp	short loc_404BBB
; ---------------------------------------------------------------------------

loc_404BB0:				; CODE XREF: sub_404B4E+43j
					; sub_404B4E+58j
		add	ebx, 418h
		dec	esi

loc_404BB7:				; CODE XREF: sub_404B4E+3Dj
		test	esi, esi
		jnz	short loc_404B8D

loc_404BBB:				; CODE XREF: sub_404B4E+60j
		mov	eax, 404h
		call	sub_404A43
		call	ds:OleUninitialize
		mov	eax, ds:dword_426B14
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_404B4E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404BDA	proc near		; CODE XREF: sub_4056A9+39Ap
					; sub_4056A9+3B0p ...

var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= byte ptr -58h
var_38		= byte ptr -38h

		push	ebp
		mov	ebp, esp
		push	edi
		mov	edi, ecx
		push	esi
		push	ebx
		sub	esp, 7Ch
		cmp	ecx, 0FFFFFh
		mov	[ebp+var_64], eax
		mov	[ebp+var_5C], edx
		ja	short loc_404C0F
		cmp	ecx, 400h
		sbb	ebx, ebx
		not	ebx
		sub	ebx, 22h
		cmp	ecx, 400h
		sbb	esi, esi
		not	esi
		and	esi, 0Ah
		jmp	short loc_404C21
; ---------------------------------------------------------------------------

loc_404C0F:				; CODE XREF: sub_404BDA+17j
		cmp	ecx, 0FFFF3332h
		mov	ebx, 0FFFFFFDCh
		mov	esi, 14h
		ja	short loc_404C34

loc_404C21:				; CODE XREF: sub_404BDA+33j
		mov	ecx, esi
		mov	eax, 1
		shl	eax, cl
		mov	ecx, 14h
		cdq
		idiv	ecx
		add	edi, eax

loc_404C34:				; CODE XREF: sub_404BDA+45j
		mov	eax, [ebp+var_5C]
		mov	[esp+88h+var_88], offset byte_4230F0
		mov	[esp+88h+var_84], eax
		call	sub_407B23
		lea	eax, [ebp+var_38]
		push	ecx
		push	ecx
		mov	[esp+88h+var_84], 0FFFFFFDFh
		mov	[esp+88h+var_88], eax
		call	sub_407B23
		push	edx
		push	edx
		mov	[ebp+var_5C], eax
		lea	eax, [ebp+var_58]
		mov	[esp+88h+var_84], ebx
		mov	[esp+88h+var_88], eax
		call	sub_407B23
		push	ecx
		mov	edx, eax
		push	ecx
		mov	eax, edi
		mov	ecx, esi
		and	edi, 0FFFFFFh
		shr	eax, cl
		mov	[ebp+var_68], edx
		mov	[ebp+var_60], eax
		mov	[esp+88h+var_88], offset byte_4230F0
		call	sub_407A39
		mov	edx, [ebp+var_68]
		mov	ecx, esi
		push	ebx		; LPSTR
		mov	ebx, eax
		mov	eax, [ebp+var_5C]
		add	ebx, offset byte_4230F0
		mov	[esp+80h+var_70], edx
		xor	edx, edx
		mov	[esp+80h+var_80], ebx
		mov	[esp+80h+var_6C], eax
		imul	eax, edi, 0Ah
		mov	[esp+80h+var_7C], offset aU_USS	; "%u.%u%s%s"
		shr	eax, cl
		mov	ecx, 0Ah
		div	ecx
		mov	eax, [ebp+var_60]
		mov	[esp+80h+var_78], eax
		mov	[esp+80h+var_74], edx
		call	ds:wsprintfA
		mov	eax, [ebp+var_64]
		mov	[esp+80h+var_78], offset byte_4230F0
		mov	[esp+80h+var_7C], eax
		mov	eax, ds:dword_4273C0
		mov	[esp+80h+var_80], eax
		call	sub_4074FA
		sub	esp, 0Ch
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_404BDA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404CFC	proc near		; CODE XREF: sub_405E99+C0p
					; sub_405E99+321p

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	[esp+38h+var_38], offset dword_430000
		call	sub_407972
		mov	edx, ds:dword_426B70
		mov	esi, ds:hInstance
		mov	[ebp+var_1C], edx
		mov	edx, ds:dword_426B6C
		push	ebx
		or	ebx, 0FFFFFFFFh
		mov	[ebp+var_20], edx

loc_404D2D:				; CODE XREF: sub_404CFC+79j
		mov	ecx, [ebp+var_1C]
		jmp	short loc_404D60
; ---------------------------------------------------------------------------

loc_404D32:				; CODE XREF: sub_404CFC+68j
		mov	edx, [esi+64h]
		mov	edi, eax
		imul	edx, ecx
		add	edx, [ebp+var_20]
		xor	di, [edx]
		test	di, bx
		jnz	short loc_404D60
		mov	ecx, [edx+2]
		mov	ds:dword_4273C4, ecx
		mov	ecx, [edx+6]
		mov	ds:dword_426B30, ecx
		mov	ecx, edx
		add	ecx, 0Ah
		jz	short loc_404D66
		jmp	short loc_404D77
; ---------------------------------------------------------------------------

loc_404D60:				; CODE XREF: sub_404CFC+34j
					; sub_404CFC+47j
		dec	ecx
		cmp	ecx, 0FFFFFFFFh
		jnz	short loc_404D32

loc_404D66:				; CODE XREF: sub_404CFC+60j
		inc	bx
		mov	edx, 3FFh
		mov	ebx, 0
		cmovz	ebx, edx
		jmp	short loc_404D2D
; ---------------------------------------------------------------------------

loc_404D77:				; CODE XREF: sub_404CFC+62j
		mov	ds:dword_4273CC, ecx
		movzx	eax, word ptr [edx]
		mov	[esp+38h+var_38], offset dword_430000
		mov	[esp+38h+var_34], eax
		call	sub_40794D
		push	eax
		push	eax
		mov	[esp+38h+var_34], 0FFFFFFFEh
		mov	[esp+38h+var_38], offset dword_426BA8
		call	sub_407B23
		push	edx		; lpString
		push	edx		; hWnd
		mov	[esp+38h+var_34], eax
		mov	eax, ds:dword_424118
		mov	[esp+38h+var_38], eax
		call	ds:SetWindowTextA
		mov	ebx, ds:dword_426B54
		mov	esi, ds:dword_426B58
		push	ecx
		push	ecx
		jmp	short loc_404DE8
; ---------------------------------------------------------------------------

loc_404DCA:				; CODE XREF: sub_404CFC+EEj
		mov	eax, [ebx]
		test	eax, eax
		jz	short loc_404DE1
		mov	[esp+38h+var_34], eax
		lea	eax, [ebx+18h]
		mov	[esp+38h+var_38], eax
		call	sub_407B23
		push	edi
		push	edi

loc_404DE1:				; CODE XREF: sub_404CFC+D2j
		add	ebx, 418h
		dec	esi

loc_404DE8:				; CODE XREF: sub_404CFC+CCj
		test	esi, esi
		jnz	short loc_404DCA
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_404CFC	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404DF4	proc near		; DATA XREF: sub_4056A9+156o

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	eax, [ebp+arg_4]
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_C]
		cmp	eax, 1
		jnz	short loc_404E32
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], 3FBh
		call	sub_407505
		push	eax		; pszPath
		push	eax		; pidl
		mov	[esp+18h+var_C], ebx
		mov	[esp+18h+var_10], 1
		mov	[esp+18h+var_14], 466h
		jmp	short loc_404E77
; ---------------------------------------------------------------------------

loc_404E32:				; CODE XREF: sub_404DF4+14j
		cmp	eax, 2
		jnz	short loc_404E83
		mov	eax, [ebp+arg_8]
		mov	[esp+18h+var_14], ebx
		mov	[esp+18h+var_18], eax
		call	ds:SHGetPathFromIDListA
		xor	edx, edx
		push	ecx		; Msg
		test	eax, eax
		push	ecx
		jz	short loc_404E63
		mov	[esp+18h+var_18], 7
		call	sub_4038A0
		push	edx		; hWnd
		xor	edx, edx
		test	eax, eax
		setz	dl

loc_404E63:				; CODE XREF: sub_404DF4+59j
		mov	[esp+18h+var_C], edx
		mov	[esp+18h+var_10], 0
		mov	[esp+18h+var_14], 465h

loc_404E77:				; CODE XREF: sub_404DF4+3Cj
		mov	[esp+18h+var_18], esi
		call	ds:SendMessageA
		sub	esp, 10h

loc_404E83:				; CODE XREF: sub_404DF4+41j
		lea	esp, [ebp-8]
		xor	eax, eax
		pop	ebx
		pop	esi
		pop	ebp
		retn	10h
sub_404DF4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404E8E	proc near		; CODE XREF: sub_404F6A+6C7p
					; sub_405648+52p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h

		push	ebp
		sub	eax, 133h
		mov	ebp, esp
		push	edi
		xor	edi, edi
		push	esi
		push	ebx
		mov	ebx, edx
		sub	esp, 2Ch
		cmp	eax, 5
		ja	loc_404F60
		mov	[esp+38h+var_38], ecx
		mov	[esp+38h+var_34], 0FFFFFFEBh
		call	ds:GetWindowLongA
		test	eax, eax
		mov	esi, eax
		push	ecx		; color
		push	ecx		; nIndex
		jz	loc_404F60
		test	byte ptr [esi+14h], 2
		mov	eax, [eax]
		jz	short loc_404ED8
		mov	[esp+38h+var_38], eax
		call	ds:GetSysColor
		push	edx		; hdc

loc_404ED8:				; CODE XREF: sub_404E8E+3Ej
		test	byte ptr [esi+14h], 1
		jz	short loc_404EED
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], ebx
		call	ds:SetTextColor
		push	eax		; mode
		push	eax		; hdc

loc_404EED:				; CODE XREF: sub_404E8E+4Ej
		mov	eax, [esi+10h]
		mov	[esp+38h+var_38], ebx
		mov	[esp+38h+var_34], eax
		call	ds:SetBkMode
		push	eax		; color
		push	eax		; nIndex
		mov	eax, [esi+4]
		test	byte ptr [esi+14h], 8
		mov	[ebp+var_20], eax
		jz	short loc_404F18
		mov	[esp+38h+var_38], eax
		call	ds:GetSysColor
		mov	[ebp+var_20], eax
		push	edi		; hdc

loc_404F18:				; CODE XREF: sub_404E8E+7Bj
		test	byte ptr [esi+14h], 4
		jz	short loc_404F30
		mov	eax, [ebp+var_20]
		mov	[esp+38h+var_38], ebx
		mov	[esp+38h+var_34], eax
		call	ds:SetBkColor
		push	ebx
		push	ebx		; ho

loc_404F30:				; CODE XREF: sub_404E8E+8Ej
		test	byte ptr [esi+14h], 10h
		jz	short loc_404F5D
		mov	eax, [esi+8]
		mov	[ebp+var_24], eax
		mov	eax, [esi+0Ch]
		test	eax, eax
		jz	short loc_404F4D
		mov	[esp+38h+var_38], eax
		call	ds:DeleteObject
		push	ecx		; plbrush

loc_404F4D:				; CODE XREF: sub_404E8E+B3j
		lea	eax, [ebp+var_24]
		mov	[esp+38h+var_38], eax
		call	ds:CreateBrushIndirect
		push	edx
		mov	[esi+0Ch], eax

loc_404F5D:				; CODE XREF: sub_404E8E+A6j
		mov	edi, [esi+0Ch]

loc_404F60:				; CODE XREF: sub_404E8E+15j
					; sub_404E8E+32j
		lea	esp, [ebp-0Ch]
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_404E8E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_404F6A	proc near		; DATA XREF: sub_405E99+3D0o

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
hWnd		= HWND__ ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, [ebp+arg_0]
		cmp	[ebp+arg_4], 110h
		mov	ebx, [ebp+arg_8]
		setz	al
		cmp	[ebp+arg_4], 408h
		jz	short loc_404F94
		test	al, al
		jz	loc_405474

loc_404F94:				; CODE XREF: sub_404F6A+20j
		test	al, al
		mov	ds:dword_42411C, ebx
		jz	short loc_40501A
		mov	ebx, ds:GetDlgItem
		mov	ds:dword_426BA0, esi
		mov	[esp+58h+var_54], 1
		mov	[esp+58h+var_58], esi
		call	ebx ; GetDlgItem
		push	ecx		; nIDDlgItem
		push	ecx		; hDlg
		mov	ds:dword_424120, eax
		mov	[esp+58h+var_54], 2
		mov	[esp+58h+var_58], esi
		call	ebx ; GetDlgItem
		or	ecx, 0FFFFFFFFh
		mov	edx, 1Ch
		push	ebx		; nIndex
		push	ebx		; hWnd
		mov	ds:dword_424124, eax
		mov	eax, esi
		call	sub_404B10
		mov	eax, ds:dword_4273B8
		mov	[esp+58h+var_54], 0FFFFFFF2h
		mov	[esp+58h+var_58], esi
		mov	[esp+58h+var_50], eax
		call	ds:SetClassLongA
		sub	esp, 0Ch
		mov	[esp+58h+var_58], 4
		call	sub_4038A0
		mov	ds:dword_42411C, 1
		push	edi
		mov	ds:dword_4273A8, eax

loc_40501A:				; CODE XREF: sub_404F6A+32j
		mov	eax, dword_40A018
		mov	ebx, eax
		shl	ebx, 6
		add	ebx, ds:dword_426B4C
		test	eax, eax
		js	short loc_405095
		cmp	ds:dword_42411C, 1
		jnz	short loc_40508A
		mov	[esp+58h+var_54], 0
		mov	eax, [ebx+10h]
		mov	[esp+58h+var_58], eax
		call	sub_4037F0
		test	eax, eax
		push	edx		; Msg
		push	edx		; hWnd
		jz	short loc_40508A
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_4C], 1
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 40Fh
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		xor	eax, eax
		sub	esp, 10h
		cmp	ds:dword_4273A8, 0
		setz	al
		jmp	loc_405636
; ---------------------------------------------------------------------------

loc_40508A:				; CODE XREF: sub_404F6A+CBj
					; sub_404F6A+E4j
		xor	edi, edi
		cmp	dword ptr [ebx], 0
		jz	loc_40563C

loc_405095:				; CODE XREF: sub_404F6A+C2j
		mov	eax, 40Bh
		call	sub_404A43

loc_40509F:				; CODE XREF: sub_404F6A+371j
					; sub_404F6A+37Aj ...
		mov	eax, dword_40A018
		mov	edi, ds:dword_42411C
		add	eax, edi
		cmp	eax, ds:dword_426B50
		mov	dword_40A018, eax
		jnz	short loc_4050C6
		mov	[esp+58h+var_58], 1
		call	sub_4038A0
		push	eax		; hWnd

loc_4050C6:				; CODE XREF: sub_404F6A+14Dj
		cmp	ds:dword_4273A8, 0
		jnz	short loc_4050DC
		mov	eax, ds:dword_426B50
		cmp	dword_40A018, eax
		jb	short loc_40510E

loc_4050DC:				; CODE XREF: sub_404F6A+163j
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_58], eax
		call	ds:DestroyWindow
		mov	eax, ds:dword_424128
		mov	ds:dword_426BA0, 0
		push	ecx		; hDlg
		mov	[esp+58h+var_54], eax
		mov	[esp+58h+var_58], esi
		call	ds:EndDialog
		push	ebx
		push	ebx
		jmp	loc_405436
; ---------------------------------------------------------------------------

loc_40510E:				; CODE XREF: sub_404F6A+170j
		shl	edi, 6
		add	ebx, edi
		mov	eax, [ebx+24h]
		mov	edi, [ebx+14h]
		mov	[esp+58h+var_58], offset dword_431800
		mov	[esp+58h+var_54], eax
		call	sub_407B23
		mov	edx, 0FFFFFC19h
		push	eax
		push	eax
		mov	ecx, [ebx+20h]
		mov	eax, esi
		call	sub_404B10
		mov	ecx, [ebx+1Ch]
		mov	edx, 0FFFFFC1Bh
		mov	eax, esi
		call	sub_404B10
		mov	ecx, [ebx+28h]
		mov	edx, 0FFFFFC1Ah
		mov	eax, esi
		call	sub_404B10
		mov	[esp+58h+var_54], 3
		mov	[esp+58h+var_58], esi
		call	ds:GetDlgItem
		cmp	ds:dword_426B14, 0
		push	edx		; nCmdShow
		push	edx		; hWnd
		mov	[ebp+var_2C], eax
		jz	short loc_405180
		and	edi, 0FFFFFEFDh
		or	edi, 4

loc_405180:				; CODE XREF: sub_404F6A+20Bj
		mov	eax, edi
		and	eax, 8
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+var_58], eax
		call	ds:ShowWindow
		mov	edx, ds:EnableWindow
		mov	[ebp+var_34], edx
		push	eax		; bEnable
		push	eax		; hWnd
		mov	eax, edi
		and	eax, 100h
		mov	[esp+58h+var_54], eax
		mov	eax, [ebp+var_2C]
		mov	[esp+58h+var_58], eax
		call	edx ; EnableWindow
		push	eax
		push	eax
		mov	eax, edi
		and	eax, 2
		and	edi, 4
		call	sub_404AF4
		mov	eax, ds:dword_424124
		mov	edx, [ebp+var_34]
		mov	[esp+58h+var_54], edi
		mov	[esp+58h+var_58], eax
		call	edx
		test	edi, edi
		push	eax		; bRevert
		push	eax		; hWnd
		mov	eax, ds:GetSystemMenu
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], esi
		jz	short loc_4051F7
		call	eax ; GetSystemMenu
		push	edi		; bRevert
		push	edi		; hWnd
		mov	[esp+58h+var_50], 0
		jmp	short loc_405203
; ---------------------------------------------------------------------------

loc_4051F7:				; CODE XREF: sub_404F6A+27Dj
		call	eax ; GetSystemMenu
		push	ecx		; uIDEnableItem
		push	ecx		; hMenu
		mov	[esp+58h+var_50], 1

loc_405203:				; CODE XREF: sub_404F6A+28Bj
		mov	[esp+58h+var_54], 0F060h
		mov	[esp+58h+var_58], eax
		call	ds:EnableMenuItem
		mov	eax, [ebp+var_2C]
		mov	edi, ds:SendMessageA
		sub	esp, 0Ch
		mov	[esp+58h+var_4C], 1
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 0F4h
		mov	[esp+58h+var_58], eax
		call	edi ; SendMessageA
		mov	eax, ds:dword_424120
		sub	esp, 10h
		cmp	ds:dword_426B14, 0
		jz	short loc_405273
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 2
		mov	[esp+58h+var_54], 401h
		mov	[esp+58h+var_58], esi
		call	edi ; SendMessageA
		mov	eax, ds:dword_424124
		sub	esp, 10h

loc_405273:				; CODE XREF: sub_404F6A+2E2j
		call	sub_404A16
		mov	[esp+58h+var_54], offset dword_426BA8
		mov	[esp+58h+var_58], offset byte_4230F0
		call	sub_407A11
		push	eax
		push	eax
		mov	edi, [ebx+18h]
		mov	[esp+58h+var_58], offset byte_4230F0
		call	sub_407A39
		add	eax, offset byte_4230F0
		push	edx
		mov	[esp+58h+var_54], edi
		mov	[esp+58h+var_58], eax
		call	sub_407B23
		push	ecx		; lpString
		push	ecx		; hWnd
		mov	[esp+58h+var_54], offset byte_4230F0
		mov	[esp+58h+var_58], esi
		call	ds:SetWindowTextA
		push	edi
		push	edi
		mov	[esp+58h+var_54], 0
		mov	eax, [ebx+8]
		mov	[esp+58h+var_58], eax
		call	sub_4037F0
		test	eax, eax
		push	edx		; lpTemplateName
		push	edx		; hWnd
		jnz	loc_40509F
		cmp	dword ptr [ebx], 0
		jz	loc_40509F
		cmp	dword ptr [ebx+4], 5
		jz	short loc_405310
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_58], eax
		call	ds:DestroyWindow
		mov	ds:dword_42412C, ebx
		push	eax		; hInstance
		mov	eax, [ebx]
		test	eax, eax
		jg	short loc_40532F
		jmp	loc_405436
; ---------------------------------------------------------------------------

loc_405310:				; CODE XREF: sub_404F6A+384j
		cmp	ds:dword_426B14, 0
		jnz	loc_40563A
		cmp	ds:dword_426B08, 0
		jnz	loc_40509F
		jmp	loc_40563A
; ---------------------------------------------------------------------------

loc_40532F:				; CODE XREF: sub_404F6A+39Fj
		add	eax, ds:dword_4273C4
		mov	[esp+58h+var_48], ebx
		mov	edx, [ebx+4]
		mov	[esp+58h+var_50], esi
		movzx	eax, ax
		mov	[esp+58h+var_54], eax
		mov	eax, ds:dword_426BA4
		mov	edx, ds:off_40B3C8[edx*4]
		mov	[esp+58h+var_58], eax
		mov	[esp+58h+var_4C], edx
		call	ds:CreateDialogParamA
		sub	esp, 14h
		test	eax, eax
		mov	ds:dword_4273C0, eax
		jz	loc_405436
		mov	ecx, [ebx+2Ch]
		mov	edx, 6
		lea	edi, [ebp+hWnd]
		call	sub_404B10
		mov	[esp+58h+var_54], 3FAh
		mov	[esp+58h+var_58], esi
		call	ds:GetDlgItem
		push	edx		; lpRect
		push	edx		; hWnd
		mov	[esp+58h+var_54], edi
		mov	[esp+58h+var_58], eax
		call	ds:GetWindowRect
		push	ecx		; lpPoint
		push	ecx		; hWnd
		mov	[esp+58h+var_54], edi
		mov	[esp+58h+var_58], esi
		call	ds:ScreenToClient
		mov	eax, [ebp+var_24]
		push	edi		; hWndInsertAfter
		push	edi		; hWnd
		xor	edi, edi
		mov	[esp+58h+var_4C], eax
		mov	eax, [ebp+hWnd.unused]
		mov	[esp+58h+var_40], 15h
		mov	[esp+58h+var_44], 0
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_50], eax
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], eax
		call	ds:SetWindowPos
		sub	esp, 1Ch
		mov	[esp+58h+var_54], 0
		mov	eax, [ebx+0Ch]
		mov	[esp+58h+var_58], eax
		call	sub_4037F0
		cmp	ds:dword_4273A8, 0
		push	eax		; nCmdShow
		push	eax		; hWnd
		jnz	loc_40563C
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_54], 8
		mov	[esp+58h+var_58], eax
		call	ds:ShowWindow
		push	eax		; nCmdShow
		push	eax		; hWnd
		mov	eax, 405h
		call	sub_404A43

loc_405436:				; CODE XREF: sub_404F6A+19Fj
					; sub_404F6A+3A1j ...
		xor	edi, edi
		cmp	ds:dword_4230EC, 0
		jnz	loc_40563C
		cmp	ds:dword_4273C0, 0
		jz	loc_40563C
		mov	[esp+58h+var_54], 0Ah
		mov	[esp+58h+var_58], esi
		call	ds:ShowWindow
		mov	ds:dword_4230EC, 1
		push	eax		; hWndInsertAfter
		push	eax		; hWnd
		jmp	loc_40563C
; ---------------------------------------------------------------------------

loc_405474:				; CODE XREF: sub_404F6A+24j
		cmp	[ebp+arg_4], 47h
		jnz	short loc_4054BC
		mov	eax, ds:dword_424118
		mov	[esp+58h+var_40], 13h
		mov	[esp+58h+var_44], 0
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], esi
		mov	[esp+58h+var_58], eax
		call	ds:SetWindowPos
		sub	esp, 1Ch
		jmp	loc_405629
; ---------------------------------------------------------------------------

loc_4054BC:				; CODE XREF: sub_404F6A+50Ej
		cmp	[ebp+arg_4], 5
		jnz	short loc_4054E6
		xor	eax, eax
		cmp	ebx, 1
		setnz	al
		lea	eax, [eax+eax*4]
		mov	[esp+58h+var_54], eax
		mov	eax, ds:dword_424118
		mov	[esp+58h+var_58], eax
		call	ds:ShowWindow
		push	eax		; nIndex
		push	eax		; hWnd
		jmp	loc_405629
; ---------------------------------------------------------------------------

loc_4054E6:				; CODE XREF: sub_404F6A+556j
		cmp	[ebp+arg_4], 40Dh
		jnz	short loc_405509
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_58], eax
		call	ds:DestroyWindow
		mov	ds:dword_4273C0, ebx
		push	edi		; hWnd
		jmp	loc_405436
; ---------------------------------------------------------------------------

loc_405509:				; CODE XREF: sub_404F6A+583j
		cmp	[ebp+arg_4], 11h
		jnz	short loc_405535
		mov	[esp+58h+var_50], 0
		mov	edi, 1
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], esi
		call	ds:SetWindowLongA
		sub	esp, 0Ch
		jmp	loc_40563C
; ---------------------------------------------------------------------------

loc_405535:				; CODE XREF: sub_404F6A+5A3j
		cmp	[ebp+arg_4], 111h
		jnz	loc_405629
		movzx	eax, bx
		mov	[esp+58h+var_58], esi
		mov	[ebp+var_30], eax
		mov	[esp+58h+var_54], eax
		call	ds:GetDlgItem
		test	eax, eax
		mov	esi, eax
		push	ecx		; Msg
		push	ecx		; hWnd
		jz	short loc_405595
		mov	[esp+58h+var_4C], 0
		xor	edi, edi
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 0F3h
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		sub	esp, 10h
		mov	[esp+58h+var_58], esi
		call	ds:IsWindowEnabled
		test	eax, eax
		push	edx
		jz	loc_40563C

loc_405595:				; CODE XREF: sub_404F6A+5F1j
		cmp	[ebp+var_30], 1
		mov	eax, 1
		jz	short loc_4055B2
		cmp	[ebp+var_30], 3
		jnz	short loc_4055B9
		cmp	dword_40A018, 0
		jle	short loc_405605
		or	eax, 0FFFFFFFFh

loc_4055B2:				; CODE XREF: sub_404F6A+634j
					; sub_404F6A+67Aj ...
		call	sub_404A75
		jmp	short loc_405629
; ---------------------------------------------------------------------------

loc_4055B9:				; CODE XREF: sub_404F6A+63Aj
		cmp	[ebp+var_30], 2
		jnz	short loc_405605
		cmp	ds:dword_426B14, 0
		jz	short loc_4055E6
		mov	[esp+58h+var_58], 2
		call	sub_4038A0
		mov	eax, 78h
		mov	ds:dword_424128, 2
		push	edi
		jmp	short loc_4055B2
; ---------------------------------------------------------------------------

loc_4055E6:				; CODE XREF: sub_404F6A+65Cj
		mov	[esp+58h+var_58], 3
		call	sub_4038A0
		test	eax, eax
		push	esi		; hWnd
		jnz	short loc_405629
		mov	ds:dword_424128, 1
		mov	al, 78h
		jmp	short loc_4055B2
; ---------------------------------------------------------------------------

loc_405605:				; CODE XREF: sub_404F6A+643j
					; sub_404F6A+653j
		mov	eax, [ebp+arg_C]
		mov	[esp+58h+var_50], ebx
		mov	[esp+58h+var_54], 111h
		mov	[esp+58h+var_4C], eax
		mov	eax, ds:dword_4273C0
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		sub	esp, 10h

loc_405629:				; CODE XREF: sub_404F6A+54Dj
					; sub_404F6A+577j ...
		mov	ecx, [ebp+arg_C]
		mov	edx, ebx
		mov	eax, [ebp+arg_4]
		call	sub_404E8E

loc_405636:				; CODE XREF: sub_404F6A+11Bj
		mov	edi, eax
		jmp	short loc_40563C
; ---------------------------------------------------------------------------

loc_40563A:				; CODE XREF: sub_404F6A+3ADj
					; sub_404F6A+3C0j
		xor	edi, edi

loc_40563C:				; CODE XREF: sub_404F6A+125j
					; sub_404F6A+4A4j ...
		lea	esp, [ebp-0Ch]
		mov	eax, edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_404F6A	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_405648	proc near		; DATA XREF: .rdata:0040B3D8o

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	edi, [ebp+arg_4]
		mov	esi, [ebp+arg_0]
		mov	ebx, [ebp+arg_C]
		cmp	edi, 110h
		jnz	short loc_405693
		mov	ecx, [ebx+30h]
		mov	edx, 1Dh
		mov	eax, esi
		call	sub_404B10
		mov	eax, [ebx+3Ch]
		mov	[esp+28h+var_24], 3E8h
		mov	[esp+28h+var_28], esi
		shl	eax, 0Ah
		add	eax, offset dword_42A000
		mov	[esp+28h+var_20], eax
		call	sub_4074FA
		sub	esp, 0Ch

loc_405693:				; CODE XREF: sub_405648+18j
		mov	edx, [ebp+arg_8]
		mov	ecx, ebx
		mov	eax, edi
		call	sub_404E8E
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_405648	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4056A9	proc near		; DATA XREF: .rdata:0040B3D0o

var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_60		= dword	ptr -60h
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= byte ptr -38h
var_30		= byte ptr -30h
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	eax, ds:dword_42412C
		mov	esi, [ebp+arg_0]
		mov	ebx, [eax+3Ch]
		mov	[ebp+var_70], eax
		mov	edx, [eax+38h]
		shl	ebx, 0Ah
		add	ebx, offset dword_42A000
		cmp	[ebp+arg_4], 40Bh
		jnz	short loc_4056F8
		mov	[esp+98h+var_94], ebx
		mov	[esp+98h+var_98], 3FBh
		call	sub_407505
		push	ecx
		push	ecx
		mov	[esp+98h+var_98], ebx
		call	sub_407A4F
		push	edi
		jmp	loc_4058C9
; ---------------------------------------------------------------------------

loc_4056F8:				; CODE XREF: sub_4056A9+2Dj
		cmp	[ebp+arg_4], 110h
		jnz	loc_4057A6
		mov	[esp+98h+var_94], 3FBh
		mov	[esp+98h+var_98], esi
		call	ds:GetDlgItem
		push	ecx		; lpString
		mov	edi, eax
		push	ecx
		mov	[esp+98h+var_98], ebx
		call	sub_40765E
		test	eax, eax
		push	edx
		jz	short loc_40573D
		mov	[esp+98h+var_98], ebx
		call	sub_40768C
		test	eax, eax
		push	edx
		jnz	short loc_40573D
		mov	[esp+98h+var_98], ebx
		call	sub_4075AA
		push	ecx		; hWnd

loc_40573D:				; CODE XREF: sub_4056A9+7Cj
					; sub_4056A9+89j
		mov	ds:dword_4273C0, esi
		mov	[esp+98h+var_94], ebx
		mov	[esp+98h+var_98], edi
		call	ds:SetWindowTextA
		mov	edx, 1
		push	eax
		push	eax
		mov	eax, [ebp+arg_C]
		mov	ecx, [eax+34h]
		mov	eax, esi
		call	sub_404B10
		mov	eax, [ebp+arg_C]
		mov	edx, 14h
		mov	ecx, [eax+30h]
		mov	eax, esi
		call	sub_404B10
		mov	eax, edi
		call	sub_404A16
		mov	[esp+98h+var_98], 7
		call	sub_407EF3
		test	eax, eax
		push	edx
		jz	loc_4058C9
		mov	[esp+98h+var_98], edi
		mov	[esp+98h+var_94], 1
		call	eax
		push	edi
		push	edi
		jmp	loc_4058C9
; ---------------------------------------------------------------------------

loc_4057A6:				; CODE XREF: sub_4056A9+56j
		cmp	[ebp+arg_4], 111h
		jnz	loc_4058C9
		movzx	eax, word ptr [ebp+arg_8]
		cmp	eax, 3FBh
		jnz	short loc_4057D9
		mov	eax, [ebp+arg_8]
		shr	eax, 10h
		cmp	ax, 300h
		mov	eax, 40Fh
		cmovnz	eax, [ebp+arg_4]
		mov	[ebp+arg_4], eax
		jmp	loc_4058C9
; ---------------------------------------------------------------------------

loc_4057D9:				; CODE XREF: sub_4056A9+113j
		cmp	eax, 3E9h
		jnz	loc_4058C9
		xor	ax, ax
		mov	ecx, 8
		lea	edi, [ebp+var_60]
		rep stosd
		mov	[esp+98h+var_94], edx
		mov	[ebp+var_60], esi
		mov	[ebp+var_58], offset byte_4230F0
		mov	[ebp+var_4C], offset sub_404DF4
		mov	[ebp+var_48], ebx
		mov	[esp+98h+var_98], offset dword_424130
		call	sub_407B23
		mov	[ebp+var_50], 41h
		push	edx
		push	edx		; lpbi
		mov	[ebp+var_54], eax
		lea	eax, [ebp+var_60]
		mov	[esp+98h+var_98], eax
		call	ds:SHBrowseForFolderA
		test	eax, eax
		push	ecx		; pv
		jz	loc_4058C2
		mov	[esp+98h+var_98], eax
		call	ds:CoTaskMemFree
		push	ecx
		mov	[esp+98h+var_98], ebx
		call	sub_4075AA
		mov	eax, ds:hInstance
		push	edi
		mov	eax, [eax+11Ch]
		test	eax, eax
		jz	short loc_4058A3
		cmp	ebx, offset byte_42F400
		jnz	short loc_4058A3
		mov	[esp+98h+var_94], eax
		mov	[esp+98h+var_98], 0
		call	sub_407B23
		push	eax		; lpString2
		push	eax		; lpString1
		mov	[esp+98h+var_94], offset byte_4230F0
		mov	[esp+98h+var_98], offset byte_4273D0
		call	ds:lstrcmpiA
		test	eax, eax
		push	edx
		push	edx
		jz	short loc_4058A3
		mov	[esp+98h+var_94], offset byte_4273D0
		mov	[esp+98h+var_98], offset byte_42F400
		call	sub_407A44
		push	eax
		push	eax

loc_4058A3:				; CODE XREF: sub_4056A9+1ADj
					; sub_4056A9+1B5j ...
		inc	ds:dword_424530
		mov	[esp+98h+var_90], ebx
		mov	[esp+98h+var_94], 3FBh
		mov	[esp+98h+var_98], esi
		call	sub_4074FA
		sub	esp, 0Ch
		jmp	short loc_4058C9
; ---------------------------------------------------------------------------

loc_4058C2:				; CODE XREF: sub_4056A9+187j
		mov	[ebp+arg_4], 40Fh

loc_4058C9:				; CODE XREF: sub_4056A9+4Aj
					; sub_4056A9+E3j ...
		cmp	[ebp+arg_4], 405h
		jz	short loc_4058DF
		cmp	[ebp+arg_4], 40Fh
		jnz	loc_405ACB

loc_4058DF:				; CODE XREF: sub_4056A9+227j
		mov	[esp+98h+var_94], ebx
		mov	[esp+98h+var_98], 3FBh
		call	sub_407505
		push	edi
		push	edi
		mov	[esp+98h+var_98], ebx
		call	sub_407E3C
		push	edx
		mov	[ebp+var_78], eax
		mov	[esp+98h+var_94], ebx
		mov	[esp+98h+var_98], offset dword_424534
		call	sub_407A11
		push	ecx
		push	ecx
		mov	[esp+98h+var_98], 0
		call	sub_407EF3
		test	eax, eax
		push	edi
		mov	[ebp+var_74], eax
		jz	short loc_405989
		xor	edi, edi

loc_405925:				; CODE XREF: sub_4056A9+2DEj
		lea	eax, [ebp+var_30]
		mov	[esp+98h+var_8C], eax
		lea	eax, [ebp+var_38]
		mov	[esp+98h+var_90], eax
		lea	eax, [ebp+var_40]
		mov	[esp+98h+var_94], eax
		mov	[esp+98h+var_98], offset dword_424534
		call	[ebp+var_74]
		sub	esp, 10h
		test	eax, eax
		jz	short loc_405962
		mov	eax, [ebp+var_40]
		mov	edi, 1
		mov	edx, [ebp+var_3C]
		shrd	eax, edx, 0Ah
		mov	[ebp+var_6C], eax
		jmp	loc_405A0A
; ---------------------------------------------------------------------------

loc_405962:				; CODE XREF: sub_4056A9+2A0j
		test	edi, edi
		jz	short loc_40596B
		mov	word ptr [edi],	0

loc_40596B:				; CODE XREF: sub_4056A9+2BBj
		mov	[esp+98h+var_98], offset dword_424534
		call	sub_407620
		push	edi
		lea	edi, [eax-1]
		cmp	edi, offset dword_424534
		mov	word ptr [eax-1], 5Ch
		jnz	short loc_405925

loc_405989:				; CODE XREF: sub_4056A9+278j
		mov	[esp+98h+var_94], ebx
		mov	[esp+98h+var_98], offset dword_424534
		call	sub_407A11
		push	ecx		; lpSectorsPerCluster
		push	ecx
		mov	[esp+98h+var_98], offset dword_424534
		call	sub_40768C
		test	eax, eax
		push	ebx		; lpRootPathName
		jz	short loc_4059AF
		mov	byte ptr [eax],	0

loc_4059AF:				; CODE XREF: sub_4056A9+301j
		lea	eax, [ebp+var_1C]
		xor	edi, edi
		mov	[esp+98h+var_88], eax
		lea	eax, [ebp+var_20]
		mov	[esp+98h+var_8C], eax
		lea	eax, [ebp+var_24]
		mov	[esp+98h+var_90], eax
		lea	eax, [ebp+var_28]
		mov	[esp+98h+var_94], eax
		mov	[esp+98h+var_98], offset dword_424534
		call	ds:GetDiskFreeSpaceA
		sub	esp, 14h
		test	eax, eax
		jz	short loc_405A0A
		mov	eax, [ebp+var_20]
		mov	di, 1
		mov	[esp+98h+var_90], 400h
		mov	[esp+98h+var_94], eax
		mov	eax, [ebp+var_28]
		imul	eax, [ebp+var_24]
		mov	[esp+98h+var_98], eax
		call	ds:MulDiv
		sub	esp, 0Ch
		mov	[ebp+var_6C], eax

loc_405A0A:				; CODE XREF: sub_4056A9+2B4j
					; sub_4056A9+336j
		mov	eax, 5
		call	sub_4049A4
		cmp	[ebp+var_6C], eax
		jnb	short loc_405A22
		test	edi, edi
		mov	ebx, 2
		jnz	short loc_405A2B

loc_405A22:				; CODE XREF: sub_4056A9+36Ej
		xor	ebx, ebx
		cmp	[ebp+var_78], 0
		setz	bl

loc_405A2B:				; CODE XREF: sub_4056A9+377j
		mov	edx, ds:dword_4273CC
		cmp	dword ptr [edx+10h], 0
		jz	short loc_405A7B
		mov	ecx, eax
		mov	edx, 0FFFFFFFBh
		mov	eax, 3FFh
		call	sub_404BDA
		test	edi, edi
		jz	short loc_405A60
		mov	ecx, [ebp+var_6C]
		mov	edx, 0FFFFFFFCh
		mov	eax, 400h
		call	sub_404BDA
		jmp	short loc_405A7B
; ---------------------------------------------------------------------------

loc_405A60:				; CODE XREF: sub_4056A9+3A1j
		mov	[esp+98h+var_90], offset byte_40B33A
		mov	[esp+98h+var_94], 400h
		mov	[esp+98h+var_98], esi
		call	sub_4074FA
		sub	esp, 0Ch

loc_405A7B:				; CODE XREF: sub_4056A9+38Cj
					; sub_4056A9+3B5j
		test	ebx, ebx
		mov	ds:dword_426B2C, ebx
		jnz	short loc_405A94
		mov	[esp+98h+var_98], 7
		call	sub_4038A0
		mov	ebx, eax
		push	edx

loc_405A94:				; CODE XREF: sub_4056A9+3DAj
		mov	eax, [ebp+var_70]
		test	byte ptr [eax+15h], 4
		mov	eax, 0
		cmovnz	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		setz	al
		call	sub_404AF4
		test	ebx, ebx
		jnz	short loc_405AC1
		cmp	ds:dword_424530, 0
		jnz	short loc_405AC1
		call	sub_4049D7

loc_405AC1:				; CODE XREF: sub_4056A9+408j
					; sub_4056A9+411j
		mov	ds:dword_424530, 0

loc_405ACB:				; CODE XREF: sub_4056A9+230j
		mov	ecx, [ebp+arg_C]
		mov	edx, [ebp+arg_8]
		mov	eax, [ebp+arg_4]
		call	sub_404E8E
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_4056A9	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_405AE3(HCURSOR Msg,	int, int, int)
sub_405AE3	proc near		; DATA XREF: .rdata:off_40B3C8o

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
Msg		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, [ebp+Msg]
		cmp	[ebp+arg_4], 110h
		mov	ebx, [ebp+arg_C]
		mov	edi, ds:dword_42412C
		jnz	loc_405C86
		mov	eax, [ebx+30h]
		test	eax, eax
		jns	short loc_405B17
		mov	edx, ds:dword_4273CC
		not	eax
		mov	eax, [edx+eax*4]

loc_405B17:				; CODE XREF: sub_405AE3+27j
		add	eax, ds:dword_426B64
		mov	ecx, [ebx+34h]
		movsx	edx, byte ptr [eax]
		inc	eax
		mov	[ebp+var_2C], eax
		mov	[ebp+var_24], eax
		mov	eax, [ebx+14h]
		mov	[ebp+var_20], 0
		mov	[ebp+var_30], edx
		mov	[ebp+var_1C], offset sub_404AAD
		test	al, 20h
		mov	edi, eax
		setz	dl
		mov	eax, esi
		or	edi, edx
		mov	edx, 22h
		call	sub_404B10
		mov	ecx, [ebx+38h]
		mov	edx, 23h
		and	edi, 1
		mov	eax, esi
		call	sub_404B10
		mov	eax, edi
		neg	eax
		add	eax, 40Bh
		mov	[esp+58h+var_50], 1
		mov	[esp+58h+var_54], eax
		mov	[esp+58h+var_58], esi
		call	ds:CheckDlgButton
		mov	eax, edi
		sub	esp, 0Ch
		call	sub_404AF4
		mov	[esp+58h+var_54], 3E8h
		mov	[esp+58h+var_58], esi
		call	ds:GetDlgItem
		push	ecx		; Msg
		mov	ebx, eax
		push	ecx		; hWnd
		call	sub_404A16
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 1
		mov	[esp+58h+var_54], 45Bh
		mov	[esp+58h+var_58], ebx
		call	ds:SendMessageA
		mov	eax, ds:hInstance
		mov	eax, [eax+68h]
		sub	esp, 10h
		test	eax, eax
		jns	short loc_405BE3
		neg	eax
		mov	[esp+58h+var_58], eax
		call	ds:GetSysColor
		push	edx		; hWnd

loc_405BE3:				; CODE XREF: sub_405AE3+F2j
		mov	esi, ds:SendMessageA
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 443h
		mov	[esp+58h+var_58], ebx
		call	esi ; SendMessageA
		sub	esp, 10h
		mov	[esp+58h+var_4C], 4010000h
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 445h
		mov	[esp+58h+var_58], ebx
		call	esi ; SendMessageA
		mov	eax, [ebp+var_2C]
		mov	ds:dword_424944, 0
		sub	esp, 10h
		mov	[esp+58h+var_58], eax
		call	sub_407A39
		push	edi		; hWnd
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 435h
		mov	[esp+58h+var_58], ebx
		call	esi ; SendMessageA
		mov	edx, [ebp+var_30]
		lea	eax, [ebp+var_24]
		sub	esp, 10h
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_50], edx
		mov	[esp+58h+var_54], 449h
		mov	[esp+58h+var_58], ebx
		call	esi ; SendMessageA
		xor	esi, esi
		mov	ds:dword_424948, 0
		sub	esp, 10h
		jmp	loc_405E8D
; ---------------------------------------------------------------------------

loc_405C86:				; CODE XREF: sub_405AE3+1Cj
		cmp	[ebp+arg_4], 111h
		jnz	short loc_405D06
		mov	edx, [ebp+arg_8]
		shr	edx, 10h
		jnz	loc_405E7E
		cmp	ds:dword_424948, 0
		jnz	loc_405E7E
		test	byte ptr [edi+14h], 20h
		jz	loc_405E7E
		mov	[esp+58h+var_58], esi
		mov	[esp+58h+var_54], 40Ah
		call	ds:GetDlgItem
		push	ecx		; Msg
		push	ecx		; hWnd
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 0F0h
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		mov	edx, [edi+14h]
		and	edx, 0FFFFFFFEh
		and	eax, 1
		sub	esp, 10h
		or	edx, eax
		mov	[edi+14h], edx
		call	sub_404AF4
		call	sub_4049D7
		jmp	loc_405E7E
; ---------------------------------------------------------------------------

loc_405D06:				; CODE XREF: sub_405AE3+1AAj
		cmp	[ebp+arg_4], 4Eh
		jnz	loc_405E6F
		mov	[esp+58h+var_54], 3E8h
		mov	[esp+58h+var_58], esi
		call	ds:GetDlgItem
		push	edx		; Msg
		push	edx		; hWnd
		cmp	dword ptr [ebx+8], 70Bh
		jnz	loc_405DF8
		cmp	dword ptr [ebx+0Ch], 201h
		jnz	loc_405DF8
		mov	edx, [ebx+18h]
		mov	ecx, [ebx+1Ch]
		mov	[ebp+var_1C], offset byte_4273D0
		mov	[ebp+var_24], edx
		mov	[ebp+var_20], ecx
		sub	ecx, edx
		cmp	ecx, 7FFh
		ja	loc_405DF8
		lea	edx, [ebp+var_24]
		mov	[esp+58h+var_4C], edx
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 44Bh
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		mov	edx, ds:LoadCursorA
		mov	[ebp+var_34], edx
		sub	esp, 10h
		mov	[esp+58h+var_54], 7F02h
		mov	[esp+58h+var_58], 0
		call	edx ; LoadCursorA
		mov	edi, ds:SetCursor
		push	edx		; lpOperation
		push	edx		; hCursor
		mov	[esp+58h+var_58], eax
		call	edi ; SetCursor
		mov	eax, [ebp+var_1C]
		push	ecx		; hwnd
		mov	[esp+58h+var_58], esi
		mov	[esp+58h+var_44], 1
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], eax
		mov	[esp+58h+var_54], offset aOpen ; "open"
		call	ds:ShellExecuteA
		mov	edx, [ebp+var_34]
		sub	esp, 18h
		mov	[esp+58h+var_54], 7F00h
		mov	[esp+58h+var_58], 0
		call	edx
		push	esi		; Msg
		push	esi		; hCursor
		mov	[esp+58h+var_58], eax
		call	edi ; SetCursor
		push	edi		; hWnd

loc_405DF8:				; CODE XREF: sub_405AE3+247j
					; sub_405AE3+254j ...
		cmp	dword ptr [ebx+8], 700h
		jnz	short loc_405E7E
		cmp	dword ptr [ebx+0Ch], 100h
		jnz	short loc_405E7E
		cmp	dword ptr [ebx+10h], 0Dh
		jnz	short loc_405E39
		mov	eax, ds:dword_426BA0
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 1
		mov	[esp+58h+var_54], 111h
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		sub	esp, 10h

loc_405E39:				; CODE XREF: sub_405AE3+32Bj
		cmp	dword ptr [ebx+10h], 1Bh
		mov	esi, 1
		jnz	short loc_405E8D
		mov	eax, ds:dword_426BA0
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 10h
		mov	[esp+58h+var_58], eax
		call	ds:SendMessageA
		sub	esp, 10h
		jmp	short loc_405E8D
; ---------------------------------------------------------------------------

loc_405E6F:				; CODE XREF: sub_405AE3+227j
		cmp	[ebp+arg_4], 40Bh
		jnz	short loc_405E7E
		inc	ds:dword_424948

loc_405E7E:				; CODE XREF: sub_405AE3+1B2j
					; sub_405AE3+1BFj ...
		mov	edx, [ebp+arg_8]
		mov	ecx, ebx
		mov	eax, [ebp+arg_4]
		call	sub_404E8E
		mov	esi, eax

loc_405E8D:				; CODE XREF: sub_405AE3+19Ej
					; sub_405AE3+35Fj ...
		lea	esp, [ebp-0Ch]
		mov	eax, esi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_405AE3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_405E99	proc near		; CODE XREF: start+3ECp

var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 50h
		mov	esi, ds:hInstance
		mov	[esp+58h+var_58], 6
		call	sub_407EF3
		test	eax, eax
		push	ecx
		jz	short loc_405ED2
		call	eax
		mov	[esp+58h+var_58], offset dword_430000
		movzx	eax, ax
		mov	[esp+58h+var_54], eax
		call	sub_40794D
		jmp	loc_405F57
; ---------------------------------------------------------------------------

loc_405ED2:				; CODE XREF: sub_405E99+1Dj
		mov	ds:dword_430000, 7830h
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], offset byte_4230F0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], offset aControlPanelDe ; "Control Panel\\Desktop\\ResourceLocale"
		mov	[esp+58h+var_58], 80000001h
		call	sub_4078A4
		sub	esp, 14h
		cmp	ds:byte_4230F0,	0
		jnz	short loc_405F43
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], offset byte_4230F0
		mov	[esp+58h+var_50], 40B366h
		mov	[esp+58h+var_54], offset a_defaultContro ; ".DEFAULT\\Control Panel\\International"
		mov	[esp+58h+var_58], 80000003h
		call	sub_4078A4
		sub	esp, 14h

loc_405F43:				; CODE XREF: sub_405E99+79j
		mov	[esp+58h+var_54], offset byte_4230F0
		mov	[esp+58h+var_58], offset dword_430000
		call	sub_407A44

loc_405F57:				; CODE XREF: sub_405E99+34j
		push	ebx
		push	ebx
		call	sub_404CFC
		mov	eax, ds:dword_426B90
		mov	ds:dword_426B24, 10000h
		mov	[esp+60h+var_60], offset byte_42F400
		and	eax, 20h
		mov	ds:dword_426B08, eax
		call	sub_407E3C
		test	eax, eax
		push	edx
		jnz	loc_40605A
		mov	edx, [esi+48h]
		test	edx, edx
		jz	loc_40605A
		mov	eax, ds:dword_426B64
		mov	[esp+60h+var_50], 0
		mov	[esp+60h+var_54], offset byte_4273D0
		mov	ecx, [esi+4Ch]
		add	ecx, eax
		add	eax, edx
		mov	[esp+60h+var_58], ecx
		mov	[esp+60h+var_5C], eax
		mov	eax, [esi+44h]
		mov	[esp+60h+var_60], eax
		call	sub_4078A4
		mov	al, ds:byte_4273D0
		sub	esp, 14h
		test	al, al
		jz	loc_40605A
		cmp	al, 22h
		mov	ebx, offset byte_4273D0
		jnz	short loc_405FFB
		mov	[esp+60h+var_5C], 22h
		mov	ebx, offset byte_4273D1
		mov	[esp+60h+var_60], offset byte_4273D1
		call	sub_4075F0
		push	ecx		; type
		push	ecx		; lpString2
		mov	byte ptr [eax],	0

loc_405FFB:				; CODE XREF: sub_405E99+142j
		mov	[esp+60h+var_60], ebx
		call	sub_407A39
		lea	eax, [ebx+eax-4]
		cmp	eax, ebx
		push	edx		; lpString1
		jbe	short loc_40603F
		mov	[esp+64h+var_60], offset a_exe ; ".exe"
		mov	[esp+64h+var_64], eax
		call	ds:lstrcmpiA
		test	eax, eax
		push	ecx
		push	ecx		; lpFileName
		jnz	short loc_40603F
		mov	[esp+64h+var_64], ebx
		call	ds:GetFileAttributesA
		cmp	eax, 0FFFFFFFFh
		push	edx
		jz	short loc_406036
		test	al, 10h
		jnz	short loc_40603F

loc_406036:				; CODE XREF: sub_405E99+197j
		mov	[esp+64h+var_64], ebx
		call	sub_407620
		push	eax

loc_40603F:				; CODE XREF: sub_405E99+171j
					; sub_405E99+188j ...
		mov	[esp+64h+var_64], ebx
		call	sub_4075AA
		push	ecx
		mov	[esp+64h+var_60], eax
		mov	[esp+64h+var_64], offset byte_42F400
		call	sub_407A11
		push	ebx
		push	ebx

loc_40605A:				; CODE XREF: sub_405E99+EBj
					; sub_405E99+F6j ...
		mov	[esp+64h+var_64], offset byte_42F400
		call	sub_407E3C
		test	eax, eax
		push	edx
		jnz	short loc_406083
		mov	eax, [esi+118h]
		mov	[esp+64h+var_64], offset byte_42F400
		mov	[esp+64h+var_60], eax
		call	sub_407B23
		push	eax		; name
		push	eax		; hInst

loc_406083:				; CODE XREF: sub_405E99+1D0j
		mov	eax, ds:dword_426BA4
		mov	[esp+64h+var_50], 8040h
		mov	[esp+64h+var_54], 0
		mov	[esp+64h+var_58], 0
		mov	[esp+64h+var_5C], 1
		mov	[esp+64h+var_60], 67h
		mov	[esp+64h+var_64], eax
		call	ds:LoadImageA
		sub	esp, 18h
		cmp	dword ptr [esi+50h], 0FFFFFFFFh
		mov	ds:dword_4273B8, eax
		jz	loc_4061A0
		mov	edx, ds:dword_426BA4
		lea	esi, [ebp+var_C]
		mov	[ebp+var_C], 624E5Fh
		mov	ds:dword_4240F4, offset	sub_401000
		mov	ds:dword_424104, eax
		mov	ds:dword_424100, edx
		mov	ds:dword_424114, esi
		mov	[esp+64h+var_64], offset dword_4240F0
		call	ds:RegisterClassA
		push	ebx		; uiAction
		xor	ebx, ebx
		test	ax, ax
		jz	loc_4062E9
		lea	eax, [ebp+var_1C]
		mov	[esp+64h+var_58], 0
		mov	[esp+64h+var_5C], eax
		mov	[esp+64h+var_60], 0
		mov	[esp+64h+var_64], 30h
		call	ds:SystemParametersInfoA
		mov	eax, ds:dword_426BA4
		mov	ecx, [ebp+var_18]
		mov	edx, [ebp+var_1C]
		sub	esp, 10h
		mov	[esp+64h+var_3C], eax
		mov	eax, [ebp+var_10]
		mov	[esp+64h+var_38], 0
		mov	[esp+64h+var_40], 0
		mov	[esp+64h+var_44], 0
		sub	eax, ecx
		mov	[esp+64h+var_48], eax
		mov	eax, [ebp+var_14]
		mov	[esp+64h+var_50], ecx
		mov	[esp+64h+var_54], edx
		mov	[esp+64h+var_58], 80000000h
		sub	eax, edx
		mov	[esp+64h+var_4C], eax
		mov	[esp+64h+var_5C], 0
		mov	[esp+64h+var_60], esi
		mov	[esp+64h+var_64], 80h
		call	ds:CreateWindowExA
		sub	esp, 30h
		mov	ds:dword_424118, eax

loc_4061A0:				; CODE XREF: sub_405E99+22Cj
		mov	[esp+64h+var_64], 0
		mov	ebx, 2
		call	sub_4038A0
		test	eax, eax
		push	ecx		; hWnd
		jnz	loc_4062E9
		call	sub_404CFC
		cmp	ds:dword_426B28, 0
		jnz	loc_4062B1
		mov	eax, ds:dword_424118
		mov	[esp+64h+var_60], 5
		mov	[esp+64h+var_64], eax
		call	ds:ShowWindow
		mov	ebx, ds:LoadLibraryA
		push	eax		; lpClassName
		push	eax		; lpLibFileName
		mov	[esp+64h+var_64], offset aRiched20 ; "RichEd20"
		call	ebx ; LoadLibraryA
		test	eax, eax
		push	edx		; lpLibFileName
		jnz	short loc_406202
		mov	[esp+64h+var_64], offset aRiched32 ; "RichEd32"
		call	ebx ; LoadLibraryA
		push	esi		; hInstance

loc_406202:				; CODE XREF: sub_405E99+35Dj
		mov	ebx, ds:GetClassInfoA
		mov	[esp+64h+var_5C], offset dword_4240F0
		mov	[esp+64h+var_60], offset aRichedit20a ;	"RichEdit20A"
		mov	[esp+64h+var_64], 0
		call	ebx ; GetClassInfoA
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_40625C
		mov	[esp+64h+var_5C], offset dword_4240F0
		mov	[esp+64h+var_60], offset aRichedit ; "RichEdit"
		mov	[esp+64h+var_64], 0
		call	ebx ; GetClassInfoA
		mov	ds:dword_424114, offset	aRichedit20a ; "RichEdit20A"
		sub	esp, 0Ch
		mov	[esp+64h+var_64], offset dword_4240F0
		call	ds:RegisterClassA
		push	ebx		; hInstance

loc_40625C:				; CODE XREF: sub_405E99+38Dj
		mov	eax, ds:dword_4273C4
		mov	[esp+64h+var_54], 0
		mov	[esp+64h+var_58], offset sub_404F6A
		mov	[esp+64h+var_5C], 0
		add	eax, 69h
		movzx	eax, ax
		mov	[esp+64h+var_60], eax
		mov	eax, ds:dword_426BA4
		mov	[esp+64h+var_64], eax
		call	ds:DialogBoxParamA
		sub	esp, 14h
		mov	ebx, eax
		mov	[esp+64h+var_64], 5
		call	sub_4038A0
		push	ecx
		mov	[esp+64h+var_64], 1
		call	sub_4048A4
		jmp	short loc_4062D7
; ---------------------------------------------------------------------------

loc_4062B1:				; CODE XREF: sub_405E99+32Dj
		mov	[esp+64h+var_64], 0
		call	sub_404B4E
		test	eax, eax
		push	edx
		jz	short loc_4062DA
		cmp	ds:dword_4273A8, 0
		jnz	short loc_4062E9
		mov	[esp+64h+var_64], 2
		call	sub_4038A0

loc_4062D7:				; CODE XREF: sub_405E99+416j
		push	esi
		jmp	short loc_4062E9
; ---------------------------------------------------------------------------

loc_4062DA:				; CODE XREF: sub_405E99+427j
		mov	[esp+64h+var_64], 1
		call	sub_4038A0
		push	ebx
		xor	ebx, ebx

loc_4062E9:				; CODE XREF: sub_405E99+270j
					; sub_405E99+31Bj ...
		lea	esp, [ebp-8]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	ebp
		retn
sub_405E99	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4062F2	proc near		; CODE XREF: sub_4063B0+48Cp
					; sub_406CC1+52p

var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, ds:SendMessageA
		mov	[esp+68h+var_5C], 0
		mov	[esp+68h+var_60], 9
		mov	[esp+68h+var_64], 110Ah
		mov	[esp+68h+var_68], ebx
		call	esi ; SendMessageA
		sub	esp, 10h
		cmp	[ebp+arg_4], 0
		jz	short loc_406376
		call	ds:GetMessagePos
		lea	edi, [ebp+var_28]
		mov	[esp+68h+var_64], edi
		mov	[esp+68h+var_68], ebx
		movsx	edx, ax
		sar	eax, 10h
		mov	[ebp+var_28], edx
		mov	[ebp+var_24], eax
		call	ds:ScreenToClient
		push	eax		; Msg
		push	eax		; hWnd
		mov	[esp+68h+var_5C], edi
		mov	[esp+68h+var_60], 0
		mov	[esp+68h+var_64], 1111h
		mov	[esp+68h+var_68], ebx
		call	esi ; SendMessageA
		or	eax, 0FFFFFFFFh
		sub	esp, 10h
		test	[ebp+var_20], 66h
		jz	short loc_4063A6
		mov	eax, [ebp+var_1C]

loc_406376:				; CODE XREF: sub_4062F2+36j
		mov	[ebp+var_4C], eax
		lea	eax, [ebp+var_50]
		mov	[ebp+var_50], 4
		mov	[esp+68h+var_5C], eax
		mov	[esp+68h+var_60], 0
		mov	[esp+68h+var_64], 110Ch
		mov	[esp+68h+var_68], ebx
		call	ds:SendMessageA
		mov	eax, [ebp+var_2C]
		sub	esp, 10h

loc_4063A6:				; CODE XREF: sub_4062F2+7Fj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_4062F2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4063B0	proc near		; DATA XREF: .rdata:0040B3CCo

var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_A0		= dword	ptr -0A0h
var_9C		= dword	ptr -9Ch
var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_7C		= dword	ptr -7Ch
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 0BCh
		mov	eax, [ebp+arg_0]
		mov	ebx, ds:GetDlgItem
		mov	esi, [ebp+arg_C]
		mov	[esp+0C8h+var_C4], 3F9h
		mov	[esp+0C8h+var_C8], eax
		call	ebx ; GetDlgItem
		mov	edx, [ebp+arg_0]
		push	ecx
		push	ecx
		mov	[ebp+var_7C], eax
		mov	[esp+0C8h+var_C4], 408h
		mov	[esp+0C8h+var_C8], edx
		call	ebx ; GetDlgItem
		mov	ecx, ds:dword_426B54
		cmp	[ebp+arg_4], 110h
		mov	[ebp+var_84], ecx
		push	ebx		; dwBytes
		push	ebx		; uFlags
		mov	ebx, eax
		mov	eax, ds:hInstance
		mov	[ebp+var_98], eax
		jnz	loc_4067CD
		mov	eax, ds:dword_426B58
		mov	edx, [ebp+arg_0]
		mov	[esp+0C8h+var_C8], 40h
		shl	eax, 2
		mov	ds:dword_426B44, edx
		mov	[esp+0C8h+var_C4], eax
		call	ds:GlobalAlloc
		mov	ds:dword_424934, eax
		mov	eax, ds:dword_426BA4
		push	edi		; lpBitmapName
		push	edi		; hInstance
		mov	[esp+0C8h+var_C4], 6Eh
		mov	[esp+0C8h+var_C8], eax
		call	ds:LoadBitmapA
		mov	ds:dword_424938, 0FFFFFFFFh
		push	edx		; nIndex
		push	edx		; hWnd
		mov	[ebp+var_88], eax
		mov	[esp+0C8h+var_C0], offset sub_406CC1
		mov	[esp+0C8h+var_C4], 0FFFFFFFCh
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SetWindowLongA
		sub	esp, 0Ch
		mov	ds:dword_42493C, eax
		mov	[esp+0C8h+var_B8], 0
		mov	[esp+0C8h+var_BC], 6
		mov	[esp+0C8h+var_C0], 21h
		mov	[esp+0C8h+var_C4], 10h
		mov	[esp+0C8h+var_C8], 10h
		call	ds:ImageList_Create
		mov	ecx, [ebp+var_88]
		sub	esp, 14h
		mov	[esp+0C8h+var_C4], ecx
		mov	ds:dword_424940, eax
		mov	[esp+0C8h+var_C0], 0FF00FFh
		mov	[esp+0C8h+var_C8], eax
		call	ds:ImageList_AddMasked
		mov	eax, ds:dword_424940
		mov	edi, ds:SendMessageA
		sub	esp, 0Ch
		mov	[esp+0C8h+var_BC], eax
		mov	[esp+0C8h+var_C0], 2
		mov	[esp+0C8h+var_C4], 1109h
		mov	[esp+0C8h+var_C8], ebx
		call	edi ; SendMessageA
		sub	esp, 10h
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 111Ch
		mov	[esp+0C8h+var_C8], ebx
		call	edi ; SendMessageA
		sub	esp, 10h
		cmp	eax, 0Fh
		jg	short loc_406543
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 10h
		mov	[esp+0C8h+var_C4], 111Bh
		mov	[esp+0C8h+var_C8], ebx
		call	edi ; SendMessageA
		sub	esp, 10h

loc_406543:				; CODE XREF: sub_4063B0+171j
		mov	eax, [ebp+var_88]
		xor	edi, edi
		mov	[esp+0C8h+var_C8], eax
		call	ds:DeleteObject
		mov	[ebp+var_88], 2
		push	ecx

loc_40655F:				; CODE XREF: sub_4063B0+22Dj
		mov	edx, [ebp+var_98]
		mov	eax, [edx+edi*4+94h]
		test	eax, eax
		jz	short loc_4065D9
		cmp	edi, 20h
		mov	ecx, 0
		cmovz	ecx, [ebp+var_88]
		mov	[esp+0C8h+var_C4], eax
		mov	[esp+0C8h+var_C8], 0
		mov	[ebp+var_88], ecx
		call	sub_407B23
		push	edx		; Msg
		push	edx		; hWnd
		mov	[esp+0C8h+var_BC], eax
		mov	eax, [ebp+var_7C]
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 143h
		mov	[esp+0C8h+var_C8], eax
		call	ds:SendMessageA
		sub	esp, 10h
		mov	[esp+0C8h+var_C0], eax
		mov	eax, [ebp+var_7C]
		mov	[esp+0C8h+var_BC], edi
		mov	[esp+0C8h+var_C4], 151h
		mov	[esp+0C8h+var_C8], eax
		call	ds:SendMessageA
		sub	esp, 10h

loc_4065D9:				; CODE XREF: sub_4063B0+1BEj
		inc	edi
		cmp	edi, 21h
		jnz	short loc_40655F
		mov	edx, [ebp+var_88]
		xor	di, di
		mov	eax, [ebp+arg_0]
		mov	ecx, [esi+edx*4+30h]
		mov	edx, 15h
		call	sub_404B10
		mov	eax, [ebp+var_88]
		mov	edx, 16h
		mov	ecx, [esi+eax*4+34h]
		mov	eax, [ebp+arg_0]
		call	sub_404B10
		mov	edx, [ebp+var_84]
		mov	[ebp+var_A0], esi
		mov	[ebp+var_90], 0
		mov	[ebp+var_8C], 0
		mov	[ebp+var_94], 0
		mov	esi, edx
		jmp	loc_406753
; ---------------------------------------------------------------------------

loc_406641:				; CODE XREF: sub_4063B0+3AFj
		cmp	byte ptr [esi+18h], 0
		jz	loc_406740
		mov	edx, [ebp+var_8C]
		lea	eax, [esi+18h]
		mov	[ebp+var_74], edi
		mov	[ebp+var_70], 0FFFF0002h
		mov	[ebp+var_6C], 0Dh
		mov	[ebp+var_60], 20h
		mov	[ebp+var_48], edx
		mov	[ebp+var_5C], eax
		mov	eax, [esi+8]
		and	eax, 20h
		mov	[ebp+var_64], eax
		mov	eax, [esi+8]
		test	al, 2
		jz	short loc_4066DB
		mov	ecx, [ebp+var_90]
		lea	eax, [ebp+var_74]
		add	ecx, ds:dword_424934
		mov	[ebp+var_6C], 4Dh
		mov	[ebp+var_4C], 1
		mov	[ebp+var_94], ecx
		mov	[esp+0C8h+var_BC], eax
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 1100h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		mov	edx, [ebp+var_94]
		mov	[ebp+var_94], 1
		sub	esp, 10h
		mov	edi, eax
		mov	[edx], eax
		jmp	short loc_406740
; ---------------------------------------------------------------------------

loc_4066DB:				; CODE XREF: sub_4063B0+2D0j
		test	al, 4
		jz	short loc_406703
		mov	[esp+0C8h+var_BC], edi
		mov	[esp+0C8h+var_C0], 3
		mov	[esp+0C8h+var_C4], 110Ah
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		sub	esp, 10h
		mov	edi, eax
		jmp	short loc_406740
; ---------------------------------------------------------------------------

loc_406703:				; CODE XREF: sub_4063B0+32Dj
		mov	ecx, [ebp+var_90]
		lea	eax, [ebp+var_74]
		add	ecx, ds:dword_424934
		mov	[esp+0C8h+var_BC], eax
		mov	[esp+0C8h+var_C0], 0
		mov	[ebp+var_9C], ecx
		mov	[esp+0C8h+var_C4], 1100h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		mov	edx, [ebp+var_9C]
		sub	esp, 10h
		mov	[edx], eax

loc_406740:				; CODE XREF: sub_4063B0+295j
					; sub_4063B0+329j ...
		inc	[ebp+var_8C]
		add	esi, 418h
		add	[ebp+var_90], 4

loc_406753:				; CODE XREF: sub_4063B0+28Cj
		mov	ecx, [ebp+var_8C]
		cmp	ecx, ds:dword_426B58
		jl	loc_406641
		cmp	[ebp+var_94], 0
		mov	esi, [ebp+var_A0]
		jnz	short loc_4067A2
		mov	[esp+0C8h+var_C4], 0FFFFFFF0h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:GetWindowLongA
		push	edi		; nIndex
		and	eax, 0FFFFFFFBh
		push	edi		; hWnd
		mov	[esp+0C8h+var_C0], eax
		mov	[esp+0C8h+var_C4], 0FFFFFFF0h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SetWindowLongA
		sub	esp, 0Ch

loc_4067A2:				; CODE XREF: sub_4063B0+3C2j
		cmp	[ebp+var_88], 0
		mov	eax, ebx
		jnz	short loc_4067C6
		mov	eax, [ebp+var_7C]
		mov	[esp+0C8h+var_C4], 5
		mov	[esp+0C8h+var_C8], eax
		call	ds:ShowWindow
		mov	eax, [ebp+var_7C]
		push	ecx
		push	ecx

loc_4067C6:				; CODE XREF: sub_4063B0+3FBj
		call	sub_404A16
		jmp	short loc_4067E9
; ---------------------------------------------------------------------------

loc_4067CD:				; CODE XREF: sub_4063B0+5Cj
		cmp	[ebp+arg_4], 405h
		jnz	short loc_4067E9
		mov	esi, 1
		mov	[ebp+arg_8], 0
		mov	[ebp+arg_4], 40Fh

loc_4067E9:				; CODE XREF: sub_4063B0+41Bj
					; sub_4063B0+424j
		cmp	[ebp+arg_4], 413h
		setz	al
		jz	short loc_4067FF
		cmp	[ebp+arg_4], 4Eh
		jnz	loc_40690E

loc_4067FF:				; CODE XREF: sub_4063B0+443j
		test	al, al
		mov	edi, esi
		jnz	short loc_406812
		cmp	dword ptr [esi+4], 408h
		jnz	loc_40690E

loc_406812:				; CODE XREF: sub_4063B0+453j
		test	byte ptr ds:dword_426B90+1, 2
		jnz	loc_4068A8
		test	al, al
		jnz	short loc_406829
		cmp	dword ptr [esi+8], 0FFFFFFFEh
		jnz	short loc_4068A8

loc_406829:				; CODE XREF: sub_4063B0+471j
		xor	eax, eax
		cmp	[ebp+arg_4], 413h
		mov	[esp+0C8h+var_C8], ebx
		setnz	al
		mov	[esp+0C8h+var_C4], eax
		call	sub_4062F2
		test	eax, eax
		push	edx		; Msg
		push	edx
		js	short loc_4068A8
		imul	ecx, eax, 418h
		add	ecx, [ebp+var_84]
		mov	edx, [ecx+8]
		test	dl, 10h
		jnz	short loc_4068A8
		mov	esi, edx
		xor	esi, 1
		test	dl, 40h
		jz	short loc_406880
		xor	dl, 80h
		mov	esi, edx
		mov	[ebp+var_88], edx
		or	esi, 1
		and	edx, 0FFFFFFFEh
		test	byte ptr [ebp+var_88], 80h
		cmovz	esi, edx

loc_406880:				; CODE XREF: sub_4063B0+4B3j
		mov	[ecx+8], esi
		mov	[esp+0C8h+var_C8], eax
		call	sub_401220
		xor	edx, edx
		test	byte ptr ds:dword_426B90+1, 1
		mov	[ebp+arg_8], 1
		mov	[ebp+arg_4], 40Fh
		setz	dl
		mov	esi, edx
		push	eax		; hWnd

loc_4068A8:				; CODE XREF: sub_4063B0+469j
					; sub_4063B0+477j ...
		test	edi, edi
		jz	short loc_40690E
		cmp	dword ptr [edi+8], 0FFFFFE6Eh
		jnz	short loc_4068D8
		mov	eax, [edi+5Ch]
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 419h
		mov	[esp+0C8h+var_C8], ebx
		mov	[esp+0C8h+var_BC], eax
		call	ds:SendMessageA
		sub	esp, 10h

loc_4068D8:				; CODE XREF: sub_4063B0+503j
		cmp	dword ptr [edi+8], 0FFFFFE6Ah
		jnz	short loc_40690E
		cmp	dword ptr [edi+0Ch], 2
		mov	eax, [edi+5Ch]
		jnz	short loc_4068FD
		imul	eax, 418h
		mov	ecx, [ebp+var_84]
		or	dword ptr [ecx+eax+8], 20h
		jmp	short loc_40690E
; ---------------------------------------------------------------------------

loc_4068FD:				; CODE XREF: sub_4063B0+538j
		imul	eax, 418h
		mov	edx, [ebp+var_84]
		and	dword ptr [edx+eax+8], 0FFFFFFDFh

loc_40690E:				; CODE XREF: sub_4063B0+449j
					; sub_4063B0+45Cj ...
		cmp	[ebp+arg_4], 111h
		jnz	loc_4069EB
		cmp	word ptr [ebp+arg_8], 3F9h
		jnz	loc_406CAA
		mov	eax, [ebp+arg_8]
		shr	eax, 10h
		dec	ax
		jnz	loc_406CAA
		mov	eax, [ebp+var_7C]
		mov	edi, ds:SendMessageA
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 147h
		mov	[esp+0C8h+var_C8], eax
		call	edi ; SendMessageA
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		jz	loc_406CAA
		mov	[esp+0C8h+var_C0], eax
		mov	eax, [ebp+var_7C]
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C4], 150h
		mov	[esp+0C8h+var_C8], eax
		call	edi ; SendMessageA
		sub	esp, 10h
		cmp	eax, 0FFFFFFFFh
		mov	esi, eax
		jz	short loc_4069A5
		mov	edx, [ebp+var_98]
		cmp	dword ptr [edx+eax*4+94h], 0
		mov	eax, 20h
		cmovz	esi, eax
		jmp	short loc_4069AA
; ---------------------------------------------------------------------------

loc_4069A5:				; CODE XREF: sub_4063B0+5DBj
		mov	esi, 20h

loc_4069AA:				; CODE XREF: sub_4063B0+5F3j
		mov	[esp+0C8h+var_C8], esi
		call	sub_40133F
		push	eax		; hWnd
		mov	[esp+0C8h+var_BC], esi
		mov	esi, [ebp+arg_0]
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 420h
		mov	[esp+0C8h+var_C8], esi
		xor	esi, esi
		call	ds:SendMessageA
		mov	[ebp+arg_8], 1
		mov	[ebp+arg_4], 40Fh
		sub	esp, 10h
		jmp	loc_406A7C
; ---------------------------------------------------------------------------

loc_4069EB:				; CODE XREF: sub_4063B0+565j
		cmp	[ebp+arg_4], 200h
		jnz	short loc_406A1D
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 200h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		sub	esp, 10h
		jmp	loc_406CAA
; ---------------------------------------------------------------------------

loc_406A1D:				; CODE XREF: sub_4063B0+642j
		cmp	[ebp+arg_4], 40Bh
		jnz	short loc_406A6F
		mov	eax, ds:dword_424940
		test	eax, eax
		jz	short loc_406A39
		mov	[esp+0C8h+var_C8], eax
		call	ds:ImageList_Destroy
		push	eax		; hMem

loc_406A39:				; CODE XREF: sub_4063B0+67Dj
		mov	eax, ds:dword_424934
		test	eax, eax
		jz	short loc_406A4C
		mov	[esp+0C8h+var_C8], eax
		call	ds:GlobalFree
		push	eax

loc_406A4C:				; CODE XREF: sub_4063B0+690j
		mov	ds:dword_424940, 0
		mov	ds:dword_424934, 0
		mov	ds:dword_426B44, 0
		jmp	loc_406CAA
; ---------------------------------------------------------------------------

loc_406A6F:				; CODE XREF: sub_4063B0+674j
		cmp	[ebp+arg_4], 40Fh
		jnz	loc_406C59

loc_406A7C:				; CODE XREF: sub_4063B0+636j
		mov	[esp+0C8h+var_C4], 0
		mov	[esp+0C8h+var_C8], 0
		call	sub_40128F
		cmp	[ebp+arg_8], 0
		push	eax		; Msg
		push	eax
		jz	short loc_406AA5
		mov	[esp+0C8h+var_C8], 8
		call	sub_4038A0
		push	edi

loc_406AA5:				; CODE XREF: sub_4063B0+6E6j
		test	esi, esi
		jz	short loc_406B08
		mov	eax, ds:dword_424934
		mov	[esp+0C8h+var_C8], eax
		call	sub_401388
		push	edx
		mov	esi, eax
		mov	[esp+0C8h+var_C8], eax
		call	sub_40133F
		xor	edx, edx
		xor	eax, eax
		push	ecx		; hWnd
		jmp	short loc_406ADA
; ---------------------------------------------------------------------------

loc_406AC8:				; CODE XREF: sub_4063B0+72Cj
		mov	ecx, [ebp+var_98]
		cmp	dword ptr [ecx+eax*4+94h], 1
		sbb	edx, 0FFFFFFFFh
		inc	eax

loc_406ADA:				; CODE XREF: sub_4063B0+716j
		cmp	eax, esi
		jl	short loc_406AC8
		mov	eax, [ebp+var_7C]
		mov	[esp+0C8h+var_BC], 0
		mov	[esp+0C8h+var_C0], edx
		mov	[esp+0C8h+var_C4], 14Eh
		mov	[esp+0C8h+var_C8], eax
		call	ds:SendMessageA
		mov	[ebp+arg_4], 420h
		sub	esp, 10h

loc_406B08:				; CODE XREF: sub_4063B0+6F7j
		mov	[esp+0C8h+var_C4], 0
		mov	[esp+0C8h+var_C8], 0
		call	sub_40128F
		mov	edx, ds:dword_424934
		mov	[ebp+var_34], 0F030h
		mov	[ebp+var_84], 0
		mov	[ebp+var_80], esi
		mov	[ebp+var_88], edx
		push	edi		; Msg
		push	edi		; hWnd
		mov	edi, ds:dword_426B54
		jmp	loc_406C02
; ---------------------------------------------------------------------------

loc_406B49:				; CODE XREF: sub_4063B0+85Ej
		mov	esi, [ebp+var_84]
		mov	edx, [ebp+var_88]
		mov	ecx, [edx+esi*4]
		test	ecx, ecx
		jz	loc_406BF6
		mov	eax, [edi+8]
		mov	[ebp+var_3C], ecx
		mov	[ebp+var_40], 8
		test	ah, 1
		jz	short loc_406B86
		lea	edx, [edi+18h]
		mov	[ebp+var_40], 9
		mov	[ebp+var_30], edx
		and	dword ptr [edi+8], 0FFFFFEFFh

loc_406B86:				; CODE XREF: sub_4063B0+7C0j
		test	al, 40h
		mov	edx, 3
		jnz	short loc_406B9F
		mov	esi, eax
		and	esi, 1
		mov	edx, esi
		add	esi, 4
		inc	edx
		test	al, 10h
		cmovnz	edx, esi

loc_406B9F:				; CODE XREF: sub_4063B0+7DDj
		mov	esi, eax
		and	eax, 20h
		and	esi, 8
		add	esi, esi
		shl	edx, 0Ch
		or	esi, eax
		sar	eax, 5
		or	esi, edx
		inc	eax
		mov	[esp+0C8h+var_BC], ecx
		mov	[ebp+var_38], esi
		mov	[esp+0C8h+var_C0], eax
		mov	[esp+0C8h+var_C4], 1102h
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		lea	eax, [ebp+var_40]
		sub	esp, 10h
		mov	[esp+0C8h+var_BC], eax
		mov	[esp+0C8h+var_C0], 0
		mov	[esp+0C8h+var_C4], 110Dh
		mov	[esp+0C8h+var_C8], ebx
		call	ds:SendMessageA
		sub	esp, 10h

loc_406BF6:				; CODE XREF: sub_4063B0+7AAj
		inc	[ebp+var_84]
		add	edi, 418h

loc_406C02:				; CODE XREF: sub_4063B0+794j
		mov	edx, [ebp+var_84]
		cmp	edx, ds:dword_426B58
		jl	loc_406B49
		mov	esi, [ebp+var_80]
		mov	[esp+0C8h+var_C0], 1
		mov	[esp+0C8h+var_C4], 0
		mov	[esp+0C8h+var_C8], ebx
		call	ds:InvalidateRect
		mov	eax, ds:dword_4273CC
		sub	esp, 0Ch
		cmp	dword ptr [eax+10h], 0
		jz	short loc_406C59
		mov	eax, 5
		call	sub_4049A4
		mov	edx, 0FFFFFFFBh
		mov	ecx, eax
		mov	eax, 3FFh
		call	sub_404BDA

loc_406C59:				; CODE XREF: sub_4063B0+6C6j
					; sub_4063B0+88Cj
		cmp	[ebp+arg_4], 420h
		jnz	short loc_406CAA
		test	byte ptr ds:dword_426B90+1, 1
		jz	short loc_406CAA
		xor	ecx, ecx
		cmp	esi, 20h
		setz	cl
		mov	edi, ecx
		shl	edi, 3
		mov	[esp+0C8h+var_C8], ebx
		mov	ebx, ds:ShowWindow
		mov	[esp+0C8h+var_C4], edi
		call	ebx ; ShowWindow
		push	eax
		push	eax
		mov	eax, [ebp+arg_0]
		mov	[esp+0C8h+var_C4], 3FEh
		mov	[esp+0C8h+var_C8], eax
		call	ds:GetDlgItem
		push	edx		; nCmdShow
		push	edx		; hWnd
		mov	[esp+0C8h+var_C4], edi
		mov	[esp+0C8h+var_C8], eax
		call	ebx ; ShowWindow
		push	ecx
		push	ecx

loc_406CAA:				; CODE XREF: sub_4063B0+571j
					; sub_4063B0+57Fj ...
		mov	edx, [ebp+arg_8]
		mov	ecx, esi
		mov	eax, [ebp+arg_4]
		call	sub_404E8E
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_4063B0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_406CC1	proc near		; DATA XREF: sub_4063B0+B3o

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	edi, [ebp+arg_0]
		cmp	[ebp+arg_8], 20h
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_C]
		jnz	short loc_406CF2
		cmp	ebx, 102h
		jnz	short loc_406CF2
		mov	eax, 413h
		call	sub_404A43
		xor	eax, eax
		jmp	loc_406DA8
; ---------------------------------------------------------------------------

loc_406CF2:				; CODE XREF: sub_406CC1+16j
					; sub_406CC1+1Ej
		cmp	ebx, 200h
		jnz	short loc_406D1E
		mov	[esp+38h+var_38], edi
		call	ds:IsWindowVisible
		test	eax, eax
		push	ecx
		jz	short loc_406D84
		mov	[esp+38h+var_34], 1
		mov	[esp+38h+var_38], edi
		call	sub_4062F2
		push	edx
		mov	esi, eax
		push	edx
		jmp	short loc_406D26
; ---------------------------------------------------------------------------

loc_406D1E:				; CODE XREF: sub_406CC1+37j
		cmp	ebx, 419h
		jnz	short loc_406D84

loc_406D26:				; CODE XREF: sub_406CC1+5Bj
		cmp	ds:dword_424938, esi
		mov	ebx, 419h
		jz	short loc_406D84
		mov	ds:dword_424938, esi
		mov	[esp+38h+var_34], offset dword_42A000
		mov	[esp+38h+var_38], offset byte_4230F0
		call	sub_407A11
		push	eax
		push	eax
		mov	[esp+38h+var_34], esi
		mov	[esp+38h+var_38], offset dword_42A000
		call	sub_40794D
		push	eax
		push	eax
		mov	[esp+38h+var_38], 6
		call	sub_4038A0
		push	eax
		mov	[esp+38h+var_34], offset byte_4230F0
		mov	[esp+38h+var_38], offset dword_42A000
		call	sub_407A11
		push	eax		; hWnd
		push	eax		; lpPrevWndFunc

loc_406D84:				; CODE XREF: sub_406CC1+45j
					; sub_406CC1+63j ...
		mov	eax, [ebp+arg_8]
		mov	[esp+38h+var_28], esi
		mov	[esp+38h+var_30], ebx
		mov	[esp+38h+var_34], edi
		mov	[esp+38h+var_2C], eax
		mov	eax, ds:dword_42493C
		mov	[esp+38h+var_38], eax
		call	ds:CallWindowProcA
		sub	esp, 14h

loc_406DA8:				; CODE XREF: sub_406CC1+2Cj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_406CC1	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_406DB2	proc near		; CODE XREF: sub_401630+14p
					; sub_40164F+D6p ...

var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_5C		= dword	ptr -5Ch
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_38		= dword	ptr -38h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 6Ch
		mov	ebx, ds:dword_4273B0
		test	ebx, ebx
		jz	loc_406EE8
		mov	esi, ds:dword_426B3C
		mov	edi, esi
		and	edi, 1
		jnz	short loc_406DEB
		mov	eax, [ebp+arg_0]
		mov	[esp+78h+var_78], offset byte_42494C
		mov	[esp+78h+var_74], eax
		call	sub_407B23
		push	eax
		push	eax

loc_406DEB:				; CODE XREF: sub_406DB2+22j
		mov	[esp+78h+var_78], offset byte_42494C
		call	sub_407A39
		cmp	[ebp+arg_4], 0
		push	ecx
		mov	[ebp+var_5C], eax
		jz	short loc_406E30
		mov	eax, [ebp+arg_4]
		mov	[esp+78h+var_78], eax
		call	sub_407A39
		add	eax, [ebp+var_5C]
		cmp	eax, 7FFh
		push	edx
		ja	loc_406EE8
		mov	eax, [ebp+arg_4]
		mov	[esp+78h+var_78], offset byte_42494C
		mov	[esp+78h+var_74], eax
		call	sub_407A44
		push	eax		; lpString
		push	eax		; hWnd

loc_406E30:				; CODE XREF: sub_406DB2+4Dj
		test	esi, 4
		jnz	short loc_406E50
		mov	eax, ds:dword_4273C8
		mov	[esp+78h+var_74], offset byte_42494C
		mov	[esp+78h+var_78], eax
		call	ds:SetWindowTextA
		push	eax		; Msg
		push	eax		; hWnd

loc_406E50:				; CODE XREF: sub_406DB2+84j
		and	esi, 2
		jnz	loc_406EDA
		mov	esi, ds:SendMessageA
		mov	[ebp+var_4C], 1
		mov	[ebp+var_38], offset byte_42494C
		mov	[esp+78h+var_6C], 0
		mov	[esp+78h+var_70], 0
		mov	[esp+78h+var_74], 1004h
		mov	[esp+78h+var_78], ebx
		call	esi ; SendMessageA
		mov	[ebp+var_44], 0
		sub	eax, edi
		sub	esp, 10h
		mov	[ebp+var_48], eax
		lea	eax, [ebp+var_4C]
		mov	[esp+78h+var_6C], eax
		mov	eax, 1007h
		sub	eax, edi
		mov	[esp+78h+var_70], 0
		mov	[esp+78h+var_74], eax
		mov	[esp+78h+var_78], ebx
		call	esi ; SendMessageA
		mov	eax, [ebp+var_48]
		sub	esp, 10h
		mov	[esp+78h+var_6C], 0
		mov	[esp+78h+var_70], eax
		mov	[esp+78h+var_74], 1013h
		mov	[esp+78h+var_78], ebx
		call	esi ; SendMessageA
		sub	esp, 10h

loc_406EDA:				; CODE XREF: sub_406DB2+A1j
		test	edi, edi
		jz	short loc_406EE8
		mov	eax, [ebp+var_5C]
		mov	ds:byte_42494C[eax], 0

loc_406EE8:				; CODE XREF: sub_406DB2+11j
					; sub_406DB2+63j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_406DB2	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_406EF2	proc near		; DATA XREF: .rdata:0040B3D4o

var_98		= dword	ptr -98h
var_94		= dword	ptr -94h
var_90		= dword	ptr -90h
var_8C		= dword	ptr -8Ch
var_88		= dword	ptr -88h
var_84		= dword	ptr -84h
var_80		= dword	ptr -80h
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_70		= dword	ptr -70h
var_6C		= dword	ptr -6Ch
var_60		= dword	ptr -60h
var_58		= dword	ptr -58h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_1C		= byte ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 8Ch
		mov	ebx, [ebp+arg_4]
		mov	esi, [ebp+arg_0]
		mov	edi, ds:dword_4273B0
		cmp	ebx, 110h
		jnz	loc_407183
		xor	eax, eax
		mov	ecx, 8
		lea	edi, [ebp+var_60]
		rep stosd
		mov	eax, ds:hInstance
		mov	[ebp+var_60], 2
		mov	edi, ds:GetDlgItem
		mov	[ebp+var_58], 0FFFFFFFFh
		mov	[ebp+var_4C], 0FFFFFFFFh
		mov	ebx, [eax+5Ch]
		mov	eax, [eax+60h]
		mov	[esp+98h+var_94], 403h
		mov	[esp+98h+var_98], esi
		mov	[ebp+var_70], eax
		call	edi ; GetDlgItem
		push	edx
		push	edx
		mov	ds:dword_4273AC, eax
		mov	[esp+98h+var_94], 3EEh
		mov	[esp+98h+var_98], esi
		call	edi ; GetDlgItem
		push	ecx
		push	ecx
		mov	ds:dword_4273C8, eax
		mov	[esp+98h+var_94], 3F8h
		mov	[esp+98h+var_98], esi
		call	edi ; GetDlgItem
		push	edi		; lpRect
		push	edi		; hWnd
		mov	edi, eax
		mov	ds:dword_4273B0, eax
		mov	eax, ds:dword_4273AC
		call	sub_404A16
		mov	eax, 4
		call	sub_4049A4
		mov	ds:dword_4273B4, 0
		mov	[esp+98h+var_98], edi
		mov	ds:dword_4273BC, eax
		lea	eax, [ebp+var_2C]
		mov	[esp+98h+var_94], eax
		call	ds:GetClientRect
		mov	edx, [ebp+var_24]
		mov	[ebp+var_74], edx
		push	eax
		push	eax		; nIndex
		mov	[esp+98h+var_98], 15h
		call	ds:GetSystemMetrics
		push	edx
		mov	edx, [ebp+var_74]
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 101Bh
		sub	edx, eax
		mov	[ebp+var_58], edx
		mov	edx, ds:SendMessageA
		lea	eax, [ebp+var_60]
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_98], edi
		mov	[ebp+var_6C], edx
		call	edx ; SendMessageA
		sub	esp, 10h
		mov	[esp+98h+var_8C], 4000h
		mov	[esp+98h+var_90], 4000h
		mov	[esp+98h+var_94], 1036h
		mov	[esp+98h+var_98], edi
		call	[ebp+var_6C]
		sub	esp, 10h
		test	ebx, ebx
		js	short loc_407061
		mov	[esp+98h+var_8C], ebx
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 1001h
		mov	[esp+98h+var_98], edi
		call	[ebp+var_6C]
		sub	esp, 10h
		mov	[esp+98h+var_8C], ebx
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 1026h
		mov	[esp+98h+var_98], edi
		call	[ebp+var_6C]
		sub	esp, 10h

loc_407061:				; CODE XREF: sub_406EF2+133j
		cmp	[ebp+var_70], 0
		js	short loc_40708A
		mov	eax, [ebp+var_70]
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 1024h
		mov	[esp+98h+var_98], edi
		mov	[esp+98h+var_8C], eax
		call	ds:SendMessageA
		sub	esp, 10h

loc_40708A:				; CODE XREF: sub_406EF2+173j
		mov	edx, [ebp+arg_C]
		mov	eax, esi
		mov	ecx, [edx+30h]
		mov	edx, 1Bh
		call	sub_404B10
		test	byte ptr ds:dword_426B90, 3
		jz	short loc_4070F3
		mov	edx, ds:ShowWindow
		mov	eax, ds:dword_4273AC
		mov	[esp+98h+var_94], 0
		mov	[ebp+var_78], edx
		mov	[esp+98h+var_98], eax
		call	edx ; ShowWindow
		mov	edx, [ebp+var_78]
		test	byte ptr ds:dword_426B90, 2
		push	eax
		push	eax
		jnz	short loc_4070DF
		mov	[esp+98h+var_98], edi
		mov	[esp+98h+var_94], 8
		call	edx
		push	edi
		push	edi
		jmp	short loc_4070E9
; ---------------------------------------------------------------------------

loc_4070DF:				; CODE XREF: sub_406EF2+1DAj
		mov	ds:dword_4273AC, 0

loc_4070E9:				; CODE XREF: sub_406EF2+1EBj
		mov	eax, ds:dword_4273C8
		call	sub_404A16

loc_4070F3:				; CODE XREF: sub_406EF2+1B1j
		mov	[esp+98h+var_98], esi
		mov	[esp+98h+var_94], 3ECh
		call	ds:GetDlgItem
		push	esi
		mov	edi, eax
		push	esi
		mov	esi, ds:SendMessageA
		mov	[esp+98h+var_8C], 75300000h
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 401h
		mov	[esp+98h+var_98], eax
		call	esi ; SendMessageA
		xor	edx, edx
		sub	esp, 10h
		test	byte ptr ds:dword_426B90, 4
		jz	loc_40746A
		mov	eax, [ebp+var_70]
		mov	[ebp+var_78], edx
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 409h
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_98], edi
		call	esi ; SendMessageA
		sub	esp, 10h
		mov	[esp+98h+var_8C], ebx
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 2001h
		mov	[esp+98h+var_98], edi
		call	esi ; SendMessageA
		mov	edx, [ebp+var_78]
		sub	esp, 10h
		jmp	loc_40746A
; ---------------------------------------------------------------------------

loc_407183:				; CODE XREF: sub_406EF2+1Ej
		cmp	ebx, 405h
		jnz	short loc_4071E0
		mov	[esp+98h+var_94], 3ECh
		mov	[esp+98h+var_98], esi
		call	ds:GetDlgItem
		push	edx		; dwStackSize
		push	edx		; lpThreadAttributes
		lea	edx, [ebp+var_1C]
		mov	[esp+98h+var_84], edx
		mov	[esp+98h+var_88], 0
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_90], offset sub_404B4E
		mov	[esp+98h+var_94], 0
		mov	[esp+98h+var_98], 0
		call	ds:CreateThread
		sub	esp, 18h
		mov	[esp+98h+var_98], eax
		call	ds:CloseHandle
		push	ecx		; hWnd
		jmp	loc_407293
; ---------------------------------------------------------------------------

loc_4071E0:				; CODE XREF: sub_406EF2+297j
		cmp	ebx, 111h
		jnz	short loc_40722C
		cmp	word ptr [ebp+arg_8], 403h
		jnz	loc_407293
		mov	edx, ds:ShowWindow
		mov	eax, ds:dword_4273AC
		mov	[esp+98h+var_94], 0
		mov	[ebp+var_78], edx
		mov	[esp+98h+var_98], eax
		call	edx ; ShowWindow
		mov	edx, [ebp+var_78]
		push	eax
		push	eax
		mov	[esp+98h+var_98], edi
		mov	[esp+98h+var_94], 8
		call	edx
		push	eax		; nCmdShow
		push	eax		; hWnd
		mov	eax, edi
		call	sub_404A16
		jmp	short loc_407293
; ---------------------------------------------------------------------------

loc_40722C:				; CODE XREF: sub_406EF2+2F4j
		cmp	ebx, 404h
		jnz	short loc_407293
		cmp	ds:dword_4273A8, 0
		jz	short loc_40724E
		mov	ds:dword_424128, 2
		mov	eax, 78h
		jmp	short loc_40728E
; ---------------------------------------------------------------------------

loc_40724E:				; CODE XREF: sub_406EF2+349j
		mov	eax, ds:dword_426BA0
		mov	[esp+98h+var_94], 8
		mov	[esp+98h+var_98], eax
		call	ds:ShowWindow
		cmp	ds:dword_426B14, 0
		push	eax
		push	eax
		jnz	short loc_407289
		mov	eax, ds:dword_42412C
		mov	[esp+98h+var_94], 0
		mov	eax, [eax+34h]
		mov	[esp+98h+var_98], eax
		call	sub_406DB2
		push	ecx
		push	ecx

loc_407289:				; CODE XREF: sub_406EF2+37Bj
		mov	eax, 1

loc_40728E:				; CODE XREF: sub_406EF2+35Aj
		call	sub_404A75

loc_407293:				; CODE XREF: sub_406EF2+2E9j
					; sub_406EF2+2FCj ...
		cmp	edi, [ebp+arg_8]
		jnz	loc_40745B
		cmp	ebx, 7Bh
		jnz	loc_40745B
		mov	[esp+98h+var_8C], 0
		mov	[esp+98h+var_90], 0
		mov	[esp+98h+var_94], 1004h
		mov	[esp+98h+var_98], edi
		call	ds:SendMessageA
		xor	edx, edx
		sub	esp, 10h
		test	eax, eax
		mov	[ebp+var_70], eax
		jle	loc_40746A
		call	ds:CreatePopupMenu
		mov	[esp+98h+var_94], 0FFFFFFE1h
		mov	[esp+98h+var_98], 0
		mov	ebx, eax
		call	sub_407B23
		push	edx		; uFlags
		push	edx		; hMenu
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_90], 1
		mov	[esp+98h+var_94], 0
		mov	[esp+98h+var_98], ebx
		call	ds:AppendMenuA
		sub	esp, 10h
		cmp	[ebp+arg_C], 0FFFFFFFFh
		jnz	short loc_407334
		lea	eax, [ebp+var_2C]
		mov	[esp+98h+var_94], eax
		mov	[esp+98h+var_98], edi
		call	ds:GetWindowRect
		mov	edx, [ebp+var_28]
		push	eax		; uFlags
		push	eax		; hMenu
		mov	eax, [ebp+var_2C]
		jmp	short loc_40733E
; ---------------------------------------------------------------------------

loc_407334:				; CODE XREF: sub_406EF2+426j
		mov	edx, [ebp+arg_C]
		movsx	eax, word ptr [ebp+arg_C]
		sar	edx, 10h

loc_40733E:				; CODE XREF: sub_406EF2+440j
		mov	[esp+98h+var_8C], edx
		mov	[esp+98h+var_80], 0
		mov	[esp+98h+var_84], esi
		mov	[esp+98h+var_88], 0
		mov	[esp+98h+var_90], eax
		mov	[esp+98h+var_94], 180h
		mov	[esp+98h+var_98], ebx
		call	ds:TrackPopupMenu
		xor	edx, edx
		sub	esp, 1Ch
		dec	eax
		jnz	loc_40746A
		mov	edx, ds:SendMessageA
		mov	esi, 1
		mov	ebx, [ebp+var_70]
		mov	[ebp+var_58], 0
		mov	[ebp+var_4C], offset byte_4230F0
		mov	[ebp+var_48], 0FFFh
		mov	[ebp+var_6C], edx

loc_40739D:				; CODE XREF: sub_406EF2+4CEj
		dec	ebx
		lea	eax, [ebp+var_60]
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_90], ebx
		mov	[esp+98h+var_94], 102Dh
		mov	[esp+98h+var_98], edi
		call	[ebp+var_6C]
		sub	esp, 10h
		test	ebx, ebx
		lea	esi, [eax+esi+2]
		jnz	short loc_40739D
		mov	[esp+98h+var_98], 0
		call	ds:OpenClipboard
		push	eax		; uFlags
		call	ds:EmptyClipboard
		mov	[esp+98h+var_94], esi
		mov	[esp+98h+var_98], 42h
		call	ds:GlobalAlloc
		push	edx
		mov	esi, eax
		push	edx		; hMem
		mov	[esp+98h+var_98], eax
		call	ds:GlobalLock
		mov	edx, eax
		mov	eax, ds:SendMessageA
		push	ecx
		mov	[ebp+var_6C], eax

loc_4073FF:				; CODE XREF: sub_406EF2+540j
		lea	eax, [ebp+var_60]
		mov	[ebp+var_4C], edx
		mov	[esp+98h+var_90], ebx
		inc	ebx
		mov	[ebp+var_78], edx
		mov	[esp+98h+var_8C], eax
		mov	[esp+98h+var_94], 102Dh
		mov	[esp+98h+var_98], edi
		call	[ebp+var_6C]
		mov	edx, [ebp+var_78]
		add	edx, eax
		sub	esp, 10h
		mov	word ptr [edx],	0A0Dh
		add	edx, 2
		cmp	ebx, [ebp+var_70]
		jnz	short loc_4073FF
		mov	[esp+98h+var_98], esi
		call	ds:GlobalUnlock
		push	eax		; uFormat
		mov	[esp+98h+var_94], esi
		mov	[esp+98h+var_98], 1
		call	ds:SetClipboardData
		push	eax
		push	eax
		call	ds:CloseClipboard
		xor	edx, edx
		jmp	short loc_40746A
; ---------------------------------------------------------------------------

loc_40745B:				; CODE XREF: sub_406EF2+3A4j
					; sub_406EF2+3ADj
		mov	edx, [ebp+arg_8]
		mov	eax, ebx
		mov	ecx, [ebp+arg_C]
		call	sub_404E8E
		mov	edx, eax

loc_40746A:				; CODE XREF: sub_406EF2+245j
					; sub_406EF2+28Cj ...
		lea	esp, [ebp-0Ch]
		mov	eax, edx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	10h
sub_406EF2	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407478	proc near		; CODE XREF: sub_40164F+F9Ap
					; start+3A7p

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 48h
		lea	eax, [ebp+var_18]
		mov	[esp+48h+var_24], eax
		mov	eax, [ebp+arg_0]
		mov	ds:dword_42514C, 44h
		mov	[esp+48h+var_28], offset dword_42514C
		mov	[esp+48h+var_2C], 0
		mov	[esp+48h+var_30], 0
		mov	[esp+48h+var_34], 0
		mov	[esp+48h+var_38], 0
		mov	[esp+48h+var_3C], 0
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], eax
		mov	[esp+48h+var_48], 0
		call	ds:CreateProcessA
		xor	edx, edx
		sub	esp, 28h
		test	eax, eax
		jz	short loc_4074F4
		mov	eax, [ebp+var_14]
		mov	[esp+48h+var_48], eax
		call	ds:CloseHandle
		mov	edx, [ebp+var_18]
		push	eax

loc_4074F4:				; CODE XREF: sub_407478+6Aj
		mov	eax, edx
		leave
		retn	4
sub_407478	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4074FA	proc near		; CODE XREF: sub_4038FA+8Dp
					; sub_404B10+2Fp ...
		push	ebp
		mov	eax, ds:SetDlgItemTextA
		mov	ebp, esp
		leave
		jmp	eax
sub_4074FA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407505	proc near		; CODE XREF: sub_404DF4+21p
					; sub_4056A9+3Ap ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_C], 400h
		mov	[esp+18h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_14], eax
		mov	eax, ds:dword_4273C0
		mov	[esp+18h+var_18], eax
		call	ds:GetDlgItemTextA
		sub	esp, 10h
		leave
		retn	8
sub_407505	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407536	proc near		; CODE XREF: sub_40164F+631p
					; sub_40164F+781p ...

var_18		= dword	ptr -18h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		cmp	ds:dword_426B28, 0
		mov	edx, [ebp+arg_4]
		jz	short loc_40754F
		mov	eax, edx
		shr	eax, 15h
		jnz	short locret_4075A6

loc_40754F:				; CODE XREF: sub_407536+10j
		mov	eax, edx
		and	eax, 1FFFFFh
		mov	edx, eax
		xor	edx, 180000h
		cmp	ds:dword_426B30, 0
		mov	dword_40A074, offset dword_426BA8
		mov	[esp+18h+var_18], offset dword_40A064
		cmovnz	eax, edx
		mov	edx, ds:dword_426BA0
		mov	dword_40A078, eax
		mov	dword_40A068, edx
		mov	edx, ds:dword_426BA4
		mov	dword_40A06C, edx
		mov	edx, [ebp+arg_0]
		mov	dword_40A070, edx
		call	ds:MessageBoxIndirectA
		push	edx

locret_4075A6:				; CODE XREF: sub_407536+17j
		leave
		retn	8
sub_407536	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4075AA	proc near		; CODE XREF: sub_40164F+4FCp
					; sub_404264+2Fp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	ds:lstrlenA
		add	eax, ebx
		push	edx		; lpszStart
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	ds:CharPrevA
		push	ecx		; lpString2
		push	ecx		; lpString1
		cmp	byte ptr [eax],	5Ch
		jz	short loc_4075E7
		mov	[esp+18h+var_14], offset byte_40B3DC
		mov	[esp+18h+var_18], ebx
		call	ds:lstrcatA
		push	ecx
		push	ecx

loc_4075E7:				; CODE XREF: sub_4075AA+28j
		mov	eax, ebx
		mov	ebx, [ebp+var_4]
		leave
		retn	4
sub_4075AA	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4075F0	proc near		; CODE XREF: sub_40164F+241p start+DDp ...

var_28		= dword	ptr -28h
var_9		= byte ptr -9
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= byte ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	dl, [ebp+arg_4]
		mov	eax, [ebp+arg_0]
		mov	ebx, ds:CharNextA
		mov	[ebp+var_9], dl
		jmp	short loc_40760E
; ---------------------------------------------------------------------------

loc_407608:				; CODE XREF: sub_4075F0+27j
		mov	[esp+28h+var_28], eax
		call	ebx ; CharNextA
		push	edx

loc_40760E:				; CODE XREF: sub_4075F0+16j
		mov	dl, [eax]
		test	dl, dl
		jz	short loc_407619
		cmp	dl, [ebp+var_9]
		jnz	short loc_407608

loc_407619:				; CODE XREF: sub_4075F0+22j
		mov	ebx, [ebp+var_4]
		leave
		retn	8
sub_4075F0	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407620	proc near		; CODE XREF: sub_403EA7+90p
					; sub_4056A9+2C9p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	ds:lstrlenA
		push	esi		; lpszStart
		mov	esi, ds:CharPrevA
		add	eax, ebx

loc_40763D:				; CODE XREF: sub_407620+2Fj
		cmp	byte ptr [eax],	5Ch
		jz	short loc_407651
		mov	[esp+18h+var_14], eax
		mov	[esp+18h+var_18], ebx
		call	esi ; CharPrevA
		cmp	eax, ebx
		push	ecx
		push	ecx
		ja	short loc_40763D

loc_407651:				; CODE XREF: sub_407620+20j
		mov	byte ptr [eax],	0
		lea	esp, [ebp-8]
		inc	eax
		pop	ebx
		pop	esi
		pop	ebp
		retn	4
sub_407620	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40765E	proc near		; CODE XREF: sub_40164F+4C7p
					; sub_40164F+1305p ...

arg_0		= dword	ptr  8

		push	ebp
		mov	eax, 1
		mov	ebp, esp
		mov	edx, [ebp+arg_0]
		cmp	word ptr [edx],	5C5Ch
		mov	cl, [edx]
		jz	short loc_407688
		or	ecx, 20h
		xor	al, al
		sub	ecx, 61h
		cmp	cl, 19h
		ja	short loc_407688
		xor	eax, eax
		cmp	byte ptr [edx+1], 3Ah
		setz	al

loc_407688:				; CODE XREF: sub_40765E+12j
					; sub_40765E+1Fj
		pop	ebp
		retn	4
sub_40765E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40768C	proc near		; CODE XREF: sub_40164F+216p
					; sub_4056A9+81p ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 1Ch
		mov	esi, [ebp+arg_0]
		mov	ebx, ds:CharNextA
		mov	[esp+28h+var_28], esi
		call	ebx ; CharNextA
		push	ecx		; lpsz
		mov	edi, eax
		mov	[esp+28h+var_28], eax
		call	ebx ; CharNextA
		push	edx
		cmp	byte ptr [esi],	0
		jz	short loc_4076C6
		cmp	word ptr [edi],	5C3Ah
		jnz	short loc_4076C6
		mov	[ebp+arg_0], eax
		lea	esp, [ebp-0Ch]
		mov	edx, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		jmp	edx
; ---------------------------------------------------------------------------

loc_4076C6:				; CODE XREF: sub_40768C+23j
					; sub_40768C+2Aj
		xor	ebx, ebx
		cmp	word ptr [esi],	5C5Ch
		jnz	short loc_407702
		mov	[esp+28h+var_24], 5Ch
		mov	[esp+28h+var_28], eax
		call	sub_4075F0
		push	edx
		push	edx
		cmp	byte ptr [eax],	0
		jz	short loc_407702
		inc	eax
		mov	[esp+28h+var_24], 5Ch
		mov	[esp+28h+var_28], eax
		call	sub_4075F0
		push	edi
		push	edi
		cmp	byte ptr [eax],	0
		lea	edx, [eax+1]
		cmovnz	ebx, edx

loc_407702:				; CODE XREF: sub_40768C+41j
					; sub_40768C+58j
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_40768C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40770E	proc near		; CODE XREF: sub_407F46+1B4p
					; sub_407F46+1E9p

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_20		= byte ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	eax, [ebp+arg_4]
		mov	esi, ds:lstrlenA
		mov	ebx, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		call	esi ; lstrlenA
		mov	[ebp+var_1C], esi
		push	ecx		; lpString1
		mov	edi, eax
		jmp	short loc_407762
; ---------------------------------------------------------------------------

loc_407730:				; CODE XREF: sub_40770E+5Dj
		lea	esi, [ebx+edi]
		mov	eax, [ebp+arg_4]
		mov	dl, [esi]
		mov	byte ptr [esi],	0
		mov	[esp+38h+var_38], ebx
		mov	[esp+38h+var_34], eax
		mov	[ebp+var_20], dl
		call	ds:lstrcmpiA
		push	edx
		test	eax, eax
		push	edx		; lpsz
		mov	dl, [ebp+var_20]
		mov	[esi], dl
		jz	short loc_40776F
		mov	[esp+38h+var_38], ebx
		call	ds:CharNextA
		push	ebx
		mov	ebx, eax

loc_407762:				; CODE XREF: sub_40770E+20j
		mov	[esp+38h+var_38], ebx
		call	[ebp+var_1C]
		cmp	eax, edi
		push	ecx
		jge	short loc_407730
		xor	ebx, ebx

loc_40776F:				; CODE XREF: sub_40770E+46j
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_40770E	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40777B	proc near		; CODE XREF: sub_40164F+1F00p
					; sub_403EA7+13Fp ...

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		xor	eax, eax
		mov	ebp, esp
		push	edi
		mov	ecx, [ebp+arg_4]
		push	esi
		mov	edi, [ebp+arg_8]
		push	ebx
		mov	ebx, [ebp+arg_0]
		jmp	short loc_407795
; ---------------------------------------------------------------------------

loc_40778E:				; CODE XREF: sub_40777B+20j
		mov	dl, [ecx+eax]
		mov	[ebx+eax], dl
		inc	eax

loc_407795:				; CODE XREF: sub_40777B+11j
		mov	esi, edi
		sub	esi, eax
		test	esi, esi
		jg	short loc_40778E
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	0Ch
sub_40777B	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4077A4	proc near		; CODE XREF: sub_40164F+568p
					; sub_40164F+1E05p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 14h
		mov	ebx, [ebp+arg_0]
		mov	[esp+18h+var_18], ebx
		call	ds:GetFileAttributesA
		cmp	eax, 0FFFFFFFFh
		push	edx		; lpFileName
		jz	short loc_4077CF
		and	eax, 0FFFFFFFEh
		mov	[esp+18h+var_18], ebx
		mov	[esp+18h+var_14], eax
		call	ds:SetFileAttributesA
		push	ebx
		push	ebx

loc_4077CF:				; CODE XREF: sub_4077A4+17j
		mov	ebx, [ebp+var_4]
		leave
		retn	4
sub_4077A4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4077D6	proc near		; CODE XREF: sub_40164F+591p
					; sub_40164F+1A6Cp ...

var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 24h
		mov	ebx, [ebp+arg_0]
		mov	[esp+28h+var_28], ebx
		call	ds:GetFileAttributesA
		mov	edx, 0
		cmp	eax, 0FFFFFFFFh
		push	ecx		; lpFileName
		cmovz	eax, edx
		mov	[esp+28h+var_14], eax
		mov	eax, [ebp+arg_8]
		mov	[esp+28h+var_28], ebx
		mov	[esp+28h+var_10], 0
		mov	[esp+28h+var_1C], 0
		mov	[esp+28h+var_18], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+28h+var_20], 1
		mov	[esp+28h+var_24], eax
		call	ds:CreateFileA
		mov	ebx, [ebp+var_4]
		sub	esp, 1Ch
		leave
		retn	0Ch
sub_4077D6	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407832	proc near		; CODE XREF: sub_40164F+49Dp
					; sub_403EA7+29Cp ...

var_48		= dword	ptr -48h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, 65h
		push	ebx
		sub	esp, 3Ch
		mov	ebx, [ebp+arg_0]
		lea	edi, [ebp+var_1C]
		jmp	short loc_407890
; ---------------------------------------------------------------------------

loc_407848:				; CODE XREF: sub_407832+5Fj
		mov	[ebp+var_1C], 61736Eh
		call	ds:GetTickCount
		mov	ecx, 1Ah
		xor	edx, edx
		mov	[esp+48h+var_3C], ebx
		mov	[esp+48h+var_40], 0
		mov	[esp+48h+var_44], edi
		mov	[ebp+var_2C], eax
		div	ecx
		mov	[ebp+var_30], edx
		mov	cl, byte ptr [ebp+var_30]
		add	ecx, 61h
		mov	byte ptr [ebp+var_1C+2], cl
		mov	ecx, [ebp+arg_4]
		mov	[esp+48h+var_48], ecx
		call	ds:GetTempFileNameA
		sub	esp, 10h
		test	eax, eax
		jnz	short loc_407898

loc_407890:				; CODE XREF: sub_407832+14j
		dec	esi
		jnz	short loc_407848
		mov	byte ptr [ebx],	0
		xor	ebx, ebx

loc_407898:				; CODE XREF: sub_407832+5Cj
		lea	esp, [ebp-0Ch]
		mov	eax, ebx
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_407832	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4078A4	proc near		; CODE XREF: sub_405E99+6Ap
					; sub_405E99+A2p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
var_C		= dword	ptr -0Ch
var_4		= dword	ptr -4
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h
arg_C		= dword	ptr  14h
arg_10		= dword	ptr  18h

		push	ebp
		mov	ebp, esp
		push	ebx
		sub	esp, 34h
		mov	ebx, [ebp+arg_C]
		cmp	[ebp+arg_10], 1
		lea	edx, [ebp+var_14]
		sbb	eax, eax
		xor	al, al
		add	eax, 20119h
		mov	byte ptr [ebx],	0
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_4]
		mov	[esp+38h+var_28], edx
		mov	[esp+38h+var_30], 0
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+38h+var_38], eax
		call	ds:RegOpenKeyExA
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_407946
		lea	eax, [ebp+var_10]
		mov	[esp+38h+var_24], eax
		lea	eax, [ebp+var_C]
		mov	[esp+38h+var_2C], eax
		mov	eax, [ebp+arg_8]
		mov	[ebp+var_10], 400h
		mov	[esp+38h+var_28], ebx
		mov	[esp+38h+var_30], 0
		mov	[esp+38h+var_34], eax
		mov	eax, [ebp+var_14]
		mov	[esp+38h+var_38], eax
		call	ds:RegQueryValueExA
		sub	esp, 18h
		test	eax, eax
		jnz	short loc_40792F
		mov	eax, [ebp+var_C]
		dec	eax
		cmp	eax, 1
		jbe	short loc_407932

loc_40792F:				; CODE XREF: sub_4078A4+80j
		mov	byte ptr [ebx],	0

loc_407932:				; CODE XREF: sub_4078A4+89j
		mov	eax, [ebp+var_14]
		mov	byte ptr [ebx+3FFh], 0
		mov	[esp+38h+var_38], eax
		call	ds:RegCloseKey
		push	ebx

loc_407946:				; CODE XREF: sub_4078A4+45j
		mov	ebx, [ebp+var_4]
		leave
		retn	14h
sub_4078A4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40794D	proc near		; CODE XREF: sub_40164F+190p
					; sub_40164F+7EAp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_14], offset aD ; "%d"
		mov	[esp+18h+var_10], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	ds:wsprintfA
		leave
		retn	8
sub_40794D	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407972	proc near		; CODE XREF: sub_401463+24p
					; sub_40160F+18j ...

var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		mov	esi, 1
		push	ebx
		sub	esp, 8
		mov	edx, [ebp+arg_0]
		cmp	byte ptr [edx],	2Dh
		jnz	short loc_40798C
		inc	edx
		or	esi, 0FFFFFFFFh

loc_40798C:				; CODE XREF: sub_407972+14j
		cmp	byte ptr [edx],	30h
		jnz	short loc_4079BE
		mov	al, [edx+1]
		lea	ecx, [eax-30h]
		cmp	cl, 8
		sbb	ebx, ebx
		and	ebx, 0FFFFFFFEh
		add	ebx, 39h
		cmp	cl, 8
		sbb	ecx, ecx
		and	eax, 0FFFFFFDFh
		and	ecx, 0FFFFFFFEh
		add	ecx, 0Ah
		cmp	al, 58h
		jz	short loc_4079B7
		inc	edx
		jmp	short loc_4079C2
; ---------------------------------------------------------------------------

loc_4079B7:				; CODE XREF: sub_407972+40j
		add	edx, 2
		mov	cl, 10h
		jmp	short loc_4079C2
; ---------------------------------------------------------------------------

loc_4079BE:				; CODE XREF: sub_407972+1Dj
		mov	bl, 39h
		mov	cl, 0Ah

loc_4079C2:				; CODE XREF: sub_407972+43j
					; sub_407972+4Aj
		movsx	ebx, bl
		xor	eax, eax
		mov	[ebp+var_10], ebx
		movsx	ebx, cl
		mov	[ebp+var_14], ebx

loc_4079D0:				; CODE XREF: sub_407972+91j
		movsx	ebx, byte ptr [edx]
		inc	edx
		cmp	ebx, 2Fh
		jle	short loc_4079E3
		cmp	ebx, [ebp+var_10]
		jg	short loc_4079E3
		sub	ebx, 30h
		jmp	short loc_4079FD
; ---------------------------------------------------------------------------

loc_4079E3:				; CODE XREF: sub_407972+65j
					; sub_407972+6Aj
		cmp	cl, 10h
		jnz	short loc_407A05
		mov	edi, ebx
		and	edi, 0FFFFFFDFh
		cmp	edi, 40h
		jle	short loc_407A05
		cmp	edi, 46h
		jg	short loc_407A05
		and	ebx, 7
		add	ebx, 9

loc_4079FD:				; CODE XREF: sub_407972+6Fj
		imul	eax, [ebp+var_14]
		add	eax, ebx
		jmp	short loc_4079D0
; ---------------------------------------------------------------------------

loc_407A05:				; CODE XREF: sub_407972+74j
					; sub_407972+7Ej ...
		imul	eax, esi
		pop	esi
		pop	edi
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_407972	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407A11	proc near		; CODE XREF: sub_40164F+2C2p
					; sub_40164F+3F3p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
var_10		= dword	ptr -10h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_4]
		mov	[esp+18h+var_10], 400h
		mov	[esp+18h+var_14], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], eax
		call	ds:lstrcpynA
		sub	esp, 0Ch
		leave
		retn	8
sub_407A11	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407A39	proc near		; CODE XREF: sub_40164F+7DDp
					; sub_40164F+85Cp ...
		push	ebp
		mov	eax, ds:lstrlenA
		mov	ebp, esp
		leave
		jmp	eax
sub_407A39	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407A44	proc near		; CODE XREF: sub_40164F+509p
					; sub_40164F+718p ...
		push	ebp
		mov	eax, ds:lstrcatA
		mov	ebp, esp
		leave
		jmp	eax
sub_407A44	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407A4F	proc near		; CODE XREF: sub_401414+41p
					; sub_40164F+517p ...

var_38		= dword	ptr -38h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 2Ch
		mov	ebx, [ebp+arg_0]
		cmp	byte ptr [ebx],	5Ch
		jnz	short loc_407A76
		cmp	byte ptr [ebx+1], 5Ch
		jnz	short loc_407A76
		cmp	byte ptr [ebx+2], 3Fh
		jnz	short loc_407A76
		cmp	byte ptr [ebx+3], 5Ch
		lea	eax, [ebx+4]
		cmovz	ebx, eax

loc_407A76:				; CODE XREF: sub_407A4F+Fj
					; sub_407A4F+15j ...
		cmp	byte ptr [ebx],	0
		jz	short loc_407A8C
		mov	[esp+38h+var_38], ebx
		call	sub_40765E
		lea	edx, [ebx+2]
		test	eax, eax
		push	ecx
		cmovnz	ebx, edx

loc_407A8C:				; CODE XREF: sub_407A4F+2Aj
		mov	eax, ds:CharNextA
		mov	esi, ebx
		mov	edi, ebx
		mov	[ebp+var_1C], eax
		jmp	short loc_407AEC
; ---------------------------------------------------------------------------

loc_407A9A:				; CODE XREF: sub_407A4F+A1j
		cmp	al, 1Fh
		jbe	short loc_407AE3
		movsx	eax, al
		mov	[esp+38h+var_34], eax
		mov	[esp+38h+var_38], offset a? ; "*?|<>/\":"
		call	sub_4075F0
		push	edx
		push	edx		; lpsz
		cmp	byte ptr [eax],	0
		jnz	short loc_407AE3
		mov	[esp+38h+var_38], edi
		call	ds:CharNextA
		sub	eax, edi
		push	edx
		mov	[esp+38h+var_30], eax
		mov	[esp+38h+var_38], esi
		mov	[esp+38h+var_34], edi
		call	sub_40777B
		sub	esp, 0Ch
		mov	[esp+38h+var_38], esi
		call	ds:CharNextA
		mov	esi, eax
		push	ecx

loc_407AE3:				; CODE XREF: sub_407A4F+4Dj
					; sub_407A4F+67j
		mov	[esp+38h+var_38], edi
		call	[ebp+var_1C]
		mov	edi, eax
		push	ecx		; lpszStart

loc_407AEC:				; CODE XREF: sub_407A4F+49j
		mov	al, [edi]
		test	al, al
		jnz	short loc_407A9A
		mov	edi, ds:CharPrevA
		mov	byte ptr [esi],	0

loc_407AFB:				; CODE XREF: sub_407A4F+C8j
		mov	[esp+38h+var_34], esi
		mov	[esp+38h+var_38], ebx
		call	edi ; CharPrevA
		push	edx
		mov	esi, eax
		push	edx
		mov	al, [eax]
		cmp	al, 5Ch
		jz	short loc_407B12
		cmp	al, 20h
		jnz	short loc_407B19

loc_407B12:				; CODE XREF: sub_407A4F+BDj
		cmp	ebx, esi
		mov	byte ptr [esi],	0
		jb	short loc_407AFB

loc_407B19:				; CODE XREF: sub_407A4F+C1j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_407A4F	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407B23	proc near		; CODE XREF: sub_401414+30p
					; sub_401463+1Ap ...

var_7C		= dword	ptr -7Ch
var_78		= dword	ptr -78h
var_74		= dword	ptr -74h
var_68		= dword	ptr -68h
var_64		= dword	ptr -64h
var_60		= dword	ptr -60h
var_5C		= dword	ptr -5Ch
var_58		= dword	ptr -58h
var_44		= dword	ptr -44h
var_40		= dword	ptr -40h
var_3C		= dword	ptr -3Ch
var_2C		= dword	ptr -2Ch
var_28		= dword	ptr -28h
var_24		= dword	ptr -24h
var_20		= dword	ptr -20h
var_1C		= dword	ptr -1Ch
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 5Ch
		mov	edi, [ebp+arg_4]
		test	edi, edi
		jns	short loc_407B3D
		mov	eax, ds:dword_4273CC
		not	edi
		mov	edi, [eax+edi*4]

loc_407B3D:				; CODE XREF: sub_407B23+Ej
		mov	eax, [ebp+arg_0]
		mov	ebx, offset byte_4273D0
		add	edi, ds:dword_426B64
		sub	eax, offset byte_4273D0
		cmp	eax, 7FFh
		ja	loc_407DC1
		mov	ebx, [ebp+arg_0]
		mov	[ebp+arg_0], 0
		jmp	loc_407DC1
; ---------------------------------------------------------------------------

loc_407B6A:				; CODE XREF: sub_407B23+2B2j
		cmp	al, 0FCh
		jbe	loc_407DAB
		movsx	edx, byte ptr [edi+1]
		movsx	ecx, byte ptr [edi+2]
		add	edi, 3
		mov	esi, edx
		or	esi, 8000h
		mov	[ebp+var_2C], esi
		mov	esi, ecx
		or	esi, 8000h
		cmp	al, 0FEh
		mov	[ebp+var_28], edx
		mov	[ebp+var_24], esi
		mov	[ebp+var_20], ecx
		jnz	loc_407D35
		mov	[ebp+var_44], edx
		mov	[ebp+var_40], ecx
		call	ds:GetVersion
		mov	edx, [ebp+var_44]
		mov	[ebp+var_3C], 1
		mov	ecx, [ebp+var_40]
		test	eax, eax
		jns	short loc_407BDB
		cmp	ax, 5A04h
		jz	short loc_407BDB
		cmp	ecx, 2Eh
		setz	byte ptr [ebp+var_3C]
		cmp	ecx, 23h
		setz	al
		or	byte ptr [ebp+var_3C], al
		movzx	eax, byte ptr [ebp+var_3C]
		mov	[ebp+var_3C], eax

loc_407BDB:				; CODE XREF: sub_407B23+99j
					; sub_407B23+9Fj
		cmp	ds:dword_426B0C, 1
		sbb	esi, esi
		and	esi, 0FFFFFFFEh
		add	esi, 4
		test	dl, 80h
		jz	short loc_407C44
		mov	eax, edx
		and	edx, 3Fh
		add	edx, ds:dword_426B64
		and	eax, 40h
		mov	[ebp+var_40], ecx
		xor	esi, esi
		mov	[esp+68h+var_58], eax
		mov	[esp+68h+var_5C], ebx
		mov	[esp+68h+var_60], edx
		mov	[esp+68h+var_64], offset aSoftwareMicros ; "Software\\Microsoft\\Windows\\CurrentVersi"...
		mov	[esp+68h+var_68], 80000002h
		call	sub_4078A4
		mov	ecx, [ebp+var_40]
		sub	esp, 14h
		cmp	byte ptr [ebx],	0
		jnz	loc_407D0D
		mov	[esp+68h+var_64], ecx
		mov	[esp+68h+var_68], ebx
		call	sub_407B23
		push	eax		; uSize
		push	eax		; lpBuffer
		jmp	loc_407D0D
; ---------------------------------------------------------------------------

loc_407C44:				; CODE XREF: sub_407B23+CAj
		cmp	edx, 25h
		jnz	short loc_407C5C
		mov	[esp+68h+var_68], ebx
		mov	[esp+68h+var_64], 400h
		call	ds:GetSystemDirectoryA
		jmp	short loc_407C76
; ---------------------------------------------------------------------------

loc_407C5C:				; CODE XREF: sub_407B23+124j
		cmp	edx, 24h
		jnz	loc_407D0D
		mov	[esp+68h+var_64], 400h
		mov	[esp+68h+var_68], ebx
		call	ds:GetWindowsDirectoryA

loc_407C76:				; CODE XREF: sub_407B23+137j
		push	esi
		push	esi
		xor	esi, esi
		jmp	loc_407D0D
; ---------------------------------------------------------------------------

loc_407C7F:				; CODE XREF: sub_407B23+1ECj
		dec	esi
		mov	eax, ds:dword_426B9C
		cmp	[ebp+var_3C], 0
		jz	short loc_407CBD
		test	eax, eax
		jz	short loc_407CBD
		mov	edx, [ebp+esi*4+var_2C]
		mov	[esp+68h+var_58], ebx
		mov	[esp+68h+var_5C], 0
		mov	[esp+68h+var_60], 0
		mov	[esp+68h+var_64], edx
		mov	edx, ds:dword_426BA0
		mov	[esp+68h+var_68], edx
		call	eax ; dword_426B9C
		sub	esp, 14h
		test	eax, eax
		jz	short loc_407D15

loc_407CBD:				; CODE XREF: sub_407B23+166j
					; sub_407B23+16Aj
		lea	eax, [ebp+var_1C]
		mov	[esp+7Ch+var_74], eax
		mov	eax, [ebp+esi*4+var_2C]
		mov	[esp+7Ch+var_78], eax
		mov	eax, ds:dword_426BA0
		mov	[esp+7Ch+var_7C], eax
		call	ds:SHGetSpecialFolderLocation
		sub	esp, 0Ch
		test	eax, eax
		jnz	short loc_407D0A
		mov	eax, [ebp+var_1C]
		mov	[esp+7Ch+var_78], ebx
		mov	[esp+7Ch+var_7C], eax
		call	ds:SHGetPathFromIDListA
		push	edx		; lpString2
		push	edx		; pv
		mov	edx, [ebp+var_1C]
		mov	[ebp+var_40], eax
		mov	[esp+7Ch+var_7C], edx
		call	ds:CoTaskMemFree
		mov	eax, [ebp+var_40]
		test	eax, eax
		push	ecx		; lpString1
		jnz	short loc_407D15

loc_407D0A:				; CODE XREF: sub_407B23+1BCj
		mov	byte ptr [ebx],	0

loc_407D0D:				; CODE XREF: sub_407B23+108j
					; sub_407B23+11Cj ...
		test	esi, esi
		jnz	loc_407C7F

loc_407D15:				; CODE XREF: sub_407B23+198j
					; sub_407B23+1E5j
		cmp	byte ptr [ebx],	0
		jz	short loc_407D7E
		cmp	[ebp+var_20], 1Ah
		jnz	short loc_407D7E
		mov	[esp+7Ch+var_78], offset aMicrosoftInter ; "\\Microsoft\\Internet Explorer\\Quick Laun"...
		mov	[esp+7Ch+var_7C], ebx
		call	ds:lstrcatA
		push	eax
		push	eax
		jmp	short loc_407D7E
; ---------------------------------------------------------------------------

loc_407D35:				; CODE XREF: sub_407B23+78j
		mov	esi, ecx
		and	edx, 7Fh
		and	esi, 7Fh
		shl	esi, 7
		or	esi, edx
		cmp	al, 0FDh
		jnz	short loc_407D89
		cmp	esi, 1Dh
		jnz	short loc_407D5E
		mov	eax, ds:dword_426BA0
		mov	[esp+68h+var_68], ebx
		mov	[esp+68h+var_64], eax
		call	sub_40794D
		jmp	short loc_407D74
; ---------------------------------------------------------------------------

loc_407D5E:				; CODE XREF: sub_407B23+226j
		mov	eax, esi
		shl	eax, 0Ah
		add	eax, offset dword_42A000
		mov	[esp+68h+var_64], eax
		mov	[esp+68h+var_68], ebx
		call	sub_407A11

loc_407D74:				; CODE XREF: sub_407B23+239j
		sub	esi, 15h
		cmp	esi, 6
		push	eax
		push	eax
		ja	short loc_407D9D

loc_407D7E:				; CODE XREF: sub_407B23+1F5j
					; sub_407B23+1FBj ...
		mov	[esp+68h+var_68], ebx
		call	sub_407A4F
		push	eax
		jmp	short loc_407D9D
; ---------------------------------------------------------------------------

loc_407D89:				; CODE XREF: sub_407B23+221j
		inc	al
		jnz	short loc_407D9D
		not	esi
		mov	[esp+68h+var_64], esi
		mov	[esp+68h+var_68], ebx
		call	sub_407B23
		push	eax
		push	eax		; lpString

loc_407D9D:				; CODE XREF: sub_407B23+259j
					; sub_407B23+264j ...
		mov	[esp+68h+var_68], ebx
		call	ds:lstrlenA
		add	ebx, eax
		push	esi
		jmp	short loc_407DC1
; ---------------------------------------------------------------------------

loc_407DAB:				; CODE XREF: sub_407B23+49j
		lea	edx, [ebx+1]
		jnz	short loc_407DBC
		mov	al, [edi+1]
		add	edi, 2
		mov	[ebx], al
		mov	ebx, edx
		jmp	short loc_407DC1
; ---------------------------------------------------------------------------

loc_407DBC:				; CODE XREF: sub_407B23+28Bj
		mov	[ebx], al
		inc	edi
		mov	ebx, edx

loc_407DC1:				; CODE XREF: sub_407B23+32j
					; sub_407B23+42j ...
		mov	al, [edi]
		test	al, al
		jz	short loc_407DDB
		mov	edx, ebx
		sub	edx, offset byte_4273D0
		cmp	edx, 3FFh
		jle	loc_407B6A

loc_407DDB:				; CODE XREF: sub_407B23+2A2j
		cmp	[ebp+arg_0], 0
		mov	eax, offset byte_4273D0
		mov	byte ptr [ebx],	0
		jz	short loc_407DFA
		mov	[esp+68h+var_64], eax
		mov	eax, [ebp+arg_0]
		mov	[esp+68h+var_68], eax
		call	sub_407A11
		push	ebx
		push	ebx

loc_407DFA:				; CODE XREF: sub_407B23+2C4j
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_407B23	endp ; sp-analysis failed


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407E04	proc near		; CODE XREF: sub_40164F+2F4p
					; sub_40164F+359p ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		sub	esp, 18h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_14], offset dword_426590
		mov	[esp+18h+var_18], eax
		call	ds:FindFirstFileA
		push	edx
		push	edx		; hFindFile
		xor	edx, edx
		cmp	eax, 0FFFFFFFFh
		jz	short loc_407E36
		mov	[esp+18h+var_18], eax
		call	ds:FindClose
		mov	edx, offset dword_426590
		push	eax

loc_407E36:				; CODE XREF: sub_407E04+21j
		mov	eax, edx
		leave
		retn	4
sub_407E04	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407E3C	proc near		; CODE XREF: start+568p
					; sub_4056A9+24Bp ...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	eax, [ebp+arg_0]
		mov	[esp+18h+var_18], offset dword_425590
		mov	[esp+18h+var_14], eax
		call	sub_407A11
		push	ebx
		push	ebx
		mov	[esp+18h+var_18], offset dword_425590
		call	sub_40768C
		mov	ebx, eax
		xor	eax, eax
		test	ebx, ebx
		push	esi
		jz	short loc_407EEA
		mov	[esp+18h+var_18], ebx
		call	sub_407A4F
		test	byte ptr ds:dword_426B90, 80h
		push	ecx
		jz	short loc_407EAA
		mov	al, [ebx]
		cmp	al, 5Ch
		jz	short loc_407EE8
		test	al, al
		jnz	short loc_407EAA
		jmp	short loc_407EE8
; ---------------------------------------------------------------------------

loc_407E8C:				; CODE XREF: sub_407E3C+8Dj
		call	sub_407E04
		test	eax, eax
		push	edx
		jz	short loc_407E9B
		test	byte ptr [eax],	10h
		jz	short loc_407EE8

loc_407E9B:				; CODE XREF: sub_407E3C+58j
		mov	[esp+18h+var_18], offset dword_425590
		call	sub_407620
		push	ecx		; lpString
		jmp	short loc_407EB6
; ---------------------------------------------------------------------------

loc_407EAA:				; CODE XREF: sub_407E3C+42j
					; sub_407E3C+4Cj
		mov	esi, ds:lstrlenA
		sub	ebx, offset dword_425590

loc_407EB6:				; CODE XREF: sub_407E3C+6Cj
		mov	[esp+18h+var_18], offset dword_425590
		call	esi ; lstrlenA
		cmp	eax, ebx
		push	edx
		mov	[esp+18h+var_18], offset dword_425590
		jg	short loc_407E8C
		call	sub_4075AA
		push	ecx		; lpFileName
		mov	[esp+18h+var_18], offset dword_425590
		call	ds:GetFileAttributesA
		inc	eax
		setnz	al
		push	ebx
		movzx	eax, al
		jmp	short loc_407EEA
; ---------------------------------------------------------------------------

loc_407EE8:				; CODE XREF: sub_407E3C+48j
					; sub_407E3C+4Ej ...
		xor	eax, eax

loc_407EEA:				; CODE XREF: sub_407E3C+30j
					; sub_407E3C+AAj
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn	4
sub_407E3C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_407EF3	proc near		; CODE XREF: sub_4014F3+C5p start+3Ap	...

var_18		= dword	ptr -18h
var_14		= dword	ptr -14h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	esi
		push	ebx
		sub	esp, 10h
		mov	ebx, [ebp+arg_0]
		mov	esi, off_40A01C[ebx*8]
		mov	[esp+18h+var_18], esi
		call	ds:GetModuleHandleA
		test	eax, eax
		push	edx		; lpLibFileName
		mov	edx, eax
		jnz	short loc_407F27
		mov	[esp+18h+var_18], esi
		call	ds:LoadLibraryA
		mov	edx, eax
		xor	eax, eax
		test	edx, edx
		push	ecx		; hModule
		jz	short loc_407F3D

loc_407F27:				; CODE XREF: sub_407EF3+20j
		mov	eax, off_40A020[ebx*8]
		mov	[esp+18h+var_18], edx
		mov	[esp+18h+var_14], eax
		call	ds:GetProcAddress
		push	edx
		push	edx

loc_407F3D:				; CODE XREF: sub_407EF3+32j
		lea	esp, [ebp-8]
		pop	ebx
		pop	esi
		pop	ebp
		retn	4
sub_407EF3	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

; int __stdcall	sub_407F46(HANDLE lpBuffer, int)
sub_407F46	proc near		; CODE XREF: sub_40164F+371p
					; start+37Cp ...

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= dword	ptr -34h
var_30		= dword	ptr -30h
var_2C		= dword	ptr -2Ch
var_1C		= dword	ptr -1Ch
lpBuffer	= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, [ebp+lpBuffer]
		mov	ebx, [ebp+arg_4]
		mov	[esp+58h+var_58], 1
		call	sub_407EF3
		test	eax, eax
		push	edx
		jz	short loc_407F82
		mov	[esp+58h+var_50], 5
		mov	[esp+58h+var_54], ebx
		mov	[esp+58h+var_58], esi
		call	eax
		sub	esp, 0Ch
		test	eax, eax
		jnz	loc_4081D7

loc_407F82:				; CODE XREF: sub_407F46+1Ej
		test	ebx, ebx
		mov	ds:dword_425990, 4C554Eh
		jz	short loc_407FE4
		mov	[esp+58h+var_50], 1
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], ebx
		call	sub_4077D6
		sub	esp, 0Ch
		mov	[esp+58h+var_58], eax
		call	ds:CloseHandle
		push	eax		; lpszLongPath
		mov	[esp+58h+var_50], 400h
		mov	[esp+58h+var_54], offset dword_425990
		mov	[esp+58h+var_58], ebx
		call	ds:GetShortPathNameA
		sub	esp, 0Ch
		cmp	eax, 400h
		jg	loc_4081DD
		test	eax, eax
		jz	loc_4081DD

loc_407FE4:				; CODE XREF: sub_407F46+48j
		mov	[esp+58h+var_50], 400h
		mov	[esp+58h+var_54], offset dword_425D90
		mov	[esp+58h+var_58], esi
		call	ds:GetShortPathNameA
		sub	esp, 0Ch
		cmp	eax, 400h
		jg	loc_4081DD
		test	eax, eax
		jz	loc_4081DD
		mov	[esp+58h+var_4C], offset dword_425D90
		mov	[esp+58h+var_50], offset dword_425990
		mov	[esp+58h+var_54], offset aSS ; "%s=%s\r\n"
		mov	[esp+58h+var_58], offset dword_426190
		call	ds:wsprintfA
		mov	[ebp+var_2C], eax
		mov	eax, ds:hInstance
		mov	eax, [eax+128h]
		mov	[esp+58h+var_58], offset dword_425D90
		mov	[esp+58h+var_54], eax
		call	sub_407B23
		push	edi
		push	edi
		mov	[esp+58h+var_50], 4
		mov	[esp+58h+var_54], 0C0000000h
		mov	[esp+58h+var_58], offset dword_425D90
		call	sub_4077D6
		sub	esp, 0Ch
		cmp	eax, 0FFFFFFFFh
		mov	edi, eax
		jz	loc_4081D7
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], eax
		call	ds:GetFileSize
		mov	edx, [ebp+var_2C]
		push	ecx		; dwBytes
		mov	ebx, eax
		push	ecx		; uFlags
		lea	eax, [eax+edx+0Ah]
		mov	[esp+58h+var_54], eax
		mov	[esp+58h+var_58], 40h
		call	ds:GlobalAlloc
		test	eax, eax
		push	esi		; lpBuffer
		push	esi		; hFile
		mov	esi, eax
		jz	loc_4081CD
		lea	eax, [ebp+var_1C]
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_50], ebx
		mov	[esp+58h+var_54], esi
		mov	[esp+58h+var_58], edi
		call	ds:ReadFile
		sub	esp, 14h
		test	eax, eax
		jz	loc_4081CD
		cmp	ebx, [ebp+var_1C]
		jnz	loc_4081CD
		mov	[esp+58h+var_54], offset aRename ; "[Rename]\r\n"
		mov	[esp+58h+var_58], esi
		call	sub_40770E
		test	eax, eax
		push	edx
		push	edx
		jnz	short loc_408121
		lea	eax, [esi+ebx]
		add	ebx, 0Ah
		mov	[esp+58h+var_54], offset aRename ; "[Rename]\r\n"
		mov	[esp+58h+var_58], eax
		call	sub_407A11
		push	ecx
		push	ecx
		mov	ecx, ebx
		jmp	short loc_40815D
; ---------------------------------------------------------------------------

loc_408121:				; CODE XREF: sub_407F46+1BDj
		add	eax, 0Ah
		mov	[esp+58h+var_54], offset asc_40B3EF ; "\n["
		mov	[esp+58h+var_58], eax
		call	sub_40770E
		mov	ecx, ebx
		push	edx
		test	eax, eax
		push	edx
		jz	short loc_40815D
		lea	ecx, [eax+1]
		lea	edx, [esi+ebx]
		mov	[ebp+var_30], ecx
		mov	[ebp+var_34], edx
		jmp	short loc_408152
; ---------------------------------------------------------------------------

loc_40814A:				; CODE XREF: sub_407F46+210j
		mov	cl, [eax]
		mov	edx, [ebp+var_2C]
		mov	[eax+edx], cl

loc_408152:				; CODE XREF: sub_407F46+202j
		inc	eax
		cmp	eax, [ebp+var_34]
		jb	short loc_40814A
		mov	ecx, [ebp+var_30]
		sub	ecx, esi

loc_40815D:				; CODE XREF: sub_407F46+1D9j
					; sub_407F46+1F4j
		mov	eax, [ebp+var_2C]
		add	ecx, esi
		mov	[esp+58h+var_58], ecx
		mov	[esp+58h+var_54], offset dword_426190
		mov	[esp+58h+var_50], eax
		call	sub_40777B
		add	ebx, [ebp+var_2C]
		sub	esp, 0Ch
		mov	[esp+58h+var_4C], 0
		mov	[esp+58h+var_50], 0
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], edi
		call	ds:SetFilePointer
		lea	eax, [ebp+var_1C]
		sub	esp, 10h
		mov	[esp+58h+var_50], ebx
		mov	[esp+58h+var_48], 0
		mov	[esp+58h+var_4C], eax
		mov	[esp+58h+var_54], esi
		mov	[esp+58h+var_58], edi
		call	ds:WriteFile
		sub	esp, 14h
		mov	[esp+58h+var_58], esi
		call	ds:GlobalFree
		push	ebx		; hObject

loc_4081CD:				; CODE XREF: sub_407F46+16Fj
					; sub_407F46+19Aj ...
		mov	[esp+58h+var_58], edi
		call	ds:CloseHandle
		push	ecx

loc_4081D7:				; CODE XREF: sub_407F46+36j
					; sub_407F46+136j
		inc	ds:dword_426B18

loc_4081DD:				; CODE XREF: sub_407F46+90j
					; sub_407F46+98j ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_407F46	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4081E7	proc near		; CODE XREF: sub_40164F+75Cp
					; sub_40164F+7C0p ...

var_178		= dword	ptr -178h
var_174		= dword	ptr -174h
var_164		= dword	ptr -164h
var_160		= dword	ptr -160h
var_15C		= dword	ptr -15Ch
var_158		= byte ptr -158h
var_12C		= byte ptr -12Ch
var_28		= byte ptr -28h
arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 16Ch
		mov	ebx, [ebp+arg_0]
		mov	esi, [ebp+arg_4]
		mov	[esp+178h+var_178], ebx
		call	sub_407E3C
		test	esi, 8
		mov	[ebp+var_15C], eax
		push	ecx		; lpFileName
		jz	short loc_408235
		mov	esi, ds:dword_426B10
		mov	[esp+178h+var_178], ebx
		call	ds:DeleteFileA
		test	eax, eax
		setz	al
		movzx	eax, al
		add	esi, eax
		push	edx
		mov	ds:dword_426B10, esi
		jmp	loc_40848A
; ---------------------------------------------------------------------------

loc_408235:				; CODE XREF: sub_4081E7+27j
		mov	eax, esi
		and	eax, 1
		mov	[ebp+var_160], eax
		jz	short loc_40825B
		cmp	[ebp+var_15C], 0
		jz	loc_408470
		test	esi, 2
		jz	loc_40841A

loc_40825B:				; CODE XREF: sub_4081E7+59j
		mov	[esp+178h+var_174], ebx
		mov	[esp+178h+var_178], offset byte_425190
		call	sub_407A11
		cmp	[ebp+var_160], 0
		push	eax		; lpString2
		push	eax		; lpString1
		jz	short loc_40828F
		mov	[esp+178h+var_174], offset a_ ;	"\\*.*"
		mov	[esp+178h+var_178], offset byte_425190
		call	ds:lstrcatA
		push	eax		; lpString2
		push	eax
		jmp	short loc_408298
; ---------------------------------------------------------------------------

loc_40828F:				; CODE XREF: sub_4081E7+8Dj
		mov	[esp+178h+var_178], ebx
		call	sub_407620
		push	eax		; lpString1

loc_408298:				; CODE XREF: sub_4081E7+A6j
		cmp	byte ptr [ebx],	0
		jnz	short loc_4082A6
		cmp	ds:byte_425190,	5Ch
		jnz	short loc_4082B9

loc_4082A6:				; CODE XREF: sub_4081E7+B4j
		mov	[esp+178h+var_174], offset byte_40B3DC
		mov	[esp+178h+var_178], ebx
		call	ds:lstrcatA
		push	eax		; lpFindFileData
		push	eax		; lpString

loc_4082B9:				; CODE XREF: sub_4081E7+BDj
		mov	[esp+178h+var_178], ebx
		call	ds:lstrlenA
		add	eax, ebx
		push	ecx		; lpFileName
		mov	[ebp+var_164], eax
		lea	eax, [ebp+var_158]
		mov	[esp+178h+var_174], eax
		mov	[esp+178h+var_178], offset byte_425190
		call	ds:FindFirstFileA
		cmp	eax, 0FFFFFFFFh
		push	edi
		push	edi
		mov	edi, eax
		jz	loc_4083FA

loc_4082EF:				; CODE XREF: sub_4081E7+203j
		lea	eax, [ebp+var_12C]
		mov	[esp+178h+var_174], 3Fh
		mov	[esp+178h+var_178], eax
		call	sub_4075F0
		push	edx
		push	edx
		cmp	byte ptr [eax],	0
		jz	short loc_408316
		mov	dl, [ebp+var_28]
		lea	eax, [ebp+var_28]
		test	dl, dl
		jnz	short loc_408322

loc_408316:				; CODE XREF: sub_4081E7+123j
		mov	dl, [ebp+var_12C]
		lea	eax, [ebp+var_12C]

loc_408322:				; CODE XREF: sub_4081E7+12Dj
		cmp	dl, 2Eh
		jnz	short loc_408341
		mov	dl, [eax+1]
		test	dl, dl
		jz	loc_4083D3
		cmp	dl, 2Eh
		jnz	short loc_408341
		cmp	byte ptr [eax+2], 0
		jz	loc_4083D3

loc_408341:				; CODE XREF: sub_4081E7+13Ej
					; sub_4081E7+14Ej
		mov	[esp+178h+var_174], eax
		mov	eax, [ebp+var_164]
		mov	[esp+178h+var_178], eax
		call	sub_407A11
		test	[ebp+var_158], 10h
		push	ecx
		push	ecx
		jz	short loc_408376
		mov	eax, esi
		and	eax, 3
		cmp	eax, 3
		jnz	short loc_4083D3
		mov	[esp+178h+var_174], esi
		mov	[esp+178h+var_178], ebx
		call	sub_4081E7
		jmp	short loc_4083D1
; ---------------------------------------------------------------------------

loc_408376:				; CODE XREF: sub_4081E7+175j
		mov	[esp+178h+var_178], ebx
		call	sub_4077A4
		push	eax		; lpFileName
		mov	[esp+178h+var_178], ebx
		call	ds:DeleteFileA
		test	eax, eax
		push	edx
		jnz	short loc_4083C1
		test	esi, 4
		jz	short loc_4083B9
		mov	[esp+178h+var_174], ebx
		mov	[esp+178h+var_178], 0FFFFFFF1h
		call	sub_406DB2
		push	eax		; int
		push	eax		; lpBuffer
		mov	[esp+178h+var_178], ebx
		mov	[esp+178h+var_174], 0
		call	sub_407F46
		jmp	short loc_4083D1
; ---------------------------------------------------------------------------

loc_4083B9:				; CODE XREF: sub_4081E7+1ACj
		inc	ds:dword_426B10
		jmp	short loc_4083D3
; ---------------------------------------------------------------------------

loc_4083C1:				; CODE XREF: sub_4081E7+1A4j
		mov	[esp+178h+var_174], ebx
		mov	[esp+178h+var_178], 0FFFFFFF2h
		call	sub_406DB2

loc_4083D1:				; CODE XREF: sub_4081E7+18Dj
					; sub_4081E7+1D0j
		push	ecx		; lpFindFileData
		push	ecx		; hFindFile

loc_4083D3:				; CODE XREF: sub_4081E7+145j
					; sub_4081E7+154j ...
		lea	eax, [ebp+var_158]
		mov	[esp+178h+var_174], eax
		mov	[esp+178h+var_178], edi
		call	ds:FindNextFileA
		test	eax, eax
		push	edx
		push	edx		; hFindFile
		jnz	loc_4082EF
		mov	[esp+178h+var_178], edi
		call	ds:FindClose
		push	edi

loc_4083FA:				; CODE XREF: sub_4081E7+102j
		cmp	[ebp+var_160], 0
		jz	loc_40848A
		mov	eax, [ebp+var_164]
		cmp	[ebp+var_15C], 0
		mov	byte ptr [eax-1], 0
		jz	short loc_408470

loc_40841A:				; CODE XREF: sub_4081E7+6Ej
		mov	[esp+178h+var_178], ebx
		call	sub_407E04
		test	eax, eax
		push	ecx
		jz	short loc_40848A
		mov	[esp+178h+var_178], ebx
		call	sub_4075AA
		push	edi
		mov	[esp+178h+var_178], ebx
		call	sub_4077A4
		push	eax		; lpPathName
		mov	[esp+178h+var_178], ebx
		call	ds:RemoveDirectoryA
		test	eax, eax
		push	edx
		jnz	short loc_408478
		and	esi, 4
		jz	short loc_408470
		mov	[esp+178h+var_174], ebx
		mov	[esp+178h+var_178], 0FFFFFFF1h
		call	sub_406DB2
		push	esi		; int
		push	esi		; lpBuffer
		mov	[esp+178h+var_178], ebx
		mov	[esp+178h+var_174], 0
		call	sub_407F46
		jmp	short loc_408488
; ---------------------------------------------------------------------------

loc_408470:				; CODE XREF: sub_4081E7+62j
					; sub_4081E7+231j ...
		inc	ds:dword_426B10
		jmp	short loc_40848A
; ---------------------------------------------------------------------------

loc_408478:				; CODE XREF: sub_4081E7+25Ej
		mov	[esp+178h+var_174], ebx
		mov	[esp+178h+var_178], 0FFFFFFE5h
		call	sub_406DB2

loc_408488:				; CODE XREF: sub_4081E7+287j
		push	ecx
		push	ecx

loc_40848A:				; CODE XREF: sub_4081E7+49j
					; sub_4081E7+21Aj ...
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	8
sub_4081E7	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_408494	proc near		; CODE XREF: sub_40164F+FBFp
					; sub_40399A+3Fp

var_58		= dword	ptr -58h
var_54		= dword	ptr -54h
var_50		= dword	ptr -50h
var_4C		= dword	ptr -4Ch
var_48		= dword	ptr -48h
var_34		= byte ptr -34h
arg_0		= dword	ptr  8

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		sub	esp, 4Ch
		mov	esi, [ebp+arg_0]
		lea	ebx, [ebp+var_34]
		mov	edi, ds:PeekMessageA
		jmp	short loc_4084B5
; ---------------------------------------------------------------------------

loc_4084AB:				; CODE XREF: sub_408494+43j
		mov	[esp+58h+var_58], ebx
		call	ds:DispatchMessageA
		push	eax		; lpMsg

loc_4084B5:				; CODE XREF: sub_408494+15j
		mov	[esp+58h+var_48], 1
		mov	[esp+58h+var_4C], esi
		mov	[esp+58h+var_50], esi
		mov	[esp+58h+var_54], 0
		mov	[esp+58h+var_58], ebx
		call	edi ; PeekMessageA
		sub	esp, 14h
		test	eax, eax
		jnz	short loc_4084AB
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn	4
sub_408494	endp

; ---------------------------------------------------------------------------
		align 4

; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_4084E4	proc near		; CODE XREF: sub_403EA7+1EAp

arg_0		= dword	ptr  8
arg_4		= dword	ptr  0Ch
arg_8		= dword	ptr  10h

		push	ebp
		cmp	ds:dword_4266D4, 0
		mov	ebp, esp
		push	edi
		mov	ecx, [ebp+arg_4]
		push	esi
		push	ebx
		mov	ebx, [ebp+arg_8]
		jnz	short loc_408525
		xor	edx, edx

loc_4084FB:				; CODE XREF: sub_4084E4+3Fj
		mov	eax, edx
		mov	esi, 8

loc_408502:				; CODE XREF: sub_4084E4+2Fj
		mov	edi, eax
		and	eax, 1
		neg	eax
		shr	edi, 1
		and	eax, 0EDB88320h
		xor	eax, edi
		dec	esi
		jnz	short loc_408502
		mov	ds:dword_4266D0[edx*4],	eax
		inc	edx
		cmp	edx, 100h
		jnz	short loc_4084FB

loc_408525:				; CODE XREF: sub_4084E4+13j
		mov	eax, [ebp+arg_0]
		not	eax
		jmp	short loc_40853F
; ---------------------------------------------------------------------------

loc_40852C:				; CODE XREF: sub_4084E4+5Dj
		mov	dl, [ecx]
		dec	ebx
		inc	ecx
		xor	edx, eax
		movzx	edx, dl
		shr	eax, 8
		xor	eax, ds:dword_4266D0[edx*4]

loc_40853F:				; CODE XREF: sub_4084E4+46j
		test	ebx, ebx
		jnz	short loc_40852C
		pop	ebx
		not	eax
		pop	esi
		pop	edi
		pop	ebp
		retn	0Ch
sub_4084E4	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_40854C	proc near		; CODE XREF: sub_403EA7+28Cp
		push	ebp
		mov	eax, 80h
		mov	ebp, esp

loc_408554:				; CODE XREF: sub_40854C+Fj
		dec	eax
		test	eax, eax
		mov	byte ptr [ecx+eax], 0
		jnz	short loc_408554
		mov	dword ptr [ecx+68h], 1
		mov	dword ptr [ecx+64h], 1
		mov	dword ptr [ecx+60h], 1
		mov	dword ptr [ecx+5Ch], 1
		mov	dword ptr [ecx+78h], 0FFFFFFFFh
		pop	ebp
		retn
sub_40854C	endp


; =============== S U B	R O U T	I N E =======================================

; Attributes: bp-based frame

sub_408582	proc near		; CODE XREF: sub_403B03+115p

var_148		= dword	ptr -148h
var_144		= dword	ptr -144h
var_134		= dword	ptr -134h
var_130		= dword	ptr -130h
var_12C		= dword	ptr -12Ch
var_128		= dword	ptr -128h
var_124		= dword	ptr -124h
var_120		= dword	ptr -120h
var_11C		= dword	ptr -11Ch
var_118		= dword	ptr -118h
var_114		= dword	ptr -114h
var_110		= dword	ptr -110h
var_10C		= dword	ptr -10Ch
var_108		= dword	ptr -108h
var_104		= dword	ptr -104h
var_100		= dword	ptr -100h
var_FC		= dword	ptr -0FCh
var_F8		= dword	ptr -0F8h
var_F2		= byte ptr -0F2h
var_F1		= byte ptr -0F1h
var_F0		= dword	ptr -0F0h
var_EC		= dword	ptr -0ECh
var_E8		= dword	ptr -0E8h
var_E4		= dword	ptr -0E4h
var_E0		= dword	ptr -0E0h
var_DC		= dword	ptr -0DCh
var_D8		= dword	ptr -0D8h
var_D4		= dword	ptr -0D4h
var_D0		= dword	ptr -0D0h
var_CC		= dword	ptr -0CCh
var_C8		= dword	ptr -0C8h
var_C4		= dword	ptr -0C4h
var_C0		= dword	ptr -0C0h
var_BC		= dword	ptr -0BCh
var_B8		= dword	ptr -0B8h
var_B4		= dword	ptr -0B4h
var_B0		= dword	ptr -0B0h
var_AC		= dword	ptr -0ACh
var_A0		= byte ptr -0A0h

		push	ebp
		mov	ebp, esp
		push	edi
		push	esi
		push	ebx
		mov	ebx, ecx
		sub	esp, 13Ch
		mov	ecx, 22h
		lea	edi, [ebp+var_A0]
		mov	esi, ebx
		rep movsd
		mov	eax, [ebx+4]
		mov	ecx, [ebx+8]
		mov	edx, [ebx]
		mov	[ebp+var_EC], eax
		mov	eax, [ebx+0Ch]
		mov	[ebp+var_11C], ecx
		mov	ecx, [ebx+10h]
		mov	[ebp+var_114], eax
		mov	eax, [ebx+14h]
		mov	[ebp+var_128], ecx
		mov	ecx, [ebx+18h]
		mov	[ebp+var_E0], eax
		mov	eax, [ebx+1Ch]
		mov	[ebp+var_B8], ecx
		mov	ecx, [ebx+20h]
		mov	[ebp+var_B4], eax
		mov	eax, [ebx+24h]
		mov	[ebp+var_100], ecx
		mov	ecx, [ebx+28h]
		mov	[ebp+var_104], eax
		mov	al, [ebx+2Ch]
		mov	[ebp+var_FC], ecx
		mov	cl, [ebx+2Dh]
		mov	[ebp+var_F1], al
		mov	eax, [ebx+30h]
		mov	[ebp+var_F2], cl
		mov	[ebp+var_CC], eax
		mov	ecx, [ebx+38h]
		mov	eax, [ebx+34h]
		mov	[ebp+var_D8], ecx
		mov	ecx, [ebx+40h]
		mov	[ebp+var_BC], eax
		mov	eax, [ebx+3Ch]
		mov	[ebp+var_C4], ecx
		mov	ecx, [ebx+48h]
		mov	[ebp+var_110], eax
		mov	eax, [ebx+44h]
		mov	[ebp+var_B0], ecx
		mov	ecx, [ebx+4Ch]
		mov	[ebp+var_AC], eax
		mov	eax, [ebx+50h]
		mov	[ebp+var_118], ecx
		mov	ecx, [ebx+54h]
		mov	[ebp+var_C0], eax
		mov	eax, [ebx+58h]
		mov	[ebp+var_120], ecx
		mov	ecx, [ebx+5Ch]
		mov	[ebp+var_E4], eax
		mov	eax, [ebx+60h]
		mov	[ebp+var_C8], ecx
		mov	ecx, [ebx+64h]
		mov	[ebp+var_108], eax
		mov	eax, [ebx+68h]
		mov	[ebp+var_10C], ecx
		mov	ecx, [ebx+6Ch]
		mov	[ebp+var_124], eax
		mov	eax, [ebx+70h]
		mov	[ebp+var_12C], ecx
		mov	ecx, [ebx+74h]
		mov	[ebp+var_130], eax
		mov	[ebp+var_F0], ecx
		mov	eax, [ebx+78h]
		cmp	[ebp+var_E4], 0FFFFFFFFh
		mov	[ebp+var_D0], eax
		mov	eax, [ebx+7Ch]
		mov	[ebp+var_D4], eax
		mov	eax, [ebx+80h]
		mov	[ebp+var_F8], eax
		mov	eax, [ebx+84h]
		mov	[ebp+var_DC], eax
		mov	eax, 1
		jz	loc_409813
		mov	[ebp+var_E8], ebx
		mov	edi, [ebp+var_D0]
		mov	esi, [ebp+var_D4]
		mov	ebx, [ebp+var_BC]

loc_408703:				; CODE XREF: sub_408582+D80j
					; sub_408582+DB9j ...
		cmp	edx, 1Ch	; switch 29 cases
		ja	loc_409810	; jumptable 00408722 default case
		mov	ecx, [ebp+var_118]
		mov	[ebp+var_D4], 8
		sub	[ebp+var_D4], ecx

loc_408722:				; CODE XREF: sub_408582+D1Cj
		jmp	ds:off_40B528[edx*4] ; switch jump

loc_408729:				; DATA XREF: .rdata:off_40B528o
		mov	ebx, [ebp+var_CC] ; jumptable 00408722 case 17
		jmp	loc_408F87
; ---------------------------------------------------------------------------

loc_408734:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 0
		jz	loc_4096AB
		mov	edx, [ebp+var_B8]
		mov	al, [edx]
		cmp	al, 0E1h
		ja	loc_409810	; jumptable 00408722 default case
		mov	dl, 2Dh
		movzx	eax, al
		div	dl
		mov	dl, 9
		movzx	ecx, al
		mov	byte ptr [ebp+var_BC], al
		mov	byte ptr [ebp+var_C4], ah
		movzx	eax, byte ptr [ebp+var_C4]
		div	dl
		mov	edx, 300h
		movzx	eax, ah
		movzx	eax, al
		add	ecx, eax
		mov	[ebp+var_118], eax
		mov	eax, [ebp+var_128]
		shl	edx, cl
		add	edx, 736h
		lea	ecx, [edx+edx]
		mov	[ebp+var_B0], ecx
		cmp	ecx, eax
		jz	short loc_408813
		cmp	[ebp+var_DC], 0
		jz	short loc_4087C5
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_134], edx
		mov	[esp+148h+var_148], eax
		call	ds:GlobalFree
		mov	edx, [ebp+var_134]
		push	ecx		; uFlags

loc_4087C5:				; CODE XREF: sub_408582+225j
		mov	ecx, [ebp+var_B0]
		mov	[ebp+var_134], edx
		mov	[esp+148h+var_148], 40h
		mov	[esp+148h+var_144], ecx
		call	ds:GlobalAlloc
		test	eax, eax
		push	edx		; dwBytes
		push	edx		; hMem
		mov	edx, [ebp+var_134]
		mov	[ebp+var_DC], eax
		jz	loc_409810	; jumptable 00408722 default case
		mov	ecx, [ebp+var_B0]
		mov	[ebp+var_128], ecx
		jmp	short loc_408813
; ---------------------------------------------------------------------------

loc_408806:				; CODE XREF: sub_408582+293j
		mov	eax, [ebp+var_DC]
		dec	edx
		mov	word ptr [eax+edx*2], 400h

loc_408813:				; CODE XREF: sub_408582+21Cj
					; sub_408582+282j
		test	edx, edx
		jnz	short loc_408806
		mov	cl, byte ptr [ebp+var_BC]
		mov	dl, 1
		mov	eax, edx
		dec	[ebp+var_B4]
		inc	[ebp+var_B8]
		shl	eax, cl
		mov	cl, 9
		dec	eax
		mov	[ebp+var_12C], eax
		movzx	eax, byte ptr [ebp+var_C4]
		mov	[ebp+var_B0], 0
		mov	[ebp+var_C4], 0
		div	cl
		mov	cl, al
		shl	edx, cl
		mov	eax, edx
		dec	eax
		mov	[ebp+var_130], eax

loc_408862:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		mov	edx, [ebp+var_C4] ; jumptable 00408722 case 1
		lea	ecx, ds:0[edx*8]

loc_40886F:				; CODE XREF: sub_408582+324j
		cmp	[ebp+var_B4], 0
		mov	[ebp+var_C4], edx
		jz	loc_4094F2
		mov	eax, [ebp+var_B8]
		inc	edx
		dec	[ebp+var_B4]
		inc	[ebp+var_B8]
		movzx	eax, byte ptr [eax]
		shl	eax, cl
		add	ecx, 8
		or	[ebp+var_B0], eax
		cmp	edx, 3
		jle	short loc_40886F
		mov	edx, [ebp+var_E0]
		cmp	[ebp+var_B0], edx
		jz	short loc_408902
		cmp	[ebp+var_F8], 0
		jz	short loc_4088CF
		mov	eax, [ebp+var_F8]
		mov	[esp+148h+var_148], eax
		call	ds:GlobalFree
		push	ecx		; uFlags

loc_4088CF:				; CODE XREF: sub_408582+33Bj
		mov	ecx, [ebp+var_B0]
		mov	[esp+148h+var_148], 40h
		mov	[esp+148h+var_144], ecx
		call	ds:GlobalAlloc
		test	eax, eax
		push	edx
		push	edx
		mov	[ebp+var_F8], eax
		jz	loc_409810	; jumptable 00408722 default case
		mov	ecx, [ebp+var_B0]
		mov	[ebp+var_E0], ecx

loc_408902:				; CODE XREF: sub_408582+332j
		mov	eax, [ebp+var_E0]
		mov	edx, [ebp+var_F8]
		mov	byte ptr [edx+eax-1], 0
		mov	eax, 5
		jmp	short loc_40894A
; ---------------------------------------------------------------------------

loc_40891A:				; CODE XREF: sub_408582:loc_408722j
					; sub_408582+3D3j
					; DATA XREF: ...
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 3
		jz	loc_409514
		mov	ecx, [ebp+var_B8]
		mov	eax, esi
		shl	eax, 8
		dec	[ebp+var_B4]
		movzx	esi, byte ptr [ecx]
		inc	ecx
		mov	[ebp+var_B8], ecx
		or	esi, eax
		mov	eax, [ebp+var_C4]

loc_40894A:				; CODE XREF: sub_408582+396j
		lea	ecx, [eax-1]
		test	eax, eax
		mov	[ebp+var_C4], ecx
		jnz	short loc_40891A ; jumptable 00408722 case 3

loc_408957:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		mov	eax, [ebp+var_12C] ; jumptable 00408722	case 2
		and	eax, [ebp+var_FC]
		mov	edx, [ebp+var_DC]
		mov	[ebp+var_EC], 6
		mov	[ebp+var_110], eax
		mov	eax, [ebp+var_C0]
		shl	eax, 4
		add	eax, [ebp+var_110]
		lea	ebx, [edx+eax*2]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408990:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 6
		jnz	loc_408D0B
		mov	cl, byte ptr [ebp+var_D4]
		movzx	eax, [ebp+var_F1]
		mov	edx, [ebp+var_130]
		and	edx, [ebp+var_FC]
		sar	eax, cl
		mov	cl, byte ptr [ebp+var_118]
		shl	edx, cl
		add	eax, edx
		mov	edx, [ebp+var_DC]
		imul	eax, 600h
		cmp	[ebp+var_C0], 3
		lea	eax, [edx+eax+0E6Ch]
		mov	[ebp+var_CC], eax
		jle	short loc_408A08
		mov	eax, [ebp+var_C0]
		mov	edx, [ebp+var_C0]
		sub	eax, 3
		sub	edx, 6
		cmp	[ebp+var_C0], 9
		cmovg	eax, edx
		mov	[ebp+var_C0], eax
		jmp	short loc_408A12
; ---------------------------------------------------------------------------

loc_408A08:				; CODE XREF: sub_408582+460j
		mov	[ebp+var_C0], 0

loc_408A12:				; CODE XREF: sub_408582+484j
		cmp	[ebp+var_120], 0
		mov	[ebp+var_AC], 1
		jz	loc_408C0B
		mov	eax, [ebp+var_F0]
		mov	edx, [ebp+var_E0]
		sub	eax, [ebp+var_C8]
		mov	ecx, [ebp+var_F8]
		add	edx, eax
		cmp	eax, [ebp+var_E0]
		cmovnb	eax, edx
		mov	al, [ecx+eax]
		mov	[ebp+var_F2], al

loc_408A55:				; CODE XREF: sub_408582+668j
		mov	al, [ebp+var_F2]
		mov	edx, [ebp+var_CC]
		shl	[ebp+var_F2], 1
		shr	al, 7
		mov	ecx, eax
		and	ecx, 1
		mov	eax, ecx
		inc	eax
		shl	eax, 8
		add	eax, [ebp+var_AC]
		mov	[ebp+var_C4], ecx
		lea	ebx, [edx+eax*2]
		mov	cx, [ebx]
		movzx	eax, cx
		mov	[ebp+var_B0], eax
		mov	eax, edi
		shr	eax, 0Bh
		imul	eax, [ebp+var_B0]
		cmp	esi, eax
		jnb	short loc_408AC7
		mov	edx, 800h
		mov	edi, eax
		sub	edx, [ebp+var_B0]
		shl	[ebp+var_AC], 1
		sar	edx, 5
		add	edx, ecx
		mov	[ebx], dx
		mov	[ebp+var_B0], 0
		jmp	short loc_408AF1
; ---------------------------------------------------------------------------

loc_408AC7:				; CODE XREF: sub_408582+51Cj
		mov	edx, [ebp+var_AC]
		sub	edi, eax
		sub	esi, eax
		mov	eax, ecx
		shr	ax, 5
		sub	cx, ax
		lea	edx, [edx+edx+1]
		mov	[ebx], cx
		mov	[ebp+var_AC], edx
		mov	[ebp+var_B0], 1

loc_408AF1:				; CODE XREF: sub_408582+543j
		cmp	edi, 0FFFFFFh
		ja	short loc_408B26

loc_408AF9:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 13
		jz	loc_409536
		mov	ecx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [ecx]
		inc	ecx
		mov	[ebp+var_B8], ecx
		or	esi, eax

loc_408B26:				; CODE XREF: sub_408582+575j
		mov	ecx, [ebp+var_B0]
		cmp	[ebp+var_C4], ecx
		jnz	loc_408BC6
		jmp	loc_408BE0
; ---------------------------------------------------------------------------

loc_408B3D:				; CODE XREF: sub_408582+650j
		mov	ebx, [ebp+var_CC]
		add	ecx, ecx
		add	ebx, ecx
		mov	ax, [ebx]
		movzx	edx, ax
		mov	[ebp+var_AC], edx
		mov	edx, edi
		shr	edx, 0Bh
		imul	edx, [ebp+var_AC]
		cmp	esi, edx
		jnb	short loc_408B7A
		mov	edi, 800h
		sub	edi, [ebp+var_AC]
		sar	edi, 5
		add	eax, edi
		mov	edi, edx
		mov	[ebx], ax
		jmp	short loc_408B8B
; ---------------------------------------------------------------------------

loc_408B7A:				; CODE XREF: sub_408582+5DFj
		sub	edi, edx
		sub	esi, edx
		mov	edx, eax
		inc	ecx
		shr	dx, 5
		sub	ax, dx
		mov	[ebx], ax

loc_408B8B:				; CODE XREF: sub_408582+5F6j
		cmp	edi, 0FFFFFFh
		ja	short loc_408BCC
		mov	[ebp+var_AC], ecx

loc_408B99:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 14
		jz	loc_409558
		mov	ecx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [ecx]
		inc	ecx
		mov	[ebp+var_B8], ecx
		or	esi, eax

loc_408BC6:				; CODE XREF: sub_408582+5B0j
		mov	ecx, [ebp+var_AC]

loc_408BCC:				; CODE XREF: sub_408582+60Fj
		cmp	ecx, 0FFh
		jle	loc_408B3D
		mov	[ebp+var_AC], ecx
		jmp	short loc_408BF0
; ---------------------------------------------------------------------------

loc_408BE0:				; CODE XREF: sub_408582+5B6j
		cmp	[ebp+var_AC], 0FFh
		jle	loc_408A55

loc_408BF0:				; CODE XREF: sub_408582+65Cj
		mov	al, byte ptr [ebp+var_AC]
		mov	[ebp+var_120], 0
		mov	[ebp+var_F1], al
		jmp	loc_408CBE	; jumptable 00408722 case 26
; ---------------------------------------------------------------------------

loc_408C0B:				; CODE XREF: sub_408582+4A1j
					; sub_408582+72Aj
		mov	edx, [ebp+var_AC]
		mov	eax, edi
		mov	ebx, [ebp+var_CC]
		shr	eax, 0Bh
		add	edx, edx
		add	ebx, edx
		mov	[ebp+var_AC], edx
		mov	dx, [ebx]
		movzx	ecx, dx
		imul	eax, ecx
		mov	[ebp+var_BC], ecx
		cmp	esi, eax
		jnb	short loc_408C50
		mov	ecx, 800h
		mov	edi, eax
		sub	ecx, [ebp+var_BC]
		sar	ecx, 5
		add	edx, ecx
		mov	[ebx], dx
		jmp	short loc_408C6D
; ---------------------------------------------------------------------------

loc_408C50:				; CODE XREF: sub_408582+6B5j
		sub	edi, eax
		sub	esi, eax
		mov	eax, edx
		shr	ax, 5
		sub	dx, ax
		mov	eax, [ebp+var_AC]
		mov	[ebx], dx
		inc	eax
		mov	[ebp+var_AC], eax

loc_408C6D:				; CODE XREF: sub_408582+6CCj
		cmp	edi, 0FFFFFFh
		ja	short loc_408CA2

loc_408C75:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 15
		jz	loc_40957A
		mov	edx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [edx]
		inc	edx
		mov	[ebp+var_B8], edx
		or	esi, eax

loc_408CA2:				; CODE XREF: sub_408582+6F1j
		cmp	[ebp+var_AC], 0FFh
		jle	loc_408C0B
		mov	cl, byte ptr [ebp+var_AC]
		mov	[ebp+var_F1], cl

loc_408CBE:				; CODE XREF: sub_408582:loc_408722j
					; sub_408582+684j
					; DATA XREF: ...
		cmp	[ebp+var_104], 0 ; jumptable 00408722 case 26
		jz	loc_40959C
		mov	al, [ebp+var_F1]
		mov	edx, [ebp+var_100]
		mov	ecx, [ebp+var_F8]
		inc	[ebp+var_FC]
		dec	[ebp+var_104]
		mov	[edx], al
		inc	edx
		mov	[ebp+var_100], edx
		mov	edx, [ebp+var_F0]
		mov	[ecx+edx], al
		mov	eax, edx
		xor	edx, edx
		inc	eax
		div	[ebp+var_E0]
		jmp	loc_409293
; ---------------------------------------------------------------------------

loc_408D0B:				; CODE XREF: sub_408582+415j
		mov	ecx, [ebp+var_C0]
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_120], 1
		mov	[ebp+var_EC], 7
		lea	ebx, [eax+ecx*2+180h]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408D37:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 1	; jumptable 00408722 case 7
		jnz	loc_408F2C
		mov	edx, [ebp+var_C0]
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_EC], 8
		lea	ebx, [eax+edx*2+198h]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408D66:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 8
		jnz	loc_408E4A
		mov	eax, [ebp+var_C0]
		mov	edx, [ebp+var_110]
		mov	ecx, [ebp+var_DC]
		mov	[ebp+var_EC], 9
		shl	eax, 4
		lea	eax, [edx+eax+0F0h]
		lea	ebx, [ecx+eax*2]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408DA1:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 9
		jnz	loc_408EF2
		cmp	[ebp+var_FC], 0
		jz	loc_409810	; jumptable 00408722 default case
		xor	eax, eax
		cmp	[ebp+var_C0], 6
		setnle	al
		lea	edx, [eax+eax+9]
		mov	[ebp+var_C0], edx

loc_408DD1:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_104], 0 ; jumptable 00408722 case 27
		jz	loc_4095BE
		mov	eax, [ebp+var_F0]
		mov	edx, [ebp+var_E0]
		sub	eax, [ebp+var_C8]
		mov	ecx, [ebp+var_F8]
		add	edx, eax
		cmp	eax, [ebp+var_E0]
		cmovnb	eax, edx
		mov	edx, [ebp+var_F0]
		mov	al, [ecx+eax]
		inc	[ebp+var_FC]
		dec	[ebp+var_104]
		mov	[ecx+edx], al
		mov	[ebp+var_F1], al
		mov	eax, edx
		xor	edx, edx
		inc	eax
		mov	cl, [ebp+var_F1]
		div	[ebp+var_E0]
		mov	eax, [ebp+var_100]
		mov	[eax], cl
		inc	eax
		mov	[ebp+var_100], eax
		mov	[ebp+var_F0], edx
		jmp	loc_409299
; ---------------------------------------------------------------------------

loc_408E4A:				; CODE XREF: sub_408582+7EBj
		mov	edx, [ebp+var_C0]
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_EC], 0Ah
		lea	ebx, [eax+edx*2+1B0h]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408E6C:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 10
		jz	short loc_408EB4
		mov	edx, [ebp+var_C0]
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_EC], 0Bh
		lea	ebx, [eax+edx*2+1C8h]
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408E97:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 11
		mov	eax, [ebp+var_C8]
		jnz	short loc_408EC8
		mov	edx, [ebp+var_10C]
		mov	[ebp+var_C8], edx
		jmp	short loc_408EE0
; ---------------------------------------------------------------------------

loc_408EB4:				; CODE XREF: sub_408582+8F1j
		mov	edx, [ebp+var_108]
		mov	eax, [ebp+var_C8]
		mov	[ebp+var_C8], edx
		jmp	short loc_408EEC
; ---------------------------------------------------------------------------

loc_408EC8:				; CODE XREF: sub_408582+922j
		mov	ecx, [ebp+var_124]
		mov	edx, [ebp+var_10C]
		mov	[ebp+var_C8], ecx
		mov	[ebp+var_124], edx

loc_408EE0:				; CODE XREF: sub_408582+930j
		mov	ecx, [ebp+var_108]
		mov	[ebp+var_10C], ecx

loc_408EEC:				; CODE XREF: sub_408582+944j
		mov	[ebp+var_108], eax

loc_408EF2:				; CODE XREF: sub_408582+826j
		mov	eax, [ebp+var_DC]
		mov	[ebp+var_11C], 15h
		add	eax, 0A68h
		mov	[ebp+var_CC], eax
		mov	ebx, eax
		jmp	short loc_408F87
; ---------------------------------------------------------------------------

loc_408F11:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		xor	ecx, ecx	; jumptable 00408722 case 21
		cmp	[ebp+var_C0], 6
		setnle	cl
		lea	eax, [ecx+ecx*2+8]
		mov	[ebp+var_C0], eax
		jmp	loc_4091EC
; ---------------------------------------------------------------------------

loc_408F2C:				; CODE XREF: sub_408582+7BCj
		xor	edx, edx
		mov	eax, [ebp+var_DC]
		cmp	[ebp+var_C0], 6
		mov	[ebp+var_11C], 16h
		setnle	dl
		add	eax, 664h
		lea	ecx, [edx+edx*2+7]
		mov	edx, [ebp+var_10C]
		mov	[ebp+var_CC], eax
		mov	eax, [ebp+var_C8]
		mov	[ebp+var_C0], ecx
		mov	ecx, [ebp+var_108]
		mov	ebx, [ebp+var_CC]
		mov	[ebp+var_124], edx
		mov	[ebp+var_108], eax
		mov	[ebp+var_10C], ecx

loc_408F87:				; CODE XREF: sub_408582+1ADj
					; sub_408582+98Dj
		mov	[ebp+var_EC], 12h
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_408F96:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_E4], 3	; jumptable 00408722 case 22
		mov	eax, 3
		mov	edx, [ebp+var_DC]
		cmovle	eax, [ebp+var_E4]
		mov	[ebp+var_B0], 6
		mov	[ebp+var_114], 19h
		shl	eax, 6
		lea	eax, [edx+eax*2+360h]
		mov	[ebp+var_CC], eax
		jmp	loc_4093EC	; jumptable 00408722 case 23
; ---------------------------------------------------------------------------

loc_408FD8:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		mov	eax, [ebp+var_AC] ; jumptable 00408722 case 25
		cmp	eax, 3
		jle	loc_4091E5
		mov	ecx, eax
		and	eax, 1
		sar	ecx, 1
		or	eax, 2
		mov	[ebp+var_BC], ecx
		dec	ecx
		shl	eax, cl
		cmp	[ebp+var_AC], 0Dh
		mov	[ebp+var_C4], ecx
		mov	[ebp+var_C8], eax
		jg	short loc_409039
		mov	ecx, [ebp+var_DC]
		sub	eax, [ebp+var_AC]
		lea	ecx, [ecx+eax*2+55Eh]
		mov	[ebp+var_CC], ecx
		mov	ecx, [ebp+var_C4]
		mov	[ebp+var_B0], ecx
		jmp	loc_4090D7
; ---------------------------------------------------------------------------

loc_409039:				; CODE XREF: sub_408582+A8Bj
		mov	eax, [ebp+var_BC]
		mov	[ebp+var_AC], 0
		sub	eax, 5
		mov	[ebp+var_C4], eax
		jmp	short loc_4090A4
; ---------------------------------------------------------------------------

loc_409054:				; CODE XREF: sub_408582+B29j
		shr	edi, 1
		shl	[ebp+var_AC], 1
		cmp	esi, edi
		jb	short loc_409069
		or	[ebp+var_AC], 1
		sub	esi, edi

loc_409069:				; CODE XREF: sub_408582+ADCj
		cmp	edi, 0FFFFFFh
		ja	short loc_40909E

loc_409071:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 12
		jz	loc_4095E0
		mov	ecx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [ecx]
		inc	ecx
		mov	[ebp+var_B8], ecx
		or	esi, eax

loc_40909E:				; CODE XREF: sub_408582+AEDj
		dec	[ebp+var_C4]

loc_4090A4:				; CODE XREF: sub_408582+AD0j
		cmp	[ebp+var_C4], 0
		jg	short loc_409054
		mov	eax, [ebp+var_AC]
		mov	[ebp+var_B0], 4
		shl	eax, 4
		add	[ebp+var_C8], eax
		mov	eax, [ebp+var_DC]
		add	eax, 644h
		mov	[ebp+var_CC], eax

loc_4090D7:				; CODE XREF: sub_408582+AB2j
		mov	[ebp+var_AC], 0
		mov	[ebp+var_C4], 0
		mov	[ebp+var_D8], 1
		jmp	loc_4091C7
; ---------------------------------------------------------------------------

loc_4090FA:				; CODE XREF: sub_408582+C51j
		mov	ecx, [ebp+var_D8]
		mov	ebx, [ebp+var_CC]
		add	ecx, ecx
		add	ebx, ecx
		mov	ax, [ebx]
		mov	[ebp+var_D8], ecx
		mov	word ptr [ebp+var_BC], ax
		movzx	ecx, ax
		mov	eax, edi
		shr	eax, 0Bh
		imul	eax, ecx
		cmp	esi, eax
		mov	[ebp+var_D0], eax
		jnb	short loc_40914A
		mov	eax, 800h
		mov	edi, [ebp+var_D0]
		sub	eax, ecx
		sar	eax, 5
		add	eax, [ebp+var_BC]
		mov	[ebx], ax
		jmp	short loc_40918C
; ---------------------------------------------------------------------------

loc_40914A:				; CODE XREF: sub_408582+BABj
		mov	cl, byte ptr [ebp+var_C4]
		mov	eax, 1
		sub	edi, [ebp+var_D0]
		sub	esi, [ebp+var_D0]
		shl	eax, cl
		mov	ecx, [ebp+var_BC]
		or	[ebp+var_AC], eax
		mov	eax, [ebp+var_BC]
		shr	ax, 5
		sub	cx, ax
		mov	eax, [ebp+var_D8]
		mov	[ebx], cx
		inc	eax
		mov	[ebp+var_D8], eax

loc_40918C:				; CODE XREF: sub_408582+BC6j
		cmp	edi, 0FFFFFFh
		ja	short loc_4091C1

loc_409194:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 16
		jz	loc_409602
		mov	ecx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [ecx]
		inc	ecx
		mov	[ebp+var_B8], ecx
		or	esi, eax

loc_4091C1:				; CODE XREF: sub_408582+C10j
		inc	[ebp+var_C4]

loc_4091C7:				; CODE XREF: sub_408582+B73j
		mov	ecx, [ebp+var_B0]
		cmp	[ebp+var_C4], ecx
		jl	loc_4090FA
		mov	eax, [ebp+var_AC]
		add	eax, [ebp+var_C8]

loc_4091E5:				; CODE XREF: sub_408582+A5Fj
		inc	eax
		mov	[ebp+var_C8], eax

loc_4091EC:				; CODE XREF: sub_408582+9A5j
		cmp	[ebp+var_C8], 0
		jz	loc_409624
		mov	eax, [ebp+var_FC]
		cmp	[ebp+var_C8], eax
		ja	loc_409810	; jumptable 00408722 default case
		add	[ebp+var_E4], 2
		mov	edx, [ebp+var_E4]
		add	eax, edx
		mov	[ebp+var_FC], eax

loc_409220:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		mov	edx, [ebp+var_F0] ; jumptable 00408722 case 28

loc_409226:				; CODE XREF: sub_408582+D0Fj
		cmp	[ebp+var_104], 0
		jz	loc_409648
		mov	ecx, [ebp+var_E0]
		mov	eax, edx
		sub	eax, [ebp+var_C8]
		add	ecx, eax
		cmp	eax, [ebp+var_E0]
		cmovnb	eax, ecx
		mov	ecx, [ebp+var_F8]
		dec	[ebp+var_E4]
		dec	[ebp+var_104]
		mov	al, [ecx+eax]
		mov	[ecx+edx], al
		mov	ecx, [ebp+var_100]
		mov	[ebp+var_F1], al
		lea	eax, [edx+1]
		xor	edx, edx
		div	[ebp+var_E0]
		mov	al, [ebp+var_F1]
		mov	[ecx], al
		inc	ecx
		cmp	[ebp+var_E4], 0
		mov	[ebp+var_100], ecx
		jg	short loc_409226

loc_409293:				; CODE XREF: sub_408582+784j
		mov	[ebp+var_F0], edx

loc_409299:				; CODE XREF: sub_408582+8C3j
		mov	edx, 2
		jmp	loc_408722
; ---------------------------------------------------------------------------

loc_4092A3:				; CODE XREF: sub_408582:loc_408722j
					; sub_408582+409j ...
		mov	cx, [ebx]	; jumptable 00408722 case 4
		mov	edx, edi
		shr	edx, 0Bh
		movzx	eax, cx
		imul	edx, eax
		mov	[ebp+var_B0], eax
		cmp	esi, edx
		jnb	short loc_4092DC
		mov	eax, 800h
		mov	edi, edx
		sub	eax, [ebp+var_B0]
		mov	[ebp+var_B0], 0
		sar	eax, 5
		add	eax, ecx
		mov	[ebx], ax
		jmp	short loc_4092F6
; ---------------------------------------------------------------------------

loc_4092DC:				; CODE XREF: sub_408582+D37j
		mov	eax, ecx
		sub	edi, edx
		shr	ax, 5
		sub	esi, edx
		sub	cx, ax
		mov	[ebx], cx
		mov	[ebp+var_B0], 1

loc_4092F6:				; CODE XREF: sub_408582+D58j
		cmp	edi, 0FFFFFFh
		mov	edx, [ebp+var_EC]
		ja	loc_408703

loc_409308:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 5
		jz	loc_40966D
		mov	edx, [ebp+var_B8]
		mov	eax, esi
		shl	eax, 8
		shl	edi, 8
		dec	[ebp+var_B4]
		movzx	esi, byte ptr [edx]
		inc	edx
		mov	[ebp+var_B8], edx
		mov	edx, [ebp+var_EC]
		or	esi, eax
		jmp	loc_408703
; ---------------------------------------------------------------------------

loc_409340:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 18
		jnz	short loc_409371
		mov	ecx, [ebp+var_110]
		mov	edx, [ebp+var_CC]
		mov	[ebp+var_E4], 0
		lea	eax, ds:2[ecx*8]
		lea	edx, [edx+eax*2]
		mov	[ebp+var_CC], edx
		jmp	short loc_4093B8
; ---------------------------------------------------------------------------

loc_409371:				; CODE XREF: sub_408582+DC5j
		mov	ebx, [ebp+var_CC]
		mov	[ebp+var_EC], 13h
		add	ebx, 2
		jmp	loc_4092A3	; jumptable 00408722 case 4
; ---------------------------------------------------------------------------

loc_409389:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B0], 0	; jumptable 00408722 case 19
		jnz	short loc_4093C4
		mov	ecx, [ebp+var_110]
		mov	edx, [ebp+var_CC]
		mov	[ebp+var_E4], 8
		lea	eax, ds:82h[ecx*8]
		lea	edx, [edx+eax*2]
		mov	[ebp+var_CC], edx

loc_4093B8:				; CODE XREF: sub_408582+DEDj
		mov	[ebp+var_B0], 3
		jmp	short loc_4093E2
; ---------------------------------------------------------------------------

loc_4093C4:				; CODE XREF: sub_408582+E0Ej
		add	[ebp+var_CC], 204h
		mov	[ebp+var_E4], 10h
		mov	[ebp+var_B0], 8

loc_4093E2:				; CODE XREF: sub_408582+E40j
		mov	[ebp+var_114], 14h

loc_4093EC:				; CODE XREF: sub_408582:loc_408722j
					; sub_408582+A51j
					; DATA XREF: ...
		mov	ecx, [ebp+var_B0] ; jumptable 00408722 case 23
		mov	[ebp+var_D8], 1
		mov	[ebp+var_C4], ecx
		jmp	loc_4094A8
; ---------------------------------------------------------------------------

loc_409407:				; CODE XREF: sub_408582+F2Dj
		mov	eax, [ebp+var_D8]
		mov	ebx, [ebp+var_CC]
		add	eax, eax
		add	ebx, eax
		mov	cx, [ebx]
		mov	[ebp+var_D8], eax
		movzx	edx, cx
		mov	[ebp+var_BC], edx
		mov	edx, edi
		shr	edx, 0Bh
		imul	edx, [ebp+var_BC]
		cmp	esi, edx
		jnb	short loc_409450
		mov	eax, 800h
		mov	edi, edx
		sub	eax, [ebp+var_BC]
		sar	eax, 5
		add	eax, ecx
		mov	[ebx], ax
		jmp	short loc_40946D
; ---------------------------------------------------------------------------

loc_409450:				; CODE XREF: sub_408582+EB5j
		mov	eax, ecx
		sub	edi, edx
		shr	ax, 5
		sub	esi, edx
		sub	cx, ax
		mov	[ebx], cx
		mov	ecx, [ebp+var_D8]
		inc	ecx
		mov	[ebp+var_D8], ecx

loc_40946D:				; CODE XREF: sub_408582+ECCj
		cmp	edi, 0FFFFFFh
		ja	short loc_4094A2

loc_409475:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		cmp	[ebp+var_B4], 0	; jumptable 00408722 case 24
		jz	loc_40968C
		mov	edx, [ebp+var_B8]
		mov	eax, esi
		dec	[ebp+var_B4]
		shl	eax, 8
		shl	edi, 8
		movzx	esi, byte ptr [edx]
		inc	edx
		mov	[ebp+var_B8], edx
		or	esi, eax

loc_4094A2:				; CODE XREF: sub_408582+EF1j
		dec	[ebp+var_C4]

loc_4094A8:				; CODE XREF: sub_408582+E80j
		cmp	[ebp+var_C4], 0
		jg	loc_409407
		mov	cl, byte ptr [ebp+var_B0]
		mov	eax, 1
		mov	edx, [ebp+var_D8]
		shl	eax, cl
		sub	edx, eax
		mov	[ebp+var_AC], edx
		mov	edx, [ebp+var_114]
		jmp	loc_408703
; ---------------------------------------------------------------------------

loc_4094DB:				; CODE XREF: sub_408582:loc_408722j
					; DATA XREF: .rdata:off_40B528o
		mov	ecx, [ebp+var_AC] ; jumptable 00408722 case 20
		add	[ebp+var_E4], ecx
		mov	edx, [ebp+var_11C]
		jmp	loc_408703
; ---------------------------------------------------------------------------

loc_4094F2:				; CODE XREF: sub_408582+2FAj
		mov	[ebp+var_BC], ebx
		mov	edx, 1
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_409514:				; CODE XREF: sub_408582+39Fj
		mov	[ebp+var_BC], ebx
		mov	edx, 3
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_409536:				; CODE XREF: sub_408582+57Ej
		mov	[ebp+var_BC], ebx
		mov	edx, 0Dh
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_409558:				; CODE XREF: sub_408582+61Ej
		mov	[ebp+var_BC], ebx
		mov	edx, 0Eh
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_40957A:				; CODE XREF: sub_408582+6FAj
		mov	[ebp+var_BC], ebx
		mov	edx, 0Fh
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_40959C:				; CODE XREF: sub_408582+743j
		mov	[ebp+var_BC], ebx
		mov	edx, 1Ah
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_4095BE:				; CODE XREF: sub_408582+856j
		mov	[ebp+var_BC], ebx
		mov	edx, 1Bh
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_4095E0:				; CODE XREF: sub_408582+AF6j
		mov	[ebp+var_BC], ebx
		mov	edx, 0Ch
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_409602:				; CODE XREF: sub_408582+C19j
		mov	[ebp+var_BC], ebx
		mov	edx, 10h
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	loc_4096C3
; ---------------------------------------------------------------------------

loc_409624:				; CODE XREF: sub_408582+C71j
		mov	[ebp+var_BC], ebx
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		mov	[ebp+var_E4], 0FFFFFFFFh
		jmp	short loc_4096C3
; ---------------------------------------------------------------------------

loc_409648:				; CODE XREF: sub_408582+CABj
		mov	[ebp+var_BC], ebx
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_F0], edx
		mov	edx, 1Ch
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	short loc_4096C3
; ---------------------------------------------------------------------------

loc_40966D:				; CODE XREF: sub_408582+D8Dj
		mov	[ebp+var_BC], ebx
		mov	edx, 5
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	short loc_4096C3
; ---------------------------------------------------------------------------

loc_40968C:				; CODE XREF: sub_408582+EFAj
		mov	[ebp+var_BC], ebx
		mov	edx, 18h
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi
		jmp	short loc_4096C3
; ---------------------------------------------------------------------------

loc_4096AB:				; CODE XREF: sub_408582+1B9j
		mov	[ebp+var_BC], ebx
		mov	ebx, [ebp+var_E8]
		mov	[ebp+var_D0], edi
		mov	[ebp+var_D4], esi

loc_4096C3:				; CODE XREF: sub_408582+F8Dj
					; sub_408582+FAFj ...
		lea	esi, [ebp+var_A0]
		mov	ecx, 22h
		mov	edi, ebx
		rep movsd
		mov	[ebx], edx
		mov	eax, [ebp+var_EC]
		mov	edx, [ebp+var_11C]
		mov	ecx, [ebp+var_114]
		mov	[ebx+4], eax
		mov	eax, [ebp+var_128]
		mov	[ebx+8], edx
		mov	edx, [ebp+var_E0]
		mov	[ebx+0Ch], ecx
		mov	ecx, [ebp+var_B8]
		mov	[ebx+10h], eax
		mov	eax, [ebp+var_B4]
		mov	[ebx+14h], edx
		mov	edx, [ebp+var_100]
		mov	[ebx+18h], ecx
		mov	ecx, [ebp+var_104]
		mov	[ebx+1Ch], eax
		mov	eax, [ebp+var_FC]
		mov	[ebx+20h], edx
		mov	dl, [ebp+var_F1]
		mov	[ebx+24h], ecx
		mov	cl, [ebp+var_F2]
		mov	[ebx+28h], eax
		mov	eax, [ebp+var_CC]
		mov	[ebx+2Ch], dl
		mov	edx, [ebp+var_BC]
		mov	[ebx+2Dh], cl
		mov	ecx, [ebp+var_D8]
		mov	[ebx+30h], eax
		mov	eax, [ebp+var_110]
		mov	[ebx+34h], edx
		mov	[ebx+38h], ecx
		mov	[ebx+3Ch], eax
		mov	ecx, [ebp+var_C4]
		mov	eax, [ebp+var_AC]
		mov	edx, [ebp+var_120]
		mov	[ebx+40h], ecx
		mov	ecx, [ebp+var_B0]
		mov	[ebx+44h], eax
		mov	eax, [ebp+var_C0]
		mov	[ebx+54h], edx
		mov	edx, [ebp+var_108]
		mov	[ebx+48h], ecx
		mov	ecx, [ebp+var_118]
		mov	[ebx+50h], eax
		mov	eax, [ebp+var_C8]
		mov	[ebx+60h], edx
		mov	edx, [ebp+var_12C]
		mov	[ebx+4Ch], ecx
		mov	ecx, [ebp+var_E4]
		mov	[ebx+5Ch], eax
		mov	eax, [ebp+var_124]
		mov	[ebx+6Ch], edx
		mov	edx, [ebp+var_F0]
		mov	[ebx+58h], ecx
		mov	ecx, [ebp+var_10C]
		mov	[ebx+68h], eax
		mov	eax, [ebp+var_D0]
		mov	[ebx+74h], edx
		mov	edx, [ebp+var_D4]
		mov	[ebx+64h], ecx
		mov	ecx, [ebp+var_130]
		mov	[ebx+78h], eax
		mov	eax, [ebp+var_F8]
		mov	[ebx+7Ch], edx
		mov	[ebx+70h], ecx
		mov	[ebx+80h], eax
		mov	eax, [ebp+var_DC]
		mov	[ebx+84h], eax
		xor	eax, eax
		jmp	short loc_409813
; ---------------------------------------------------------------------------

loc_409810:				; CODE XREF: sub_408582+184j
					; sub_408582+1C9j ...
		or	eax, 0FFFFFFFFh	; jumptable 00408722 default case

loc_409813:				; CODE XREF: sub_408582+163j
					; sub_408582+128Cj
		lea	esp, [ebp-0Ch]
		pop	ebx
		pop	esi
		pop	edi
		pop	ebp
		retn
sub_408582	endp

; ---------------------------------------------------------------------------
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetFileVersionInfoSizeA. PRESS KEYPAD "+"	TO EXPAND]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION GetFileVersionInfoA. PRESS KEYPAD	"+" TO EXPAND]
		align 4
; [00000006 BYTES: COLLAPSED FUNCTION VerQueryValueA. PRESS KEYPAD "+" TO EXPAND]
		align 4
		dd 0FFFFFFFFh, 0
		dd 0FFFFFFFFh, 70h dup(0)
		dd 180h	dup(?)
_text		ends

; Section 2. (virtual address 0000A000)
; Virtual size			: 0000008C (	140.)
; Section size in file		: 00000200 (	512.)
; Offset to raw	data for section: 00008E00
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_data		segment	dword public 'DATA' use32
		assume cs:_data
		;org 40A000h
off_40A000	dd offset dword_426B08	; DATA XREF: sub_40164F+1224o
		dd offset sub_4037F0
		dd offset sub_407A4F
		dd offset sub_404945
dword_40A010	dd 0FFFFFFFFh		; DATA XREF: sub_403B03+4Br
					; sub_403B03+130r ...
dword_40A014	dd 0FFFFFFFFh		; DATA XREF: sub_403A85+24r
					; sub_403AD1+1Dr ...
dword_40A018	dd 0FFFFFFFFh		; DATA XREF: sub_404F6A:loc_40501Ar
					; sub_404F6A:loc_40509Fr ...
off_40A01C	dd offset aKernel32	; DATA XREF: sub_407EF3+Br
					; "KERNEL32"
off_40A020	dd offset aGetdiskfreespa ; DATA XREF: sub_407EF3:loc_407F27r
					; "GetDiskFreeSpaceExA"
		dd offset aKernel32	; "KERNEL32"
		dd offset aMovefileexa	; "MoveFileExA"
		dd offset aAdvapi32	; "ADVAPI32"
		dd offset aRegdeletekeyex ; "RegDeleteKeyExA"
		dd offset aAdvapi32	; "ADVAPI32"
		dd offset aOpenprocesstok ; "OpenProcessToken"
		dd offset aAdvapi32	; "ADVAPI32"
		dd offset aLookupprivileg ; "LookupPrivilegeValueA"
		dd offset aAdvapi32	; "ADVAPI32"
		dd offset aAdjusttokenpri ; "AdjustTokenPrivileges"
		dd offset aKernel32	; "KERNEL32"
		dd offset aGetuserdefault ; "GetUserDefaultUILanguage"
		dd offset aShlwapi	; "SHLWAPI"
		dd offset aShautocomplete ; "SHAutoComplete"
		dd offset aShfolder	; "SHFOLDER"
		dd offset aShgetfolderpat ; "SHGetFolderPathA"
dword_40A064	dd 28h			; DATA XREF: sub_407536+39o
dword_40A068	dd 0			; DATA XREF: sub_407536+4Ew
dword_40A06C	dd 0			; DATA XREF: sub_407536+5Aw
dword_40A070	dd 0			; DATA XREF: sub_407536+63w
dword_40A074	dd 0			; DATA XREF: sub_407536+2Fw
dword_40A078	dd 0			; DATA XREF: sub_407536+49w
		dd 67h,	60h dup(0)
		align 1000h
_data		ends

; Section 3. (virtual address 0000B000)
; Virtual size			: 00001E5C (   7772.)
; Section size in file		: 00002000 (   8192.)
; Offset to raw	data for section: 00009000
; Flags	40300040: Data Readable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read
_rdata		segment	dword public 'DATA' use32
		assume cs:_rdata
		;org 40B000h
dword_40B000	dd 5Ch			; DATA XREF: sub_40164F+1132o
off_40B004	dd offset loc_4037E6, offset loc_4016BA, offset	loc_4016CA
					; DATA XREF: sub_40164F+64r
		dd offset loc_4016F5, offset loc_401718, offset	loc_401731 ; jump table	for switch statement
		dd offset loc_401753, offset loc_4017EB, offset	loc_40182A
		dd offset loc_401854, offset loc_401939, offset	loc_40176A
		dd offset loc_4017AB, offset loc_4017CF, offset	loc_40194D
		dd offset loc_4019D9, offset loc_401A8A, offset	loc_401ADB
		dd offset loc_401B01, offset loc_401D98, offset	loc_401DB7
		dd offset loc_401DFB, offset loc_401E1D, offset	loc_401E45
		dd offset loc_401F3C, offset loc_401F7C, offset	loc_401FE1
		dd offset loc_402020, offset loc_4020C4, offset	loc_4020F2
		dd offset loc_4021E3, offset loc_4021E3, offset	loc_402311
		dd offset loc_402336, offset loc_402370, offset	loc_40239E
		dd offset loc_402449, offset loc_402506, offset	loc_402544
		dd offset loc_4025C6, offset loc_402677, offset	loc_4026DD
		dd offset loc_4027D8, offset loc_402909, offset	loc_402B15
		dd offset loc_402BFC, offset loc_402C3C, offset	loc_402CA3
		dd offset loc_402D20, offset loc_402D9B, offset	loc_402ED7
		dd offset loc_402FAE, offset loc_403079, offset	loc_4030A0
		dd offset loc_4030EE, offset loc_40317B, offset	loc_4032C3
		dd offset loc_403333, offset loc_40335A, offset	loc_4033BD
		dd offset loc_40342E, offset loc_403618, offset	loc_4036DA
		dd offset loc_4037D8, offset loc_4037D8, offset	loc_403780
off_40B10C	dd offset loc_40204A	; DATA XREF: sub_40164F+9F4r
		dd offset loc_40204E	; jump table for switch	statement
		dd offset loc_402052
		dd offset loc_402057
		dd offset loc_402064
		dd offset loc_402068
		dd offset loc_40206C
		dd offset loc_402070
		dd offset loc_402077
		dd offset loc_402081
		dd offset loc_402093
		dd offset loc_4020A0
		dd offset loc_4020A4
aUnpackingDataD	db 'unpacking data: %d%%',0 ; DATA XREF: sub_4038FA+4Co
aVerifyingInsta	db 'verifying installer: %d%%',0 ; DATA XREF: sub_4038FA+47o
a___D		db '... %d%%',0         ; DATA XREF: sub_40399A+79o
aErrorLaunching	db 'Error launching installer',0 ; DATA XREF: sub_403EA7+6o
aInstallerInteg	db 'Installer integrity check has failed. Common causes include',0Ah
					; DATA XREF: sub_403EA7+20Fo
					; sub_403EA7+325o ...
		db 'incomplete download and damaged media. Contact the',0Ah
		db 'installer',27h,'s author to obtain a new copy.',0Ah
		db 0Ah
		db 'More information at:',0Ah
		db 'http://nsis.sf.net/NSIS_Error',0
aErrorWritingTe	db 'Error writing temporary file. Make sure your temp folder is valid'
					; DATA XREF: sub_403EA7+2A6o
		db '.',0
		align 4
aErrorLaunchi_0	db 'Error launching installer',0 ; DATA XREF: start+2F1o
					; start:loc_404723o
aErrorWriting_0	db 'Error writing temporary file. Make sure your temp folder is valid'
					; DATA XREF: start:loc_40471Co
		db '.',0
byte_40B301	db 0			; DATA XREF: start+67o
aNsisError	db 'NSIS Error',0       ; DATA XREF: start+77o
aTemp		db '\Temp',0            ; DATA XREF: start+1C4o
aNsu_tmp	db '~nsu.tmp',0         ; DATA XREF: start:loc_40456Bo
aSeshutdownpriv	db 'SeShutdownPrivilege',0 ; DATA XREF: start+4C6o
aU_USS		db '%u.%u%s%s',0        ; DATA XREF: sub_404BDA+D9o
byte_40B33A	db 0			; DATA XREF: sub_4056A9:loc_405A60o
aOpen		db 'open',0             ; DATA XREF: sub_405AE3+2E8o
a_exe		db '.exe',0             ; DATA XREF: sub_405E99+173o
		align 4
aControlPanelDe	db 'Control Panel\Desktop\ResourceLocale',0 ; DATA XREF: sub_405E99+5Bo
		align 10h
a_defaultContro	db '.DEFAULT\Control Panel\International',0 ; DATA XREF: sub_405E99+93o
		align 4
aRiched20	db 'RichEd20',0         ; DATA XREF: sub_405E99+351o
		align 4
aRiched32	db 'RichEd32',0         ; DATA XREF: sub_405E99+35Fo
		align 10h
aRichedit20a	db 'RichEdit20A',0      ; DATA XREF: sub_405E99+377o
					; sub_405E99+3A8o
aRichedit	db 'RichEdit',0         ; DATA XREF: sub_405E99+397o
		align 4
off_40B3C8	dd offset sub_405AE3	; DATA XREF: sub_404F6A+3E2r
		dd offset sub_4063B0
		dd offset sub_4056A9
		dd offset sub_406EF2
		dd offset sub_405648
byte_40B3DC	db 5Ch,	0		; DATA XREF: sub_4075AA+2Ao
					; sub_4081E7:loc_4082A6o
a?		db '*?|<>/":',0         ; DATA XREF: sub_407A4F+56o
aSS		db '%s=%s',0Dh,0Ah,0    ; DATA XREF: sub_407F46+DDo
asc_40B3EF	db 0Ah			; DATA XREF: sub_407F46+1DEo
		db '[',0
a_		db '\*.*',0             ; DATA XREF: sub_4081E7+8Fo
aKernel32	db 'KERNEL32',0         ; DATA XREF: .data:off_40A01Co
					; .data:0040A024o ...
aGetdiskfreespa	db 'GetDiskFreeSpaceExA',0 ; DATA XREF: .data:off_40A020o
aMovefileexa	db 'MoveFileExA',0      ; DATA XREF: .data:0040A028o
aAdvapi32	db 'ADVAPI32',0         ; DATA XREF: .data:0040A02Co
					; .data:0040A034o ...
aRegdeletekeyex	db 'RegDeleteKeyExA',0  ; DATA XREF: .data:0040A030o
aOpenprocesstok	db 'OpenProcessToken',0 ; DATA XREF: .data:0040A038o
aLookupprivileg	db 'LookupPrivilegeValueA',0 ; DATA XREF: .data:0040A040o
aAdjusttokenpri	db 'AdjustTokenPrivileges',0 ; DATA XREF: .data:0040A048o
aGetuserdefault	db 'GetUserDefaultUILanguage',0 ; DATA XREF: .data:0040A050o
aShlwapi	db 'SHLWAPI',0          ; DATA XREF: .data:0040A054o
aShautocomplete	db 'SHAutoComplete',0   ; DATA XREF: .data:0040A058o
aShfolder	db 'SHFOLDER',0         ; DATA XREF: .data:0040A05Co
aShgetfolderpat	db 'SHGetFolderPathA',0 ; DATA XREF: .data:0040A060o
aMicrosoftInter	db '\Microsoft\Internet Explorer\Quick Launch',0
					; DATA XREF: sub_407B23+1FDo
		align 4
aSoftwareMicros	db 'Software\Microsoft\Windows\CurrentVersion',0 ; DATA XREF: sub_407B23+EBo
		align 4
aRename		db '[Rename]',0Dh,0Ah,0 ; DATA XREF: sub_407F46+1A9o
					; sub_407F46+1C5o
aD		db '%d',0               ; DATA XREF: sub_40794D+9o
		align 4
off_40B528	dd offset loc_408734	; DATA XREF: sub_408582:loc_408722r
		dd offset loc_408862	; jump table for switch	statement
		dd offset loc_408957
		dd offset loc_40891A
		dd offset loc_4092A3
		dd offset loc_409308
		dd offset loc_408990
		dd offset loc_408D37
		dd offset loc_408D66
		dd offset loc_408DA1
		dd offset loc_408E6C
		dd offset loc_408E97
		dd offset loc_409071
		dd offset loc_408AF9
		dd offset loc_408B99
		dd offset loc_408C75
		dd offset loc_409194
		dd offset loc_408729
		dd offset loc_409340
		dd offset loc_409389
		dd offset loc_4094DB
		dd offset loc_408F11
		dd offset loc_408F96
		dd offset loc_4093EC
		dd offset loc_409475
		dd offset loc_408FD8
		dd offset loc_408CBE
		dd offset loc_408DD1
		dd offset loc_409220
		dd 7ECBBA04h, 11CF2D97h, 0AA0029A2h, 52733D00h,	40FC6ED4h
		dd 11CF2438h, 8DBA3h, 225F136h,	40FC6ED8h, 11CF2438h, 8DBA3h
		dd 225F136h, 40FC6ED3h,	11CF2438h, 8DBA3h, 225F136h, 0DE86A58h
		dd 11CF2BAAh, 0AA0029A2h, 52733D00h, 40FC6ED6h,	11CF2438h
		dd 8DBA3h, 225F136h, 40FC6ED7h,	11CF2438h, 8DBA3h, 225F136h
		dd 0DE86A56h, 11CF2BAAh, 0AA0029A2h, 52733D00h,	0DE86A55h
		dd 11CF2BAAh, 0AA0029A2h, 52733D00h, 0DE86A51h,	11CF2BAAh
		dd 0AA0029A2h, 52733D00h, 0DE86A57h, 11CF2BAAh,	0AA0029A2h
		dd 52733D00h, 0DE86A52h, 11CF2BAAh, 0AA0029A2h,	52733D00h
		dd 0DE86A54h, 11CF2BAAh, 0AA0029A2h, 52733D00h,	0DE86A53h
		dd 11CF2BAAh, 0AA0029A2h, 52733D00h, 40FC6ED9h,	11CF2438h
		dd 8DBA3h, 225F136h, 40FC6ED5h,	11CF2438h, 8DBA3h, 225F136h
		dd 0DE86A50h, 11CF2BAAh, 0AA0029A2h, 52733D00h,	7DD95802h
		dd 11CF9882h, 0AA00A99Fh, 0C4426C00h, 7DD95801h, 11CF9882h
		dd 0AA00A99Fh, 0C4426C00h, 214D0h, 0
		dd 0C0h, 46000000h, 214D1h, 0
		dd 0C0h, 46000000h, 214D2h, 0
		dd 0C0h, 46000000h, 0BB2765h, 11D06A77h, 0C00035A5h, 62D0D74Fh
		dd 3C036F1h, 11D0A186h,	0AA004A82h, 83435B00h, 330h, 0
		dd 0C0h, 46000000h, 0BB2763h, 11D06A77h, 0C00035A5h, 62D0D74Fh
		dd 0BE35201h, 11CE8F91h, 0AA00E39Dh, 51B84B00h,	0BE35200h
		dd 11CE8F91h, 0AA00E39Dh, 51B84B00h, 0BE35202h,	11CE8F91h
		dd 0AA00E39Dh, 51B84B00h, 21EC2020h, 10693AEAh,	8DDA2h
		dd 9D30302Bh, 0FB8F0822h, 101B0164h, 8ED84h, 13C72E2Bh
		dd 332h, 0
		dd 0C0h, 46000000h, 4657278Ah, 11D2411Bh, 0C0009A83h, 0D018D94Fh
		dd 79EAC9E7h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	0B091E540h
		dd 11CF83E3h, 200013A7h, 6297D7AFh, 0AFACED1h, 11D1E828h
		dd 32B58791h, 5D57E9F1h, 79EAC9E3h, 11CEBAF9h, 0AA00828Ch
		dd 0BA94B00h, 79EAC9E4h, 11CEBAF9h, 0AA00828Ch,	0BA94B00h
		dd 79EAC9E2h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	79EAC9E5h
		dd 11CEBAF9h, 0AA00828Ch, 0BA94B00h, 1Bh, 0
		dd 0C0h, 46000000h, 1Ch, 0
		dd 0C0h, 46000000h, 871C5380h, 106942A0h, 8EAA2h, 9D30302Bh
		dd 2DF01h, 0
		dd 0C0h, 46000000h, 0FBF23B40h,	101BE3F0h, 0AA008884h
		dd 0F8563E00h, 331h, 0
		dd 0C0h, 46000000h, 79EAC9E6h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h
		dd 20D04FE0h, 10693AEAh, 8D8A2h, 9D30302Bh, 450D8FBAh
		dd 11D0AD25h, 8A898h, 3111B36h,	208D2C60h, 10693AEAh, 8D7A2h
		dd 9D30302Bh, 312h, 0
		dd 0C0h, 46000000h, 30Eh, 0
		dd 0C0h, 46000000h, 30Dh, 0
		dd 0C0h, 46000000h, 311h, 0
		dd 0C0h, 46000000h, 313h, 0
		dd 0C0h, 46000000h, 30Ch, 0
		dd 0C0h, 46000000h, 30Fh, 0
		dd 0C0h, 46000000h, 310h, 0
		dd 0C0h, 46000000h, 79EAC9F1h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h
		dd 0FB8F0821h, 101B0164h, 8ED84h, 13C72E2Bh, 316h, 0
		dd 0C0h, 46000000h, 319h, 0
		dd 0C0h, 46000000h, 315h, 0
		dd 0C0h, 46000000h, 645FF040h, 101B5081h, 0AA00089Fh, 4E952F00h
		dd 0EAB22AC6h, 11CF30C1h, 0EBA7h, 0BAE5BC0h, 21400h, 0
		dd 0C0h, 46000000h, 0EAB22AC3h,	11CF30C1h, 0EBA7h, 0BAE5BC0h
		dd 0F3364BA0h, 11CE65B9h, 0AA00BAA9h, 37E84A00h
dword_40B9DC	dd 21401h, 0		; DATA XREF: sub_40164F+1335o
		dd 0C0h, 46000000h, 316h, 0
		dd 0C0h, 46000000h, 315h, 0
		dd 0C0h, 46000000h, 2E005h, 0
		dd 0C0h, 46000000h, 0BE35203h, 11CE8F91h, 0AA00E39Dh, 51B84B00h
		dd 79EAC9D0h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	79EAC9D1h
		dd 11CEBAF9h, 0AA00828Ch, 0BA94B00h, 2DF09h, 0
		dd 0C0h, 46000000h, 17h, 0
		dd 0C0h, 46000000h, 0BE35204h, 11CE8F91h, 0AA00E39Dh, 51B84B00h
		dd 79EAC9E0h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	79EAC9E1h
		dd 11CEBAF9h, 0AA00828Ch, 0BA94B00h, 8856F961h,	11D0340Ah
		dd 0C0006BA9h, 0A205D74Fh, 2DF06h, 0
		dd 0C0h, 46000000h, 0EAB22AC5h,	11CF30C1h, 0EBA7h, 0BAE5BC0h
		dd 0EAB22AC2h, 11CF30C1h, 0EBA7h, 0BAE5BC0h, 0EAB22AC2h
		dd 11CF30C1h, 0EBA7h, 0BAE5BC0h, 34A715A0h, 11D06587h
		dd 20004A92h, 4DACC7AFh, 96300DA0h, 11CF2BABh, 0AA0029A2h
		dd 52733D00h, 0D5CDD502h, 101B2E9Ch, 89793h, 0AEF92C2Bh
		dd 214A1h, 0
		dd 0C0h, 46000000h, 214A0h, 0
		dd 0C0h, 46000000h, 0F29F85E0h,	10684FF9h, 891ABh, 0D9B3272Bh
		dd 0D5CDD505h, 101B2E9Ch, 89793h, 0AEF92C2Bh, 6650430Ch
		dd 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504301h, 101ABE0Fh
		dd 0AA00BB8Bh, 0AB0C3000h, 6650430Fh, 101ABE0Fh, 0AA00BB8Bh
		dd 0AB0C3000h, 66504310h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h
		dd 6650430Dh, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 6650430Eh
		dd 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504312h, 101ABE0Fh
		dd 0AA00BB8Bh, 0AB0C3000h, 66504311h, 101ABE0Fh, 0AA00BB8Bh
		dd 0AB0C3000h, 66504313h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h
		dd 66504300h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 2DE81h
		dd 0
		dd 0C0h, 46000000h, 6650430Bh, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h
		dd 2DE80h, 0
		dd 0C0h, 46000000h, 6650430Ah, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h
		dd 66504306h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504302h
		dd 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504308h, 101ABE0Fh
		dd 0AA00BB8Bh, 0AB0C3000h, 66504304h, 101ABE0Fh, 0AA00BB8Bh
		dd 0AB0C3000h, 66504307h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h
		dd 66504303h, 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504309h
		dd 101ABE0Fh, 0AA00BB8Bh, 0AB0C3000h, 66504305h, 101ABE0Fh
		dd 0AA00BB8Bh, 0AB0C3000h, 2DF07h, 0
		dd 0C0h, 46000000h, 2DF05h, 0
		dd 0C0h, 46000000h, 77A130B0h, 11D094FDh, 0C00044A5h, 62D0D74Fh
		dd 618736E0h, 11CF3C3Dh, 0AA000C81h, 719B3800h,	10Fh, 0
		dd 0C0h, 46000000h, 125h, 0
		dd 0C0h, 46000000h, 3AF24290h, 11CE0C96h, 0AA00CFA0h, 0B80A6000h
		dd 79EAC9D3h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	3D8B0590h
		dd 11D2F691h, 6000A98Eh, 0D45BDF97h, 79EAC9D0h,	11CEBAF9h
		dd 0AA00828Ch, 0BA94B00h, 0BB2762h, 11D06A77h, 0C00035A5h
		dd 62D0D74Fh, 0EAC04BC0h, 11D23791h, 600095BBh,	4C467B97h
		dd 0Eh,	0
		dd 0C0h, 46000000h, 0FC4801A1h,	11CF2BA9h, 0AA0029A2h
		dd 52733D00h, 79EAC9CDh, 11CEBAF9h, 0AA00828Ch,	0BA94B00h
		dd 79EAC9C1h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	79EAC9CBh
		dd 11CEBAF9h, 0AA00828Ch, 0BA94B00h, 79EAC9C0h,	11CEBAF9h
		dd 0AA00828Ch, 0BA94B00h, 2E013h, 0
		dd 0C0h, 46000000h, 2E012h, 0
		dd 0C0h, 46000000h, 1008C4A0h, 11CF7613h, 2000F19Ah, 0F4726EAFh
		dd 140h, 0
		dd 0C0h, 46000000h, 0B196B28Fh,	101ABAB4h, 0AA009CB6h
		dd 71D3400h, 13Dh, 0
		dd 0C0h, 46000000h, 0F4F569D1h,	101A593Bh, 869B5h, 7ABF2D2Bh
		dd 79EAC9D1h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	0E8025004h
		dd 11D21C42h, 0A0002CBEh, 0A13DA8C9h, 214F1h, 0
		dd 0C0h, 46000000h, 0B196B286h,	101ABAB4h, 0AA009CB6h
		dd 71D3400h, 0B196B284h, 101ABAB4h, 0AA009CB6h,	71D3400h
		dd 214E4h, 0
		dd 0C0h, 46000000h, 214F4h, 0
		dd 0C0h, 46000000h, 0BCFCE0A0h,	11D0EC17h, 0A000108Dh
		dd 19270FC9h, 12Ah, 0
		dd 0C0h, 46000000h, 0B722BCCAh,	101B4E68h, 0AA00BCA2h
		dd 70474000h, 22F03340h, 101B547Dh, 8658Eh, 19D12B2Bh
		dd 20405h, 0
		dd 0C0h, 46000000h, 2040Eh, 0
		dd 0C0h, 46000000h, 20406h, 0
		dd 0C0h, 46000000h, 2040Fh, 0
		dd 0C0h, 46000000h, 110h, 0
		dd 0C0h, 46000000h, 10Eh, 0
		dd 0C0h, 46000000h, 123h, 0
		dd 0C0h, 46000000h, 124h, 0
		dd 0C0h, 46000000h, 13h, 0
		dd 0C0h, 46000000h, 14h, 0
		dd 0C0h, 46000000h, 15h, 0
		dd 0C0h, 46000000h, 20400h, 0
		dd 0C0h, 46000000h, 0DE5BF786h,	11D2477Ah, 0C0009D83h
		dd 0D018D94Fh, 121h, 0
		dd 0C0h, 46000000h, 122h, 0
		dd 0C0h, 46000000h, 4657278Bh, 11D2411Bh, 0C0009A83h, 0D018D94Fh
		dd 2E011h, 0
		dd 0C0h, 46000000h, 108h, 0
		dd 0C0h, 46000000h, 0B196B285h,	101ABAB4h, 0AA009CB6h
		dd 71D3400h, 0B196B287h, 101ABAB4h, 0AA009CB6h,	71D3400h
		dd 103h, 0
		dd 0C0h, 46000000h, 2E000h, 0
		dd 0C0h, 46000000h, 106h, 0
		dd 0C0h, 46000000h, 79EAC9C6h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h
		dd 107h, 0
		dd 0C0h, 46000000h, 214F2h, 0
		dd 0C0h, 46000000h, 102h, 0
		dd 0C0h, 46000000h, 104h, 0
		dd 0C0h, 46000000h, 0B722BCC8h,	101B4E68h, 0AA00BCA2h
		dd 70474000h, 0B3E7C340h, 11CEEF97h, 0AA00C99Bh, 18E6000h
		dd 105h, 0
		dd 0C0h, 46000000h, 13Bh, 0
		dd 0C0h, 46000000h, 139h, 0
		dd 0C0h, 46000000h, 0Dh, 0
		dd 0C0h, 46000000h, 3C374A42h, 11CFBAE4h, 0AA007DBFh, 0EE466900h
		dd 101h, 0
		dd 0C0h, 46000000h, 100h, 0
		dd 0C0h, 46000000h, 20404h, 0
		dd 0C0h, 46000000h, 1CF2B120h, 101B547Dh, 8658Eh, 19D12B2Bh
		dd 3127CA40h, 11CE446Eh, 0AA003581h, 51B84B00h,	19h, 0
		dd 0C0h, 46000000h, 214EBh, 0
		dd 0C0h, 46000000h, 214FAh, 0
		dd 0C0h, 46000000h, 1E18D10h, 11D24D8Bh, 60005D85h, 67930508h
		dd 214F0h, 0
		dd 0C0h, 46000000h, 214F3h, 0
		dd 0C0h, 46000000h, 214F8h, 0
		dd 0C0h, 46000000h, 99CAF010h, 11CF415Eh, 0AA001488h, 0F569B500h
		dd 89BCB740h, 101A6119h, 0DD00B7BCh, 0AF550601h, 0CDE725B0h
		dd 4519CCC9h, 5D327E91h, 0CEB4FA72h, 0BEF6E002h, 101AA874h
		dd 0AA00BA8Bh, 0AB0C3000h, 0BEF6E003h, 101AA874h, 0AA00BA8Bh
		dd 0AB0C3000h, 146h, 0
		dd 0C0h, 46000000h, 79EAC9C3h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h
		dd 79EAC9C7h, 11CEBAF9h, 0AA00828Ch, 0BA94B00h,	79EAC9C5h
		dd 11CEBAF9h, 0AA00828Ch, 0BA94B00h, 79EAC9C2h,	11CEBAF9h
		dd 0AA00828Ch, 0BA94B00h, 79EAC9C4h, 11CEBAF9h,	0AA00828Ch
		dd 0BA94B00h, 79EAC9D2h, 11CEBAF9h, 0AA00828Ch,	0BA94B00h
		dd 79EAC9D7h, 11CEBAFAh, 0AA00828Ch, 0BA94B00h,	11h, 0
		dd 0C0h, 46000000h, 0E6D4D90h, 11CF6738h, 0AA000896h, 0B40D6800h
		dd 0Ah,	0
		dd 0C0h, 46000000h, 2, 0
		dd 0C0h, 46000000h, 1Dh, 0
		dd 0C0h, 46000000h, 3, 0
		dd 0C0h, 46000000h, 16h, 0
		dd 0C0h, 46000000h, 0F77459A0h,	11CFBF9Ah, 0C0004EBAh
		dd 1608D74Fh, 0Fh, 0
		dd 0C0h, 46000000h, 20h, 0
		dd 0C0h, 46000000h, 214E1h, 0
		dd 0C0h, 46000000h, 214F7h, 0
		dd 0C0h, 46000000h, 0BB2761h, 11D06A77h, 0C00035A5h, 62D0D74Fh
		dd 0CB5BDC81h, 11CF93C1h, 8000208Fh, 64D02C5Fh,	0FC4801A3h
		dd 11CF2BA9h, 0AA0029A2h, 52733D00h, 111h, 0
		dd 0C0h, 46000000h, 11Eh, 0
		dd 0C0h, 46000000h, 128h, 0
		dd 0C0h, 46000000h, 129h, 0
		dd 0C0h, 46000000h, 118h, 0
		dd 0C0h, 46000000h, 0B722BCCBh,	101B4E68h, 0AA00BCA2h
		dd 70474000h, 11Bh, 0
		dd 0C0h, 46000000h, 0B196B288h,	101ABAB4h, 0AA009CB6h
		dd 71D3400h, 0B196B289h, 101ABAB4h, 0AA009CB6h,	71D3400h
		dd 0B722BCC5h, 101B4E68h, 0AA00BCA2h, 70474000h, 0B722BCC7h
		dd 101B4E68h, 0AA00BCA2h, 70474000h, 0B722BCC6h, 101B4E68h
		dd 0AA00BCA2h, 70474000h, 117h,	0
		dd 0C0h, 46000000h, 116h, 0
		dd 0C0h, 46000000h, 113h, 0
		dd 0C0h, 46000000h, 1C2056CCh, 101B5EF4h, 0AA00C88Bh, 293B3E00h
		dd 119h, 0
		dd 0C0h, 46000000h, 9C2CAD80h, 11CF3424h, 0AA0070B6h, 0D8D64C00h
		dd 922EADA0h, 11CF3424h, 0AA0070B6h, 0D8D64C00h, 115h
		dd 0
		dd 0C0h, 46000000h, 11Ch, 0
		dd 0C0h, 46000000h, 11Dh, 0
		dd 0C0h, 46000000h, 11Fh, 0
		dd 0C0h, 46000000h, 112h, 0
		dd 0C0h, 46000000h, 0A1FAF330h,	11CEEF97h, 0AA00C99Bh
		dd 18E6000h, 120h, 0
		dd 0C0h, 46000000h, 0D001F200h,	11CEEF97h, 0AA00C99Bh
		dd 18E6000h, 97D001F2h,	9B11CEEFh, 0AA00C9h, 18E60h, 894AD3B0h
		dd 11CEEF97h, 0AA00C99Bh, 18E6000h, 114h, 0
		dd 0C0h, 46000000h, 521A28F0h, 11CEE40Bh, 0AA00C9B2h, 37096800h
		dd 49384070h, 11CEE40Ah, 0AA00C9B2h, 37096800h,	9, 0
		dd 0C0h, 46000000h, 0D5F569D0h,	101A593Bh, 869B5h, 7ABF2D2Bh
		dd 11Ah, 0
		dd 0C0h, 46000000h, 376BD3AAh, 101B3845h, 8ED84h, 13C72E2Bh
		dd 10Ch, 0
		dd 0C0h, 46000000h
dword_40C5FC	dd 10Bh, 0		; DATA XREF: sub_40164F+1359o
		dd 0C0h, 46000000h, 214EAh, 0
		dd 0C0h, 46000000h, 1AC3D9F0h, 11D1175Ch, 6000BE95h, 4FEA9797h
		dd 0CEF04FDFh, 11D2FE72h, 0C000A587h, 0CF37684Fh, 0BD1AE5E0h
		dd 11CEA6AEh, 425037BDh, 0C100h, 79EAC9C9h, 11CEBAF9h
		dd 0AA00828Ch, 0BA94B00h, 37D84F60h, 11CE42CBh,	0AA003581h
		dd 51B84B00h, 22F55881h, 11D0280Bh, 0A000A9A8h,	4200CC9h
		dd 10Ah, 0
		dd 0C0h, 46000000h, 109h, 0
		dd 0C0h, 46000000h, 7FD52380h, 101B4E07h, 82DAEh, 13C72E2Bh
		dd 7BF80980h, 101ABF32h, 0AA00BB8Bh, 0AB0C3000h, 7BF80981h
		dd 101ABF32h, 0AA00BB8Bh, 0AB0C3000h, 55980BA0h, 11CF35AAh
		dd 0AA0071B6h, 0D8D64C00h, 0B722BCC9h, 101B4E68h, 0AA00BCA2h
		dd 70474000h, 0A9D758A0h, 11CF4617h, 0AA00FC95h, 0B40D6800h
		dd 214F6h, 0
		dd 0C0h, 46000000h, 55272A00h, 11CE42CBh, 0AA003581h, 51B84B00h
		dd 22F55882h, 11D0280Bh, 0A000A9A8h, 4200CC9h, 0B196B28Ah
		dd 101ABAB4h, 0AA009CB6h, 71D3400h, 9BFBBC02h, 101AEFF1h
		dd 0AA00ED84h, 71D3400h, 0B196B28Dh, 101ABAB4h,	0AA009CB6h
		dd 71D3400h, 1E44665h, 101B24ACh, 8ED84h, 13C72E2Bh, 0B196B28Ch
		dd 101ABAB4h, 0AA009CB6h, 71D3400h, 13Ah, 0
		dd 0C0h, 46000000h, 138h, 0
		dd 0C0h, 46000000h, 0B196B283h,	101ABAB4h, 0AA009CB6h
		dd 71D3400h, 0A6BC3AC0h, 11CEDBAAh, 0AA00E39Dh,	51B84B00h
		dd 27h,	0
		dd 0C0h, 46000000h, 8, 0
		dd 0C0h, 46000000h, 21500h, 0
		dd 0C0h, 46000000h, 0CF51ED10h,	11CF62FEh, 0A00086BFh
		dd 364803C9h, 0F29F6BC0h, 11CE5021h, 15AAh, 3F290169h
		dd 20D00h, 0
		dd 0C0h, 46000000h, 20D03h, 0
		dd 0C0h, 46000000h, 12h, 0
		dd 0C0h, 46000000h, 4, 0
		dd 0C0h, 46000000h, 0D5F56B60h,	101A593Bh, 869B5h, 7ABF2D2Bh
		dd 7, 0
		dd 0C0h, 46000000h, 0D5F56A34h,	101A593Bh, 869B5h, 7ABF2D2Bh
		dd 3BD5F56Ah, 0B5101A59h, 2B000869h, 7ABF2Dh, 5, 0
		dd 0C0h, 46000000h, 0D5F56AFCh,	101A593Bh, 869B5h, 7ABF2D2Bh
		dd 126h, 0
		dd 0C0h, 46000000h, 10h, 0
		dd 0C0h, 46000000h, 0EAB22AC4h,	11CF30C1h, 0EBA7h, 0BAE5BC0h
		dd 0C733A30h, 11CE2A1Ch, 0AA00E5ADh, 3D774400h,	0F4F569D0h
		dd 101A593Bh, 869B5h, 7ABF2D2Bh, 13Eh, 0
		dd 0C0h, 46000000h, 6D5140C1h, 11CE7436h, 0AA003480h, 0FA096000h
		dd 214E2h, 0
		dd 0C0h, 46000000h, 214EFh, 0
		dd 0C0h, 46000000h, 214FCh, 0
		dd 0C0h, 46000000h, 214F5h, 0
		dd 0C0h, 46000000h, 214FBh, 0
		dd 0C0h, 46000000h, 0EAB22AC1h,	11CF30C1h, 0EBA7h, 0BAE5BC0h
		dd 214E8h, 0
		dd 0C0h, 46000000h, 214E6h, 0
		dd 0C0h, 46000000h, 93F2F68Ch, 11D31D1Bh, 0C0000EA3h, 0D1AB794Fh
		dd 214E5h, 0
		dd 0C0h, 46000000h, 0C6C4200h, 11D0C589h, 0C0009A99h, 0E155D64Fh
dword_40C9CC	dd 214EEh, 0		; DATA XREF: sub_40164F+131Do
		dd 0C0h, 46000000h, 45E2B4AEh, 11D0B1C3h, 0A0002FB9h, 0E11203C9h
		dd 214F9h, 0
		dd 0C0h, 46000000h, 214E9h, 0
		dd 0C0h, 46000000h, 214E3h, 0
		dd 0C0h, 46000000h, 88E39E80h, 11CF3578h, 869AEh, 62122E2Bh
		dd 742B0E01h, 101B14E6h, 0AA004E91h, 0AB0C3000h, 0B196B28Bh
		dd 101ABAB4h, 0AA009CB6h, 71D3400h, 18h, 0
		dd 0C0h, 46000000h, 0Bh, 0
		dd 0C0h, 46000000h, 0Ch, 0
		dd 0C0h, 46000000h, 26h, 0
		dd 0C0h, 46000000h, 6, 0
		dd 0C0h, 46000000h, 0DF0B3D60h,	101B548Fh, 8658Eh, 19D12B2Bh
		dd 548793C0h, 11CF9E74h, 0A0005596h, 234903C9h,	0D5F78C80h
		dd 11CF5252h, 0AA00FA90h, 6E104200h, 20410h, 0
		dd 0C0h, 46000000h, 20403h, 0
		dd 0C0h, 46000000h, 20401h, 0
		dd 0C0h, 46000000h, 20412h, 0
		dd 0C0h, 46000000h, 20402h, 0
		dd 0C0h, 46000000h, 20411h, 0
		dd 0C0h, 46000000h, 0FBF23B80h,	101BE3F0h, 0AA008884h
		dd 0F8563E00h, 3C374A41h, 11CFBAE4h, 0AA007DBFh, 0EE466900h
		dd 10Dh, 0
		dd 0C0h, 46000000h, 127h, 0
		dd 0C0h, 46000000h, 3AF24292h, 11CE0C96h, 0AA00CFA0h, 0B80A6000h
		dd 0EAB22AC1h, 11CF30C1h, 0EBA7h, 0BAE5BC0h, 0D30C1661h
		dd 11D0CDAFh, 0C0003E8Ah, 6EE2C94Fh, 2DF05h, 0
		dd 0C0h, 46000000h, 79EAC9D8h, 11CEBAFAh, 0AA00828Ch, 0BA94B00h
		dd 79EAC9D6h, 11CEBAFAh, 0AA00828Ch, 0BA94B00h,	79EAC9D5h
		dd 11CEBAFAh, 0AA00828Ch, 0BA94B00h, 20430h, 0
		dd 0C0h, 46000000h, 1EA4DBF0h, 11CF3C3Bh, 0AA000C81h, 719B3800h
		dd 0EAB22AC0h, 11CF30C1h, 0EBA7h, 0BAE5BC0h, 2DE0Eh, 0
		dd 0C0h, 46000000h, 2DE18h, 0
		dd 0C0h, 46000000h, 2DE1Eh, 0
		dd 0C0h, 46000000h, 2DE19h, 0
		dd 0C0h, 46000000h, 2DE0Fh, 0
		dd 0C0h, 46000000h, 2DE12h, 0
		dd 0C0h, 46000000h, 2DE21h, 0
		dd 0C0h, 46000000h, 2DE01h, 0
		dd 0C0h, 46000000h, 2DE0Bh, 0
		dd 0C0h, 46000000h, 2DE0Dh, 0
		dd 0C0h, 46000000h, 2DE02h, 0
		dd 0C0h, 46000000h, 2DE1Fh, 0
		dd 0C0h, 46000000h, 2DE04h, 0
		dd 0C0h, 46000000h, 2DE0Ch, 0
		dd 0C0h, 46000000h, 2DE05h, 0
		dd 0C0h, 46000000h, 2DE1Ch, 0
		dd 0C0h, 46000000h, 2DE06h, 0
		dd 0C0h, 46000000h, 2DE13h, 0
		dd 0C0h, 46000000h, 2DE10h, 0
		dd 0C0h, 46000000h, 2DE22h, 0
		dd 0C0h, 46000000h, 2DE09h, 0
		dd 0C0h, 46000000h, 2DE23h, 0
		dd 0C0h, 46000000h, 2DE0Ah, 0
		dd 0C0h, 46000000h, 2DE1Dh, 0
		dd 0C0h, 46000000h, 2DE11h, 0
		dd 0C0h, 46000000h, 2DE15h, 0
		dd 0C0h, 46000000h, 2DE1Bh, 0
		dd 0C0h, 46000000h, 2DE16h, 0
		dd 0C0h, 46000000h, 2DE20h, 0
		dd 0C0h, 46000000h, 2DE07h, 0
		dd 0C0h, 46000000h, 2DE1Ah, 0
		dd 0C0h, 46000000h, 2DE17h, 0
		dd 0C0h, 46000000h, 2DE14h, 0
		dd 0C0h, 46000000h, 2DE03h, 0
		dd 0C0h, 46000000h, 2DE08h, 0
		dd 0C0h, 46000000h, 0B722BE00h,	101B4E68h, 0AA00BCA2h
		dd 70474000h, 0FC4801A5h, 11CF2BA9h, 0AA0029A2h, 52733D00h
		dd 69h dup(0)
_rdata		ends

; Section 4. (virtual address 0000D000)
; Virtual size			: 0001ABD0 ( 109520.)
; Section size in file		: 00000000 (	  0.)
; Offset to raw	data for section: 00000000
; Flags	C0300080: Bss Readable Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Uninitialized
; Segment permissions: Read/Write
_bss		segment	dword public 'BSS' use32
		assume cs:_bss
		;org 40D000h
		assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
dword_40D000	dd ?			; DATA XREF: sub_401414+10r
					; sub_401463+6r ...
dword_40D004	dd 100h	dup(?)		; DATA XREF: sub_401414+24o
					; sub_40164F+4D5o ...
byte_40D404	db ?			; DATA XREF: sub_401630+9o
					; sub_40164F+5FCo ...
		align 4
		dd 0FFh	dup(?)
dword_40D804	dd ?			; DATA XREF: sub_40164F+5D1o
					; sub_40164F+60Ao ...
		dd 2FFh	dup(?)
dword_40E404	dd ?			; DATA XREF: sub_40164F+AA6r
					; sub_40164F+AE3r ...
dword_40E408	dd ?			; DATA XREF: sub_40164F+E43w
					; sub_40164F+E94o
		dd 3 dup(?)
dword_40E418	dd ?			; DATA XREF: sub_40164F+E60w
byte_40E41C	db ?			; DATA XREF: sub_40164F+E6Dw
byte_40E41D	db ?			; DATA XREF: sub_40164F+E83w
byte_40E41E	db ?			; DATA XREF: sub_40164F+E78w
byte_40E41F	db ?			; DATA XREF: sub_40164F+E52w
		dd ?
dword_40E424	dd 8 dup(?)		; DATA XREF: sub_40164F+E59o
dword_40E444	dd 200h	dup(?)		; DATA XREF: sub_40164F+142Fo
					; sub_40164F+146Co
dword_40EC44	dd ?			; DATA XREF: sub_4038C8+6r
					; sub_403B03+69w ...
dword_40EC48	dd ?			; DATA XREF: sub_4038C8+Br
					; sub_4038C8+1Dr ...
dword_40EC4C	dd ?			; DATA XREF: sub_40399A+Dr
					; sub_40399A:loc_4039BAw ...
dword_40EC50	dd 2000h dup(?)		; DATA XREF: sub_403EA7+E2o
					; sub_403EA7+137o ...
dword_416C50	dd 6 dup(?)		; DATA XREF: sub_403B03:loc_403BFFo
					; sub_403EA7+283o
dword_416C68	dd ?			; DATA XREF: sub_403B03+B6w
dword_416C6C	dd ?			; DATA XREF: sub_403B03+C0w
					; sub_403B03+16Er ...
dword_416C70	dd ?			; DATA XREF: sub_403B03+101w
					; sub_403B03+122r
dword_416C74	dd ?			; DATA XREF: sub_403B03+10Bw
		dd 18h dup(?)
dword_416CD8	dd ?			; DATA XREF: sub_403B03+31r
					; sub_403B03+87r ...
dword_416CDC	dd ?			; DATA XREF: sub_403B03:loc_403B7Fr
					; sub_403EA7+31Cw
dword_416CE0	dd ?			; DATA XREF: sub_403B03+Br
					; sub_403B03+DDr ...
dword_416CE4	dd 1000h dup(?)		; DATA XREF: sub_403B03+8Do
					; sub_403B03+B6o ...
dword_41ACE4	dd ?			; DATA XREF: sub_403B03+13r
					; sub_403B03+41r ...
dword_41ACE8	dd 2000h dup(?)		; DATA XREF: sub_403B03+101o
					; sub_403B03+128o ...
dword_422CE8	dd 100h	dup(?)		; DATA XREF: start+329o start+33Bo ...
dword_4230E8	dd ?			; DATA XREF: sub_4048A4+Br
					; sub_4048CC+9r ...
dword_4230EC	dd ?			; DATA XREF: sub_40164F+2137r
					; sub_404F6A+4CEr ...
byte_4230F0	db ?			; DATA XREF: sub_404BDA+5Do
					; sub_404BDA+ACo ...
		align 4
		dd 3FFh	dup(?)
dword_4240F0	dd ?			; DATA XREF: sub_405E99+25Do
					; sub_405E99+36Fo ...
dword_4240F4	dd ?			; DATA XREF: sub_405E99+242w
		align 10h
dword_424100	dd ?			; DATA XREF: sub_405E99+251w
dword_424104	dd ?			; DATA XREF: sub_405E99+24Cw
		dd 3 dup(?)
dword_424114	dd ?			; DATA XREF: sub_405E99+257w
					; sub_405E99+3A8w
dword_424118	dd ?			; DATA XREF: sub_404CFC+B0r
					; sub_404F6A+510r ...
dword_42411C	dd ?			; DATA XREF: sub_404F6A+2Cw
					; sub_404F6A+A0w ...
dword_424120	dd ?			; DATA XREF: sub_4049D7+12r
					; sub_404AF4+Ar ...
dword_424124	dd ?			; DATA XREF: sub_4049D7+6r
					; sub_404F6A+6Bw ...
dword_424128	dd ?			; DATA XREF: sub_404F6A+180r
					; sub_404F6A+66Fw ...
dword_42412C	dd ?			; DATA XREF: sub_404F6A+394w
					; sub_4056A9+Cr ...
dword_424130	dd 100h	dup(?)		; DATA XREF: sub_4056A9+160o
dword_424530	dd ?			; DATA XREF: sub_4056A9:loc_4058A3w
					; sub_4056A9+40Ar ...
dword_424534	dd 100h	dup(?)		; DATA XREF: sub_4056A9+258o
					; sub_4056A9+291o ...
dword_424934	dd ?			; DATA XREF: sub_4063B0+84w
					; sub_4063B0+2DBr ...
dword_424938	dd ?			; DATA XREF: sub_4063B0+A1w
					; sub_406CC1:loc_406D26r ...
dword_42493C	dd ?			; DATA XREF: sub_4063B0+CFw
					; sub_406CC1+D6r
dword_424940	dd ?			; DATA XREF: sub_4063B0+10Ew
					; sub_4063B0+124r ...
dword_424944	dd ?			; DATA XREF: sub_404AAD+10r
					; sub_404AAD+32w ...
dword_424948	dd ?			; DATA XREF: sub_405AE3+191w
					; sub_405AE3+1B8r ...
byte_42494C	db ?			; DATA XREF: sub_406DB2+27o
					; sub_406DB2:loc_406DEBo ...
		align 10h
		dd 1FFh	dup(?)
dword_42514C	dd ?			; DATA XREF: sub_407478+10w
					; sub_407478+1Ao
		dd 10h dup(?)
byte_425190	db ?			; DATA XREF: sub_4081E7+78o
					; sub_4081E7+97o ...
		align 4
		dd 0FFh	dup(?)
dword_425590	dd 100h	dup(?)		; DATA XREF: sub_407E3C+Bo
					; sub_407E3C+1Do ...
dword_425990	dd ?			; DATA XREF: sub_407F46+3Ew
					; sub_407F46+77o ...
		dd 0FFh	dup(?)
dword_425D90	dd 100h	dup(?)		; DATA XREF: sub_407F46+A6o
					; sub_407F46+CDo ...
dword_426190	dd 100h	dup(?)		; DATA XREF: sub_407F46+E5o
					; sub_407F46+21Fo
dword_426590	dd 50h dup(?)		; DATA XREF: sub_407E04+9o
					; sub_407E04+2Co
dword_4266D0	dd ?			; DATA XREF: sub_4084E4+31w
					; sub_4084E4+54r
dword_4266D4	dd ?			; DATA XREF: sub_4084E4+1r
		dd 0FEh	dup(?)
dword_426AD0	dd ?			; DATA XREF: sub_40164F+128w
					; sub_40164F:loc_401796r
		dd 0Dh dup(?)
dword_426B08	dd ?			; DATA XREF: sub_40164F+121r
					; sub_40164F+139w ...
dword_426B0C	dd ?			; DATA XREF: sub_40148F+26r
					; sub_40164F+1727r ...
dword_426B10	dd ?			; DATA XREF: sub_40164F+646w
					; sub_40164F:loc_4037DEw ...
dword_426B14	dd ?			; DATA XREF: sub_4049D7+Br
					; sub_404B4E+5Aw ...
dword_426B18	dd ?			; DATA XREF: sub_407F46:loc_4081D7w
dword_426B1C	dd ?			; DATA XREF: sub_40164F:loc_402C2Fw
					; start:loc_404757r
		dd ?
dword_426B24	dd ?			; DATA XREF: sub_405E99+CAw
dword_426B28	dd ?			; DATA XREF: sub_403B03+CFr
					; sub_403EA7+182w ...
dword_426B2C	dd ?			; DATA XREF: sub_4056A9+3D4w
dword_426B30	dd ?			; DATA XREF: sub_404CFC+55w
					; sub_407536+28r
dword_426B34	dd ?			; DATA XREF: start:loc_404709w
					; start:loc_404872r
dword_426B38	dd ?			; DATA XREF: sub_40148F+7r
					; sub_4014F3+17r ...
dword_426B3C	dd ?			; DATA XREF: sub_40164F+681w
					; sub_40164F+6A8w ...
dword_426B40	dd ?			; DATA XREF: sub_40164F:loc_4027D8r
					; start+2Ew ...
dword_426B44	dd ?			; DATA XREF: sub_4063B0+74w
					; sub_4063B0+6B0w
; HINSTANCE hInstance
hInstance	dd ?			; DATA XREF: sub_401000+38r
					; sub_401388+1Cr ...
dword_426B4C	dd ?			; DATA XREF: sub_403EA7+398o
					; sub_404F6A+BAr
dword_426B50	dd ?			; DATA XREF: sub_404F6A+142r
					; sub_404F6A+165r
dword_426B54	dd ?			; DATA XREF: sub_401220+1r
					; sub_40128F+Cr ...
dword_426B58	dd ?			; DATA XREF: sub_401220:loc_401280r
					; sub_40128F:loc_40132Br ...
dword_426B5C	dd ?			; DATA XREF: sub_4037F0+1Ar
		dd ?
dword_426B64	dd ?			; DATA XREF: sub_405AE3:loc_405B17r
					; sub_405E99+FCr ...
		dd ?
dword_426B6C	dd ?			; DATA XREF: sub_404CFC+24r
dword_426B70	dd ?			; DATA XREF: sub_404CFC+15r
dword_426B74	dd ?			; DATA XREF: sub_40164F:loc_402370r
		dd 3 dup(?)
dword_426B84	dd ?			; DATA XREF: sub_403CF2+10r
		dd ?
dword_426B8C	dd ?			; DATA XREF: sub_40399A+50r
					; sub_403B03+26w ...
dword_426B90	dd ?			; DATA XREF: sub_403EA7+359w
					; sub_405E99+C5r ...
dword_426B94	dd ?			; DATA XREF: sub_403EA7+35Er
					; sub_403EA7+36Cw ...
dword_426B98	dd ?			; DATA XREF: sub_40164F+1E37r
					; sub_403EA7:loc_403F82r ...
dword_426B9C	dd ?			; DATA XREF: start+3Fw	sub_407B23+15Dr
dword_426BA0	dd ?			; DATA XREF: sub_401000+20r
					; sub_40164F+13r ...
dword_426BA4	dd ?			; DATA XREF: sub_40399A:loc_403A37r
					; start+BFw ...
dword_426BA8	dd 200h	dup(?)		; DATA XREF: sub_401000+1B3o start+7Fo ...
dword_4273A8	dd ?			; DATA XREF: sub_40164F:loc_4016CAw
					; sub_404A75+Bw ...
dword_4273AC	dd ?			; DATA XREF: sub_40164F:loc_4017EBr
					; sub_406EF2+68w ...
dword_4273B0	dd ?			; DATA XREF: sub_40164F:loc_401804r
					; sub_406DB2+9r ...
dword_4273B4	dd ?			; DATA XREF: sub_4037F0+56r
					; sub_4037F0+68w ...
dword_4273B8	dd ?			; DATA XREF: sub_404F6A+77r
					; sub_405E99+227w
dword_4273BC	dd ?			; DATA XREF: sub_4037F0+50r
					; sub_406EF2+B8w
dword_4273C0	dd ?			; DATA XREF: sub_404A43+6r
					; sub_404BDA+10Ar ...
dword_4273C4	dd ?			; DATA XREF: sub_404CFC+4Cw
					; sub_404F6A:loc_40532Fr ...
dword_4273C8	dd ?			; DATA XREF: sub_406DB2+86r
					; sub_406EF2+7Cw ...
dword_4273CC	dd ?			; DATA XREF: sub_404CFC:loc_404D77w
					; sub_4056A9:loc_405A2Br ...
byte_4273D0	db ?			; DATA XREF: sub_4056A9+1D1o
					; sub_4056A9+1E4o ...
byte_4273D1	db 3 dup(?)		; DATA XREF: sub_405E99+14Co
					; sub_405E99+151o
		align 1000h
_bss		ends

; Section 5. (virtual address 00028000)
; Virtual size			: 00001304 (   4868.)
; Section size in file		: 00001400 (   5120.)
; Offset to raw	data for section: 0000B000
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Externs
; _idata


;
; Imports from ADVAPI32.DLL
;
; LSTATUS __stdcall RegCloseKey(HKEY hKey)
		extrn RegCloseKey:dword	; CODE XREF: sub_4014F3+59p
					; sub_4014F3+B7p ...
; LSTATUS __stdcall RegCreateKeyExA(HKEY hKey, LPCSTR lpSubKey,	DWORD Reserved,	LPSTR lpClass, DWORD dwOptions,	REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult, LPDWORD lpdwDisposition)
		extrn RegCreateKeyExA:dword ; CODE XREF: sub_40164F+17C6p
					; DATA XREF: sub_40164F+17C6r
; LSTATUS __stdcall RegDeleteKeyA(HKEY hKey, LPCSTR lpSubKey)
		extrn RegDeleteKeyA:dword ; CODE XREF: sub_4014F3+104p
					; DATA XREF: sub_4014F3+104r
; LSTATUS __stdcall RegDeleteValueA(HKEY hKey, LPCSTR lpValueName)
		extrn RegDeleteValueA:dword ; CODE XREF: sub_40164F+16F8p
					; DATA XREF: sub_40164F+16F8r
; LSTATUS __stdcall RegEnumKeyA(HKEY hKey, DWORD dwIndex, LPSTR	lpName,	DWORD cchName)
		extrn RegEnumKeyA:dword	; CODE XREF: sub_40164F+19B8p
					; DATA XREF: sub_4014F3:loc_40156Cr ...
; LSTATUS __stdcall RegEnumValueA(HKEY hKey, DWORD dwIndex, LPSTR lpValueName, LPDWORD lpcchValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData)
		extrn RegEnumValueA:dword ; CODE XREF: sub_40164F+19FBp
					; DATA XREF: sub_40164F+19FBr
; LSTATUS __stdcall RegOpenKeyExA(HKEY hKey, LPCSTR lpSubKey, DWORD ulOptions, REGSAM samDesired, PHKEY	phkResult)
		extrn RegOpenKeyExA:dword ; CODE XREF: sub_40148F+4Cp
					; sub_4014F3+38p ...
; LSTATUS __stdcall RegQueryValueExA(HKEY hKey,	LPCSTR lpValueName, LPDWORD lpReserved,	LPDWORD	lpType,	LPBYTE lpData, LPDWORD lpcbData)
		extrn RegQueryValueExA:dword ; CODE XREF: sub_40164F+18E9p
					; sub_4078A4+75p
					; DATA XREF: ...
; LSTATUS __stdcall RegSetValueExA(HKEY	hKey, LPCSTR lpValueName, DWORD	Reserved, DWORD	dwType,	const BYTE *lpData, DWORD cbData)
		extrn RegSetValueExA:dword ; CODE XREF:	sub_40164F+1863p
					; DATA XREF: sub_40164F+1863r

;
; Imports from COMCTL32.DLL
;
; int __stdcall	ImageList_AddMasked(HIMAGELIST himl, HBITMAP hbmImage, COLORREF	crMask)
		extrn ImageList_AddMasked:dword	; CODE XREF: sub_4063B0+11Ep
					; DATA XREF: sub_4063B0+11Er
; HIMAGELIST __stdcall ImageList_Create(int cx,	int cy,	UINT flags, int	cInitial, int cGrow)
		extrn ImageList_Create:dword ; CODE XREF: sub_4063B0+FBp
					; DATA XREF: sub_4063B0+FBr
; BOOL __stdcall ImageList_Destroy(HIMAGELIST himl)
		extrn ImageList_Destroy:dword ;	CODE XREF: sub_4063B0+682p
					; DATA XREF: sub_4063B0+682r
; void __stdcall InitCommonControls()
		extrn InitCommonControls:dword ; CODE XREF: start+Cp
					; DATA XREF: start+Cr

;
; Imports from GDI32.dll
;
; HBRUSH __stdcall CreateBrushIndirect(const LOGBRUSH *plbrush)
		extrn CreateBrushIndirect:dword	; CODE XREF: sub_401000+EEp
					; sub_404E8E+C5p
					; DATA XREF: ...
; HFONT	__stdcall CreateFontIndirectA(const LOGFONTA *lplf)
		extrn CreateFontIndirectA:dword	; CODE XREF: sub_401000+13Cp
					; sub_40164F+E9Bp
					; DATA XREF: ...
; BOOL __stdcall DeleteObject(HGDIOBJ ho)
		extrn DeleteObject:dword ; CODE	XREF: sub_401000+115p
					; sub_401000+1D8p ...
; int __stdcall	GetDeviceCaps(HDC hdc, int index)
		extrn GetDeviceCaps:dword ; CODE XREF: sub_40164F+E15p
					; DATA XREF: sub_40164F+E15r
; HGDIOBJ __stdcall SelectObject(HDC hdc, HGDIOBJ h)
		extrn SelectObject:dword ; CODE	XREF: sub_401000+18Dp
					; sub_401000+1D1p
					; DATA XREF: ...
; COLORREF __stdcall SetBkColor(HDC hdc, COLORREF color)
		extrn SetBkColor:dword	; CODE XREF: sub_404E8E+9Ap
					; DATA XREF: sub_404E8E+9Ar
; int __stdcall	SetBkMode(HDC hdc, int mode)
		extrn SetBkMode:dword	; CODE XREF: sub_401000+166p
					; sub_404E8E+69p
					; DATA XREF: ...
; COLORREF __stdcall SetTextColor(HDC hdc, COLORREF color)
		extrn SetTextColor:dword ; CODE	XREF: sub_401000+178p
					; sub_404E8E+57p
					; DATA XREF: ...

;
; Imports from KERNEL32.dll
;
; BOOL __stdcall CloseHandle(HANDLE hObject)
		extrn CloseHandle:dword	; CODE XREF: sub_40164F+6E3p
					; sub_40164F+101Cp ...
; LONG __stdcall CompareFileTime(const FILETIME	*lpFileTime1, const FILETIME *lpFileTime2)
		extrn CompareFileTime:dword ; CODE XREF: sub_40164F+542p
					; DATA XREF: sub_40164F+542r
; BOOL __stdcall CopyFileA(LPCSTR lpExistingFileName, LPCSTR lpNewFileName, BOOL bFailIfExists)
		extrn CopyFileA:dword	; CODE XREF: start+364p
					; DATA XREF: start+302r
; BOOL __stdcall CreateDirectoryA(LPCSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
		extrn CreateDirectoryA:dword ; CODE XREF: sub_404264+44p
					; start+2B3p
					; DATA XREF: ...
; HANDLE __stdcall CreateFileA(LPCSTR lpFileName, DWORD	dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes,	DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE	hTemplateFile)
		extrn CreateFileA:dword	; CODE XREF: sub_403EA7+2DBp
					; sub_4077D6+4Cp
					; DATA XREF: ...
; BOOL __stdcall CreateProcessA(LPCSTR lpApplicationName, LPSTR	lpCommandLine, LPSECURITY_ATTRIBUTES lpProcessAttributes, LPSECURITY_ATTRIBUTES	lpThreadAttributes, BOOL bInheritHandles, DWORD	dwCreationFlags, LPVOID	lpEnvironment, LPCSTR lpCurrentDirectory, LPSTARTUPINFOA lpStartupInfo,	LPPROCESS_INFORMATION lpProcessInformation)
		extrn CreateProcessA:dword ; CODE XREF:	sub_407478+5Dp
					; DATA XREF: sub_407478+5Dr
; HANDLE __stdcall CreateThread(LPSECURITY_ATTRIBUTES lpThreadAttributes, SIZE_T dwStackSize, LPTHREAD_START_ROUTINE lpStartAddress, LPVOID lpParameter, DWORD dwCreationFlags,	LPDWORD	lpThreadId)
		extrn CreateThread:dword ; CODE	XREF: sub_406EF2+2D6p
					; DATA XREF: sub_406EF2+2D6r
; BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
		extrn DeleteFileA:dword	; CODE XREF: sub_40164F+1FA6p
					; start+1EEp ...
; void __stdcall ExitProcess(UINT uExitCode)
		extrn ExitProcess:dword	; CODE XREF: start:loc_404880p
					; DATA XREF: start:loc_404880r
; DWORD	__stdcall ExpandEnvironmentStringsA(LPCSTR lpSrc, LPSTR	lpDst, DWORD nSize)
		extrn ExpandEnvironmentStringsA:dword ;	CODE XREF: sub_40164F+94Cp
					; DATA XREF: sub_40164F+94Cr
; BOOL __stdcall FindClose(HANDLE hFindFile)
		extrn FindClose:dword	; CODE XREF: sub_40164F+1CFFp
					; sub_407E04+26p ...
; HANDLE __stdcall FindFirstFileA(LPCSTR lpFileName, LPWIN32_FIND_DATAA	lpFindFileData)
		extrn FindFirstFileA:dword ; CODE XREF:	sub_40164F+1D85p
					; sub_407E04+14p ...
; BOOL __stdcall FindNextFileA(HANDLE hFindFile, LPWIN32_FIND_DATAA lpFindFileData)
		extrn FindNextFileA:dword ; CODE XREF: sub_40164F+1D36p
					; sub_4081E7+1F9p
					; DATA XREF: ...
; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
		extrn FreeLibrary:dword	; CODE XREF: sub_40164F+1280p
					; sub_4048CC+35p
					; DATA XREF: ...
; LPSTR	__stdcall GetCommandLineA()
		extrn GetCommandLineA:dword ; CODE XREF: start+8Dp
					; DATA XREF: start+8Dr
; HANDLE __stdcall GetCurrentProcess()
		extrn GetCurrentProcess:dword ;	CODE XREF: start+48Bp
					; DATA XREF: start+48Br
; BOOL __stdcall GetDiskFreeSpaceA(LPCSTR lpRootPathName, LPDWORD lpSectorsPerCluster, LPDWORD lpBytesPerSector, LPDWORD lpNumberOfFreeClusters, LPDWORD lpTotalNumberOfClusters)
		extrn GetDiskFreeSpaceA:dword ;	CODE XREF: sub_4056A9+32Bp
					; DATA XREF: sub_4056A9+32Br
; BOOL __stdcall GetExitCodeProcess(HANDLE hProcess, LPDWORD lpExitCode)
		extrn GetExitCodeProcess:dword ; CODE XREF: sub_40164F+FE5p
					; DATA XREF: sub_40164F+FE5r
; DWORD	__stdcall GetFileAttributesA(LPCSTR lpFileName)
		extrn GetFileAttributesA:dword ; CODE XREF: sub_40164F+285p
					; sub_405E99+18Dp ...
; DWORD	__stdcall GetFileSize(HANDLE hFile, LPDWORD lpFileSizeHigh)
		extrn GetFileSize:dword	; CODE XREF: sub_403EA7+B3p
					; sub_407F46+147p
					; DATA XREF: ...
; DWORD	__stdcall GetFullPathNameA(LPCSTR lpFileName, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart)
		extrn GetFullPathNameA:dword ; CODE XREF: sub_40164F+3AFp
					; DATA XREF: sub_40164F+3AFr
; DWORD	__stdcall GetLastError()
		extrn GetLastError:dword ; CODE	XREF: sub_40164F+26Cp
					; DATA XREF: sub_40164F+26Cr
; DWORD	__stdcall GetModuleFileNameA(HMODULE hModule, LPCH lpFilename, DWORD nSize)
		extrn GetModuleFileNameA:dword ; CODE XREF: sub_403EA7+3Bp
					; DATA XREF: sub_403EA7+3Br
; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
		extrn GetModuleHandleA:dword ; CODE XREF: sub_40164F+11B7p
					; start+ACp ...
; DWORD	__stdcall GetPrivateProfileStringA(LPCSTR lpAppName, LPCSTR lpKeyName, LPCSTR lpDefault, LPSTR lpReturnedString, DWORD nSize, LPCSTR lpFileName)
		extrn GetPrivateProfileStringA:dword ; CODE XREF: sub_40164F+16A9p
					; DATA XREF: sub_40164F+16A9r
; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
		extrn GetProcAddress:dword ; CODE XREF:	sub_40164F+11F1p
					; sub_407EF3+42p
					; DATA XREF: ...
; DWORD	__stdcall GetShortPathNameA(LPCSTR lpszLongPath, LPSTR lpszShortPath, DWORD cchBuffer)
		extrn GetShortPathNameA:dword ;	CODE XREF: sub_40164F+42Dp
					; sub_407F46+82p ...
; UINT __stdcall GetSystemDirectoryA(LPSTR lpBuffer, UINT uSize)
		extrn GetSystemDirectoryA:dword	; CODE XREF: sub_407B23+131p
					; DATA XREF: sub_407B23+131r
; UINT __stdcall GetTempFileNameA(LPCSTR lpPathName, LPCSTR lpPrefixString, UINT uUnique, LPSTR	lpTempFileName)
		extrn GetTempFileNameA:dword ; CODE XREF: sub_407832+51p
					; DATA XREF: sub_407832+51r
; DWORD	__stdcall GetTempPathA(DWORD nBufferLength, LPSTR lpBuffer)
		extrn GetTempPathA:dword ; CODE	XREF: start+19Cp
					; DATA XREF: start+19Cr
; DWORD	__stdcall GetTickCount()
		extrn GetTickCount:dword ; CODE	XREF: sub_40399A:loc_4039E4p
					; sub_403B03+19p ...
; DWORD	__stdcall GetVersion()
		extrn GetVersion:dword	; CODE XREF: sub_407B23+84p
					; DATA XREF: sub_407B23+84r
; UINT __stdcall GetWindowsDirectoryA(LPSTR lpBuffer, UINT uSize)
		extrn GetWindowsDirectoryA:dword ; CODE	XREF: start+1BCp
					; sub_407B23+14Dp
					; DATA XREF: ...
; HGLOBAL __stdcall GlobalAlloc(UINT uFlags, SIZE_T dwBytes)
		extrn GlobalAlloc:dword	; CODE XREF: sub_40164F+B64p
					; sub_40164F+10E7p ...
; HGLOBAL __stdcall GlobalFree(HGLOBAL hMem)
		extrn GlobalFree:dword	; CODE XREF: sub_40164F+B47p
					; sub_40164F+117Dp ...
; LPVOID __stdcall GlobalLock(HGLOBAL hMem)
		extrn GlobalLock:dword	; CODE XREF: sub_406EF2+4FCp
					; DATA XREF: sub_406EF2+4FCr
; BOOL __stdcall GlobalUnlock(HGLOBAL hMem)
		extrn GlobalUnlock:dword ; CODE	XREF: sub_406EF2+545p
					; DATA XREF: sub_406EF2+545r
; HMODULE __stdcall LoadLibraryA(LPCSTR	lpLibFileName)
		extrn LoadLibraryA:dword ; CODE	XREF: sub_405E99+358p
					; sub_405E99+366p ...
; HMODULE __stdcall LoadLibraryExA(LPCSTR lpLibFileName, HANDLE	hFile, DWORD dwFlags)
		extrn LoadLibraryExA:dword ; CODE XREF:	sub_40164F+11D7p
					; DATA XREF: sub_40164F+11D7r
; BOOL __stdcall MoveFileA(LPCSTR lpExistingFileName, LPCSTR lpNewFileName)
		extrn MoveFileA:dword	; CODE XREF: sub_40164F+327p
					; DATA XREF: sub_40164F+327r
; int __stdcall	MulDiv(int nNumber, int	nNumerator, int	nDenominator)
		extrn MulDiv:dword	; CODE XREF: sub_40164F+E38p
					; sub_4037F0+70p ...
; int __stdcall	MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr,	int cchWideChar)
		extrn MultiByteToWideChar:dword	; CODE XREF: sub_40164F+1452p
					; DATA XREF: sub_40164F+1452r
; BOOL __stdcall ReadFile(HANDLE hFile,	LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
		extrn ReadFile:dword	; CODE XREF: sub_40164F+1BA3p
					; sub_403A85+2Cp ...
; BOOL __stdcall RemoveDirectoryA(LPCSTR lpPathName)
		extrn RemoveDirectoryA:dword ; CODE XREF: sub_4081E7+255p
					; DATA XREF: sub_4081E7+255r
; DWORD	__stdcall SearchPathA(LPCSTR lpPath, LPCSTR lpFileName,	LPCSTR lpExtension, DWORD nBufferLength, LPSTR lpBuffer, LPSTR *lpFilePart)
		extrn SearchPathA:dword	; CODE XREF: sub_40164F+46Bp
					; DATA XREF: sub_40164F+46Br
; BOOL __stdcall SetCurrentDirectoryA(LPCSTR lpPathName)
		extrn SetCurrentDirectoryA:dword ; CODE	XREF: sub_40164F+2CCp
					; start+2C2p
					; DATA XREF: ...
; UINT __stdcall SetErrorMode(UINT uMode)
		extrn SetErrorMode:dword ; CODE	XREF: start+19p
					; DATA XREF: start+19r
; BOOL __stdcall SetFileAttributesA(LPCSTR lpFileName, DWORD dwFileAttributes)
		extrn SetFileAttributesA:dword ; CODE XREF: sub_40164F+1EFp
					; sub_4077A4+23p
					; DATA XREF: ...
; DWORD	__stdcall SetFilePointer(HANDLE	hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
		extrn SetFilePointer:dword ; CODE XREF:	sub_40164F+1C21p
					; sub_40164F+1CB8p ...
; BOOL __stdcall SetFileTime(HANDLE hFile, const FILETIME *lpCreationTime, const FILETIME *lpLastAccessTime, const FILETIME *lpLastWriteTime)
		extrn SetFileTime:dword	; CODE XREF: sub_40164F+6D5p
					; DATA XREF: sub_40164F+6D5r
; void __stdcall Sleep(DWORD dwMilliseconds)
		extrn Sleep:dword	; CODE XREF: sub_40164F+F8p
					; DATA XREF: sub_40164F+F8r
; DWORD	__stdcall WaitForSingleObject(HANDLE hHandle, DWORD dwMilliseconds)
		extrn WaitForSingleObject:dword	; CODE XREF: sub_40164F+FD0p
					; DATA XREF: sub_40164F+FAEr
; BOOL __stdcall WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite,	LPDWORD	lpNumberOfBytesWritten,	LPOVERLAPPED lpOverlapped)
		extrn WriteFile:dword	; CODE XREF: sub_40164F+1B15p
					; sub_40164F+1F4Cp ...
; BOOL __stdcall WritePrivateProfileStringA(LPCSTR lpAppName, LPCSTR lpKeyName,	LPCSTR lpString, LPCSTR	lpFileName)
		extrn WritePrivateProfileStringA:dword ; CODE XREF: sub_40164F+163Dp
					; DATA XREF: sub_40164F+163Dr
; LPSTR	__stdcall lstrcatA(LPSTR lpString1, LPCSTR lpString2)
		extrn lstrcatA:dword	; CODE XREF: sub_4075AA+35p
					; sub_407B23+208p ...
; int __stdcall	lstrcmpA(LPCSTR	lpString1, LPCSTR lpString2)
		extrn lstrcmpA:dword	; CODE XREF: sub_40164F:loc_401F67p
					; sub_40164F+96Ep
					; DATA XREF: ...
; int __stdcall	lstrcmpiA(LPCSTR lpString1, LPCSTR lpString2)
		extrn lstrcmpiA:dword	; CODE XREF: sub_40164F+910p
					; start+269p ...
; LPSTR	__stdcall lstrcpynA(LPSTR lpString1, LPCSTR lpString2, int iMaxLength)
		extrn lstrcpynA:dword	; CODE XREF: sub_404AAD+21p
					; sub_407A11+1Bp
					; DATA XREF: ...
; int __stdcall	lstrlenA(LPCSTR	lpString)
		extrn lstrlenA:dword	; CODE XREF: sub_4075AA+Dp
					; sub_407620+Ep ...

;
; Imports from OLE32.dll
;
; HRESULT __stdcall CoCreateInstance(const IID *const rclsid, LPUNKNOWN	pUnkOuter, DWORD dwClsContext, const IID *const	riid, LPVOID *ppv)
		extrn CoCreateInstance:dword ; CODE XREF: sub_40164F+133Cp
					; DATA XREF: sub_40164F+133Cr
; void __stdcall CoTaskMemFree(LPVOID pv)
		extrn CoTaskMemFree:dword ; CODE XREF: sub_4056A9+190p
					; sub_407B23+1D9p
					; DATA XREF: ...
; HRESULT __stdcall OleInitialize(LPVOID pvReserved)
		extrn OleInitialize:dword ; CODE XREF: start+27p
					; sub_404B4E+27p
					; DATA XREF: ...
; void __stdcall OleUninitialize()
		extrn OleUninitialize:dword ; CODE XREF: start+408p
					; sub_404B4E+77p
					; DATA XREF: ...

;
; Imports from SHELL32.DLL
;
; LPITEMIDLIST __stdcall SHBrowseForFolderA(LPBROWSEINFOA lpbi)
		extrn SHBrowseForFolderA:dword ; CODE XREF: sub_4056A9+17Ep
					; DATA XREF: sub_4056A9+17Er
; int __stdcall	SHFileOperationA(LPSHFILEOPSTRUCTA lpFileOp)
		extrn SHFileOperationA:dword ; CODE XREF: sub_40164F+157Dp
					; DATA XREF: sub_40164F+157Dr
; DWORD_PTR __stdcall SHGetFileInfoA(LPCSTR pszPath, DWORD dwFileAttributes, SHFILEINFOA *psfi,	UINT cbFileInfo, UINT uFlags)
		extrn SHGetFileInfoA:dword ; CODE XREF:	start+6Ep
					; DATA XREF: start+6Er
; BOOL __stdcall SHGetPathFromIDListA(LPCITEMIDLIST pidl, LPSTR	pszPath)
		extrn SHGetPathFromIDListA:dword ; CODE	XREF: sub_404DF4+4Dp
					; sub_407B23+1C8p
					; DATA XREF: ...
; HRESULT __stdcall SHGetSpecialFolderLocation(HWND hwnd, int csidl, LPITEMIDLIST *ppidl)
		extrn SHGetSpecialFolderLocation:dword ; CODE XREF: sub_407B23+1B1p
					; DATA XREF: sub_407B23+1B1r
; HINSTANCE __stdcall ShellExecuteA(HWND hwnd, LPCSTR lpOperation, LPCSTR lpFile, LPCSTR lpParameters, LPCSTR lpDirectory, INT nShowCmd)
		extrn ShellExecuteA:dword ; CODE XREF: sub_40164F+F5Fp
					; sub_405AE3+2F0p
					; DATA XREF: ...

;
; Imports from USER32.dll
;
; BOOL __stdcall AppendMenuA(HMENU hMenu, UINT uFlags, UINT_PTR	uIDNewItem, LPCSTR lpNewItem)
		extrn AppendMenuA:dword	; CODE XREF: sub_406EF2+419p
					; DATA XREF: sub_406EF2+419r
; HDC __stdcall	BeginPaint(HWND	hWnd, LPPAINTSTRUCT lpPaint)
		extrn BeginPaint:dword	; CODE XREF: sub_401000+45p
					; DATA XREF: sub_401000+45r
; LRESULT __stdcall CallWindowProcA(WNDPROC lpPrevWndFunc, HWND	hWnd, UINT Msg,	WPARAM wParam, LPARAM lParam)
		extrn CallWindowProcA:dword ; CODE XREF: sub_406CC1+DEp
					; DATA XREF: sub_406CC1+DEr
; LPSTR	__stdcall CharNextA(LPCSTR lpsz)
		extrn CharNextA:dword	; CODE XREF: start+E7p	sub_4075F0+1Bp	...
; LPSTR	__stdcall CharPrevA(LPCSTR lpszStart, LPCSTR lpszCurrent)
		extrn CharPrevA:dword	; CODE XREF: sub_4075AA+1Dp
					; sub_407620+29p ...
; BOOL __stdcall CheckDlgButton(HWND hDlg, int nIDButton, UINT uCheck)
		extrn CheckDlgButton:dword ; CODE XREF:	sub_405AE3+9Ap
					; DATA XREF: sub_405AE3+9Ar
; BOOL __stdcall CloseClipboard()
		extrn CloseClipboard:dword ; CODE XREF:	sub_406EF2+55Fp
					; DATA XREF: sub_406EF2+55Fr
; HWND __stdcall CreateDialogParamA(HINSTANCE hInstance, LPCSTR	lpTemplateName,	HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
		extrn CreateDialogParamA:dword ; CODE XREF: sub_40399A+C5p
					; sub_404F6A+3F0p
					; DATA XREF: ...
; HMENU	__stdcall CreatePopupMenu()
		extrn CreatePopupMenu:dword ; CODE XREF: sub_406EF2+3E4p
					; DATA XREF: sub_406EF2+3E4r
; HWND __stdcall CreateWindowExA(DWORD dwExStyle, LPCSTR lpClassName, LPCSTR lpWindowName, DWORD dwStyle, int X, int Y,	int nWidth, int	nHeight, HWND hWndParent, HMENU	hMenu, HINSTANCE hInstance, LPVOID lpParam)
		extrn CreateWindowExA:dword ; CODE XREF: sub_405E99+2F9p
					; DATA XREF: sub_405E99+2F9r
; LRESULT __stdcall DefWindowProcA(HWND	hWnd, UINT Msg,	WPARAM wParam, LPARAM lParam)
		extrn DefWindowProcA:dword ; CODE XREF:	sub_401000+20Dp
					; DATA XREF: sub_401000+20Dr
; BOOL __stdcall DestroyWindow(HWND hWnd)
		extrn DestroyWindow:dword ; CODE XREF: sub_40399A+19p
					; sub_404F6A+17Ap ...
; INT_PTR __stdcall DialogBoxParamA(HINSTANCE hInstance, LPCSTR	lpTemplateName,	HWND hWndParent, DLGPROC lpDialogFunc, LPARAM dwInitParam)
		extrn DialogBoxParamA:dword ; CODE XREF: sub_405E99+3F2p
					; DATA XREF: sub_405E99+3F2r
; LRESULT __stdcall DispatchMessageA(const MSG *lpMsg)
		extrn DispatchMessageA:dword ; CODE XREF: sub_408494+1Ap
					; DATA XREF: sub_408494+1Ar
; int __stdcall	DrawTextA(HDC hdc, LPCSTR lpchText, int	cchText, LPRECT	lprc, UINT format)
		extrn DrawTextA:dword	; CODE XREF: sub_401000+1BBp
					; DATA XREF: sub_401000+1BBr
; BOOL __stdcall EmptyClipboard()
		extrn EmptyClipboard:dword ; CODE XREF:	sub_406EF2+4DEp
					; DATA XREF: sub_406EF2+4DEr
; BOOL __stdcall EnableMenuItem(HMENU hMenu, UINT uIDEnableItem, UINT uEnable)
		extrn EnableMenuItem:dword ; CODE XREF:	sub_404F6A+2A4p
					; DATA XREF: sub_404F6A+2A4r
; BOOL __stdcall EnableWindow(HWND hWnd, BOOL bEnable)
		extrn EnableWindow:dword ; CODE	XREF: sub_40164F:loc_402535p
					; sub_404AF4+12p ...
; BOOL __stdcall EndDialog(HWND	hDlg, INT_PTR nResult)
		extrn EndDialog:dword	; CODE XREF: sub_404F6A+197p
					; DATA XREF: sub_404F6A+197r
; BOOL __stdcall EndPaint(HWND hWnd, const PAINTSTRUCT *lpPaint)
		extrn EndPaint:dword	; CODE XREF: sub_401000+1ECp
					; DATA XREF: sub_401000+1ECr
; BOOL __stdcall ExitWindowsEx(UINT uFlags, DWORD dwReason)
		extrn ExitWindowsEx:dword ; CODE XREF: start+532p
					; DATA XREF: start+532r
; int __stdcall	FillRect(HDC hDC, const	RECT *lprc, HBRUSH hbr)
		extrn FillRect:dword	; CODE XREF: sub_401000+109p
					; DATA XREF: sub_401000+109r
; HWND __stdcall FindWindowExA(HWND hWndParent,	HWND hWndChildAfter, LPCSTR lpszClass, LPCSTR lpszWindow)
		extrn FindWindowExA:dword ; CODE XREF: sub_40164F+C94p
					; DATA XREF: sub_40164F+C94r
; HINSTANCE GetClassInfoA
		extrn GetClassInfoA:dword ; CODE XREF: sub_405E99+386p
					; sub_405E99+3A6p
					; DATA XREF: ...
; BOOL __stdcall GetClientRect(HWND hWnd, LPRECT lpRect)
		extrn GetClientRect:dword ; CODE XREF: sub_401000+63p
					; sub_40164F+D73p ...
; HDC __stdcall	GetDC(HWND hWnd)
		extrn GetDC:dword	; CODE XREF: sub_40164F+E03p
					; DATA XREF: sub_40164F+E03r
; HWND GetDlgItem
		extrn GetDlgItem:dword	; CODE XREF: sub_40164F+D04p
					; sub_40164F+D5Cp ...
; UINT __stdcall GetDlgItemTextA(HWND hDlg, int	nIDDlgItem, LPSTR lpString, int	cchMax)
		extrn GetDlgItemTextA:dword ; CODE XREF: sub_407505+24p
					; DATA XREF: sub_407505+24r
; DWORD	__stdcall GetMessagePos()
		extrn GetMessagePos:dword ; CODE XREF: sub_4062F2+38p
					; DATA XREF: sub_4062F2+38r
; DWORD	__stdcall GetSysColor(int nIndex)
		extrn GetSysColor:dword	; CODE XREF: sub_404E8E+43p
					; sub_404E8E+80p ...
; HMENU	__stdcall GetSystemMenu(HWND hWnd, BOOL	bRevert)
		extrn GetSystemMenu:dword ; CODE XREF: sub_404F6A+27Fp
					; sub_404F6A:loc_4051F7p
					; DATA XREF: ...
; int __stdcall	GetSystemMetrics(int nIndex)
		extrn GetSystemMetrics:dword ; CODE XREF: sub_406EF2+D9p
					; DATA XREF: sub_406EF2+D9r
; LONG __stdcall GetWindowLongA(HWND hWnd, int nIndex)
		extrn GetWindowLongA:dword ; CODE XREF:	sub_404E8E+26p
					; sub_4063B0+3CFp
					; DATA XREF: ...
; BOOL __stdcall GetWindowRect(HWND hWnd, LPRECT lpRect)
		extrn GetWindowRect:dword ; CODE XREF: sub_404F6A+430p
					; sub_406EF2+432p
					; DATA XREF: ...
; BOOL __stdcall InvalidateRect(HWND hWnd, const RECT *lpRect, BOOL bErase)
		extrn InvalidateRect:dword ; CODE XREF:	sub_40164F+217Ep
					; sub_4063B0+87Ap
					; DATA XREF: ...
; BOOL __stdcall IsWindow(HWND hWnd)
		extrn IsWindow:dword	; CODE XREF: sub_40164F+CCCp
					; DATA XREF: sub_40164F+CCCr
; BOOL __stdcall IsWindowEnabled(HWND hWnd)
		extrn IsWindowEnabled:dword ; CODE XREF: sub_404F6A+61Cp
					; DATA XREF: sub_404F6A+61Cr
; BOOL __stdcall IsWindowVisible(HWND hWnd)
		extrn IsWindowVisible:dword ; CODE XREF: sub_406CC1+3Cp
					; DATA XREF: sub_406CC1+3Cr
; HBITMAP __stdcall LoadBitmapA(HINSTANCE hInstance, LPCSTR lpBitmapName)
		extrn LoadBitmapA:dword	; CODE XREF: sub_4063B0+9Bp
					; DATA XREF: sub_4063B0+9Br
; HCURSOR __stdcall LoadCursorA(HINSTANCE hInstance, LPCSTR lpCursorName)
		extrn LoadCursorA:dword	; CODE XREF: sub_405AE3+2B6p
					; DATA XREF: sub_405AE3+29Br
; HANDLE __stdcall LoadImageA(HINSTANCE	hInst, LPCSTR name, UINT type, int cx, int cy, UINT fuLoad)
		extrn LoadImageA:dword	; CODE XREF: sub_40164F+DBAp
					; sub_405E99+21Ap
					; DATA XREF: ...
; int __stdcall	MessageBoxIndirectA(const MSGBOXPARAMSA	*lpmbp)
		extrn MessageBoxIndirectA:dword	; CODE XREF: sub_407536+69p
					; DATA XREF: sub_407536+69r
; BOOL __stdcall OpenClipboard(HWND hWndNewOwner)
		extrn OpenClipboard:dword ; CODE XREF: sub_406EF2+4D7p
					; DATA XREF: sub_406EF2+4D7r
; BOOL __stdcall PeekMessageA(LPMSG lpMsg, HWND	hWnd, UINT wMsgFilterMin, UINT wMsgFilterMax, UINT wRemoveMsg)
		extrn PeekMessageA:dword ; CODE	XREF: sub_408494+3Cp
					; DATA XREF: sub_408494+Fr
; void __stdcall PostQuitMessage(int nExitCode)
		extrn PostQuitMessage:dword ; CODE XREF: sub_40164F+9Ap
					; DATA XREF: sub_40164F+9Ar
; ATOM __stdcall RegisterClassA(const WNDCLASSA	*lpWndClass)
		extrn RegisterClassA:dword ; CODE XREF:	sub_405E99+264p
					; sub_405E99+3BCp
					; DATA XREF: ...
; BOOL __stdcall ScreenToClient(HWND hWnd, LPPOINT lpPoint)
		extrn ScreenToClient:dword ; CODE XREF:	sub_404F6A+43Fp
					; sub_4062F2+54p
					; DATA XREF: ...
; HWND SendMessageA
		extrn SendMessageA:dword ; CODE	XREF: sub_40164F+C52p
					; sub_40164F+DDAp ...
; LRESULT __stdcall SendMessageTimeoutA(HWND hWnd, UINT	Msg, WPARAM wParam, LPARAM lParam, UINT	fuFlags, UINT uTimeout,	PDWORD_PTR lpdwResult)
		extrn SendMessageTimeoutA:dword	; CODE XREF: sub_40164F+C2Ep
					; DATA XREF: sub_40164F+C2Er
; DWORD	__stdcall SetClassLongA(HWND hWnd, int nIndex, LONG dwNewLong)
		extrn SetClassLongA:dword ; CODE XREF: sub_404F6A+8Bp
					; DATA XREF: sub_404F6A+8Br
; HANDLE __stdcall SetClipboardData(UINT uFormat, HANDLE hMem)
		extrn SetClipboardData:dword ; CODE XREF: sub_406EF2+557p
					; DATA XREF: sub_406EF2+557r
; HWND SetCursor
		extrn SetCursor:dword	; CODE XREF: sub_405AE3+2C3p
					; sub_405AE3+312p
					; DATA XREF: ...
; BOOL __stdcall SetDlgItemTextA(HWND hDlg, int	nIDDlgItem, LPCSTR lpString)
		extrn SetDlgItemTextA:dword ; DATA XREF: sub_4074FA+1r
; BOOL __stdcall SetForegroundWindow(HWND hWnd)
		extrn SetForegroundWindow:dword	; CODE XREF: sub_40164F+10Fp
					; DATA XREF: sub_40164F+10Fr
; UINT_PTR __stdcall SetTimer(HWND hWnd, UINT_PTR nIDEvent, UINT uElapse, TIMERPROC lpTimerFunc)
		extrn SetTimer:dword	; CODE XREF: sub_4038FA+30p
					; DATA XREF: sub_4038FA+30r
; LONG __stdcall SetWindowLongA(HWND hWnd, int nIndex, LONG dwNewLong)
		extrn SetWindowLongA:dword ; CODE XREF:	sub_40164F+D41p
					; sub_404F6A+5BDp ...
; BOOL __stdcall SetWindowPos(HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags)
		extrn SetWindowPos:dword ; CODE	XREF: sub_404F6A+47Fp
					; sub_404F6A+544p
					; DATA XREF: ...
; BOOL __stdcall SetWindowTextA(HWND hWnd, LPCSTR lpString)
		extrn SetWindowTextA:dword ; CODE XREF:	sub_4038FA+76p
					; sub_404CFC+B8p ...
; BOOL __stdcall ShowWindow(HWND hWnd, int nCmdShow)
		extrn ShowWindow:dword	; CODE XREF: sub_40164F+1ADp
					; sub_40164F+1CEp ...
; BOOL __stdcall SystemParametersInfoA(UINT uiAction, UINT uiParam, PVOID pvParam, UINT	fWinIni)
		extrn SystemParametersInfoA:dword ; CODE XREF: sub_405E99+294p
					; DATA XREF: sub_405E99+294r
; BOOL __stdcall TrackPopupMenu(HMENU hMenu, UINT uFlags, int x, int y,	int nReserved, HWND hWnd, const	RECT *prcRect)
		extrn TrackPopupMenu:dword ; CODE XREF:	sub_406EF2+473p
					; DATA XREF: sub_406EF2+473r
; int wsprintfA(LPSTR, LPCSTR, ...)
		extrn wsprintfA:dword	; CODE XREF: sub_40164F+A98p
					; sub_4038FA+69p ...

;
; Imports from VERSION.dll
;
; BOOL __stdcall GetFileVersionInfoA(LPCSTR lptstrFilename, DWORD dwHandle, DWORD dwLen, LPVOID	lpData)
		extrn __imp_GetFileVersionInfoA:dword ;	DATA XREF: GetFileVersionInfoAr
; DWORD	__stdcall GetFileVersionInfoSizeA(LPCSTR lptstrFilename, LPDWORD lpdwHandle)
		extrn __imp_GetFileVersionInfoSizeA:dword
					; DATA XREF: GetFileVersionInfoSizeAr
; BOOL __stdcall VerQueryValueA(LPCVOID	pBlock,	LPCSTR lpSubBlock, LPVOID *lplpBuffer, PUINT puLen)
		extrn __imp_VerQueryValueA:dword ; DATA	XREF: VerQueryValueAr


; Section 6. (virtual address 0002A000)
; Virtual size			: 0000E000 (  57344.)
; Section size in file		: 00000400 (   1024.)
; Offset to raw	data for section: 0000C400
; Flags	C0300040: Data Readable	Writable
; Alignment	: 4 bytes
; ===========================================================================

; Segment type:	Pure data
; Segment permissions: Read/Write
_ndata		segment	dword public 'DATA' use32
		assume cs:_ndata
		;org 42A000h
dword_42A000	dd 0			; DATA XREF: sub_40160F+Fo
					; sub_40164F+37o ...
		dd 0FFh	dup(0)
word_42A400	dw ?			; DATA XREF: start+308w
					; start:loc_4046E4w
		align 4
		dd 12FFh dup(?)
byte_42F000	db ?			; DATA XREF: start+93o	start+B2r ...
byte_42F001	db 3 dup(?)		; DATA XREF: start+BAo
		dd 0FFh	dup(?)
byte_42F400	db ?			; DATA XREF: start+159o start+27Fo ...
		align 4
		dd 0FFh	dup(?)
dword_42F800	dd 100h	dup(?)		; DATA XREF: sub_40164F+2BBo
					; sub_40164F:loc_401B32o ...
dword_42FC00	dd 100h	dup(?)		; DATA XREF: sub_403EA7+7Bo
					; sub_403EA7+89o ...
dword_430000	dd ?			; DATA XREF: sub_404264+54o
					; start:loc_40450Eo ...
		dd 0FFh	dup(?)
dword_430400	dd 100h	dup(?)		; DATA XREF: sub_403EA7+294o
					; sub_404264+6o ...
dword_430800	dd 100h	dup(?)		; DATA XREF: sub_4042C8+4Fo
dword_430C00	dd 100h	dup(?)		; DATA XREF: sub_403EA7+22o
					; sub_403EA7+54o ...
dword_431000	dd 200h	dup(?)		; DATA XREF: sub_403EA7+9Ao
dword_431800	dd 1A00h dup(?)		; DATA XREF: sub_404F6A+1AFo
_ndata		ends


		end start
